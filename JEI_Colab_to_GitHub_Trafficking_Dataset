{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/rusmiyaaqid/JEI-NLP-Trafficking-Detection-Tool/blob/main/JEI_Colab_to_GitHub_Trafficking_Dataset\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "RM3s-Z_vKG1a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1444198-3fa8-4575-d5e7-c150210aedf7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uGkROMzDLEDx",
        "outputId": "82cc1cef-d5ff-409c-9272-ac9071871e56"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting statsmodels==0.13.2\n",
            "  Downloading statsmodels-0.13.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.1 kB)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from statsmodels==0.13.2) (1.26.4)\n",
            "Requirement already satisfied: scipy>=1.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels==0.13.2) (1.13.1)\n",
            "Requirement already satisfied: pandas>=0.25 in /usr/local/lib/python3.10/dist-packages (from statsmodels==0.13.2) (2.1.4)\n",
            "Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels==0.13.2) (0.5.6)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels==0.13.2) (24.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25->statsmodels==0.13.2) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25->statsmodels==0.13.2) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25->statsmodels==0.13.2) (2024.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels==0.13.2) (1.16.0)\n",
            "Downloading statsmodels-0.13.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.0 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.0/10.0 MB\u001b[0m \u001b[31m22.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: statsmodels\n",
            "  Attempting uninstall: statsmodels\n",
            "    Found existing installation: statsmodels 0.14.2\n",
            "    Uninstalling statsmodels-0.14.2:\n",
            "      Successfully uninstalled statsmodels-0.14.2\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "plotnine 0.12.4 requires statsmodels>=0.14.0, but you have statsmodels 0.13.2 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed statsmodels-0.13.2\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.13.2)\n",
            "Collecting statsmodels\n",
            "  Using cached statsmodels-0.14.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.2 kB)\n",
            "Using cached statsmodels-0.14.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.8 MB)\n",
            "Installing collected packages: statsmodels\n",
            "  Attempting uninstall: statsmodels\n",
            "    Found existing installation: statsmodels 0.13.2\n",
            "    Uninstalling statsmodels-0.13.2:\n",
            "      Successfully uninstalled statsmodels-0.13.2\n",
            "Successfully installed statsmodels-0.14.2\n"
          ]
        }
      ],
      "source": [
        "#conda create -name venv\n",
        "#source activate name_of_my_env\n",
        "#!pip install conda pandas==0.24.2;\n",
        "#from statsmodels.compat.pandas import PD_LT_2\n",
        "import pandas as pd\n",
        "!pip install statsmodels==0.13.2;\n",
        "!pip3 install --upgrade --no-deps statsmodels\n",
        "\n",
        "#!pip install statsmodels --pgrade;\n",
        "import numpy as np\n",
        "import os"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "MFlPN-WiKHkL"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "filepath = '/content/drive/MyDrive/Rusmiya Aqid'\n",
        "os.chdir(filepath)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ec5JjBoILkBk",
        "outputId": "3c34233b-02c6-44b6-ba16-3cbae8dee0ad"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-237d5e5f19bd>:2: DtypeWarning: Columns (6,55,57) have mixed types. Specify dtype option on import or set low_memory=False.\n",
            "  glob = pd.read_csv(\"global_dataset.csv\")\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "glob = pd.read_csv(\"global_dataset.csv\")\n",
        "glob = glob.iloc[:, 1:]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "VRXHkAT8z6-_",
        "outputId": "132f8ab0-f655-490b-fa46-6a009663a603"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       yearOfRegistration       Datasource  gender ageBroad majorityStatus  \\\n",
              "0                    2002  Case Management  Female   18--20          Adult   \n",
              "1                    2002  Case Management  Female   18--20          Adult   \n",
              "2                    2002  Case Management  Female   18--20          Adult   \n",
              "3                    2002  Case Management  Female   18--20          Adult   \n",
              "4                    2002  Case Management  Female   18--20          Adult   \n",
              "...                   ...              ...     ...      ...            ...   \n",
              "48796                2019  Case Management  Female      -99            -99   \n",
              "48797                2019  Case Management  Female      -99            -99   \n",
              "48798                2019  Case Management  Female      -99            -99   \n",
              "48799                2019  Case Management  Female      -99            -99   \n",
              "48800                2019  Case Management  Female      -99            -99   \n",
              "\n",
              "      majorityStatusAtExploit majorityEntry citizenship  \\\n",
              "0                         -99           -99          CO   \n",
              "1                         -99           -99          CO   \n",
              "2                         -99           -99          CO   \n",
              "3                         -99           -99          CO   \n",
              "4                         -99           -99          CO   \n",
              "...                       ...           ...         ...   \n",
              "48796                   Adult           -99          UG   \n",
              "48797                   Adult           -99          UG   \n",
              "48798                   Adult           -99          UG   \n",
              "48799                   Minor           -99          UG   \n",
              "48800                   Adult           -99          UG   \n",
              "\n",
              "       meansOfControlDebtBondage  meansOfControlTakesEarnings  ...  \\\n",
              "0                            -99                          -99  ...   \n",
              "1                            -99                          -99  ...   \n",
              "2                            -99                          -99  ...   \n",
              "3                            -99                          -99  ...   \n",
              "4                            -99                          -99  ...   \n",
              "...                          ...                          ...  ...   \n",
              "48796                          0                            0  ...   \n",
              "48797                          0                            0  ...   \n",
              "48798                          0                            0  ...   \n",
              "48799                          0                            0  ...   \n",
              "48800                          0                            0  ...   \n",
              "\n",
              "       typeOfSexPrivateSexualServices  typeOfSexConcatenated  isAbduction  \\\n",
              "0                                 -99                    -99          -99   \n",
              "1                                 -99                    -99          -99   \n",
              "2                                 -99                    -99          -99   \n",
              "3                                 -99                    -99          -99   \n",
              "4                                 -99                    -99          -99   \n",
              "...                               ...                    ...          ...   \n",
              "48796                             -99                    -99            0   \n",
              "48797                             -99                    -99            0   \n",
              "48798                             -99                    -99            0   \n",
              "48799                             -99                    -99            0   \n",
              "48800                             -99                    -99            0   \n",
              "\n",
              "       RecruiterRelationship  CountryOfExploitation  \\\n",
              "0                        -99                    -99   \n",
              "1                        -99                    -99   \n",
              "2                        -99                    -99   \n",
              "3                        -99                    -99   \n",
              "4                        -99                    -99   \n",
              "...                      ...                    ...   \n",
              "48796                    -99                     UG   \n",
              "48797                    -99                     UG   \n",
              "48798                    -99                     UG   \n",
              "48799                    -99                     UG   \n",
              "48800                    -99                     UG   \n",
              "\n",
              "       recruiterRelationIntimatePartner  recruiterRelationFriend  \\\n",
              "0                                     0                        0   \n",
              "1                                     0                        0   \n",
              "2                                     0                        0   \n",
              "3                                     0                        0   \n",
              "4                                     0                        0   \n",
              "...                                 ...                      ...   \n",
              "48796                               -99                      -99   \n",
              "48797                               -99                      -99   \n",
              "48798                               -99                      -99   \n",
              "48799                               -99                      -99   \n",
              "48800                               -99                      -99   \n",
              "\n",
              "       recruiterRelationFamily  recruiterRelationOther  \\\n",
              "0                            0                       0   \n",
              "1                            0                       0   \n",
              "2                            0                       0   \n",
              "3                            0                       0   \n",
              "4                            0                       0   \n",
              "...                        ...                     ...   \n",
              "48796                      -99                     -99   \n",
              "48797                      -99                     -99   \n",
              "48798                      -99                     -99   \n",
              "48799                      -99                     -99   \n",
              "48800                      -99                     -99   \n",
              "\n",
              "       recruiterRelationUnknown  \n",
              "0                             1  \n",
              "1                             1  \n",
              "2                             1  \n",
              "3                             1  \n",
              "4                             1  \n",
              "...                         ...  \n",
              "48796                       -99  \n",
              "48797                       -99  \n",
              "48798                       -99  \n",
              "48799                       -99  \n",
              "48800                       -99  \n",
              "\n",
              "[48801 rows x 63 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d362a322-8047-452a-bf98-c208d9aef13f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>yearOfRegistration</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>gender</th>\n",
              "      <th>ageBroad</th>\n",
              "      <th>majorityStatus</th>\n",
              "      <th>majorityStatusAtExploit</th>\n",
              "      <th>majorityEntry</th>\n",
              "      <th>citizenship</th>\n",
              "      <th>meansOfControlDebtBondage</th>\n",
              "      <th>meansOfControlTakesEarnings</th>\n",
              "      <th>...</th>\n",
              "      <th>typeOfSexPrivateSexualServices</th>\n",
              "      <th>typeOfSexConcatenated</th>\n",
              "      <th>isAbduction</th>\n",
              "      <th>RecruiterRelationship</th>\n",
              "      <th>CountryOfExploitation</th>\n",
              "      <th>recruiterRelationIntimatePartner</th>\n",
              "      <th>recruiterRelationFriend</th>\n",
              "      <th>recruiterRelationFamily</th>\n",
              "      <th>recruiterRelationOther</th>\n",
              "      <th>recruiterRelationUnknown</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2002</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>18--20</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>CO</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2002</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>18--20</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>CO</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2002</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>18--20</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>CO</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2002</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>18--20</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>CO</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2002</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>18--20</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>CO</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48796</th>\n",
              "      <td>2019</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48797</th>\n",
              "      <td>2019</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48798</th>\n",
              "      <td>2019</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48799</th>\n",
              "      <td>2019</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>Minor</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48800</th>\n",
              "      <td>2019</td>\n",
              "      <td>Case Management</td>\n",
              "      <td>Female</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>Adult</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>0</td>\n",
              "      <td>-99</td>\n",
              "      <td>UG</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "      <td>-99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>48801 rows × 63 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d362a322-8047-452a-bf98-c208d9aef13f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d362a322-8047-452a-bf98-c208d9aef13f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d362a322-8047-452a-bf98-c208d9aef13f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-02780ad2-d820-4f6d-8483-3b9766645cd4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02780ad2-d820-4f6d-8483-3b9766645cd4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-02780ad2-d820-4f6d-8483-3b9766645cd4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_9f11129e-1b01-4917-a031-a4b901b3851f\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('glob')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_9f11129e-1b01-4917-a031-a4b901b3851f button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('glob');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "glob"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "glob"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "cabPz38RLqkq"
      },
      "outputs": [],
      "source": [
        "incidents = glob.groupby(by=\"citizenship\", as_index=False).agg({\"Datasource\":\"count\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "o7GtobSg0L2W",
        "outputId": "d32d1af6-d9d6-43b4-fea4-80b008151ca5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   citizenship  Datasource\n",
              "0          -99         278\n",
              "1           00        8858\n",
              "2           AF          97\n",
              "3           AL          22\n",
              "4           BD          11\n",
              "5           BF          33\n",
              "6           BG         342\n",
              "7           BO          18\n",
              "8           BY        1463\n",
              "9           CD          53\n",
              "10          CI          31\n",
              "11          CN          23\n",
              "12          CO         124\n",
              "13          ER          13\n",
              "14          GH         544\n",
              "15          GN          15\n",
              "16          GW         145\n",
              "17          HT         339\n",
              "18          ID        1971\n",
              "19          KE          32\n",
              "20          KG         437\n",
              "21          KH        1979\n",
              "22          KR          12\n",
              "23          KZ          54\n",
              "24          LA         126\n",
              "25          LK          85\n",
              "26          MD        5901\n",
              "27          MG          94\n",
              "28          ML          45\n",
              "29          MM        1250\n",
              "30          MX          19\n",
              "31          NE          31\n",
              "32          NG         108\n",
              "33          NP          27\n",
              "34          PH       11365\n",
              "35          RO         655\n",
              "36          SL          81\n",
              "37          SN          70\n",
              "38          TH          55\n",
              "39          TJ          43\n",
              "40          TM          26\n",
              "41          UA        7761\n",
              "42          UG          98\n",
              "43          US        3636\n",
              "44          UZ         261\n",
              "45          VN         170"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d743cf85-de46-496d-904d-9c48084bcf4b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-99</td>\n",
              "      <td>278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>00</td>\n",
              "      <td>8858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AF</td>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AL</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BD</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>BF</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>BG</td>\n",
              "      <td>342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>BO</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>BY</td>\n",
              "      <td>1463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>CD</td>\n",
              "      <td>53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>CI</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>CN</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>CO</td>\n",
              "      <td>124</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>ER</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>GH</td>\n",
              "      <td>544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>GN</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>GW</td>\n",
              "      <td>145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>HT</td>\n",
              "      <td>339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>ID</td>\n",
              "      <td>1971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>KE</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>KG</td>\n",
              "      <td>437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>KH</td>\n",
              "      <td>1979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>KR</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>KZ</td>\n",
              "      <td>54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>LA</td>\n",
              "      <td>126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>LK</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>MD</td>\n",
              "      <td>5901</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>MG</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>ML</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>MM</td>\n",
              "      <td>1250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>MX</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>NE</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>NG</td>\n",
              "      <td>108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>NP</td>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>PH</td>\n",
              "      <td>11365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>RO</td>\n",
              "      <td>655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>SL</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>SN</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>TH</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>TJ</td>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>TM</td>\n",
              "      <td>26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>UA</td>\n",
              "      <td>7761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>UG</td>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>US</td>\n",
              "      <td>3636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>UZ</td>\n",
              "      <td>261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>VN</td>\n",
              "      <td>170</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d743cf85-de46-496d-904d-9c48084bcf4b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d743cf85-de46-496d-904d-9c48084bcf4b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d743cf85-de46-496d-904d-9c48084bcf4b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-27325311-ac7f-47ca-a626-1389feec2971\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27325311-ac7f-47ca-a626-1389feec2971')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-27325311-ac7f-47ca-a626-1389feec2971 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b42de7f8-147b-44bf-819f-e7df3cc372e9\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('incidents')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b42de7f8-147b-44bf-819f-e7df3cc372e9 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('incidents');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "incidents",
              "summary": "{\n  \"name\": \"incidents\",\n  \"rows\": 46,\n  \"fields\": [\n    {\n      \"column\": \"citizenship\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 46,\n        \"samples\": [\n          \"TJ\",\n          \"LK\",\n          \"MD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Datasource\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2481,\n        \"min\": 11,\n        \"max\": 11365,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          26,\n          85,\n          5901\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "incidents"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "4FMoApkgAcVf"
      },
      "outputs": [],
      "source": [
        "pop = pd.read_csv(\"Population.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "Esdsze7AAfoL"
      },
      "outputs": [],
      "source": [
        "incidents = incidents.merge(pop, left_on=\"citizenship\", right_on=\"ISO-3166 Code\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "-A9nXa730v9C",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7e86649c-cc78-44ea-c1f8-94e6cec528f9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   citizenship  Datasource                           Country ISO-3166 Code  \\\n",
              "0           AF          97                       Afghanistan            AF   \n",
              "1           AL          22                           Albania            AL   \n",
              "2           BD          11                        Bangladesh            BD   \n",
              "3           BF          33                      Burkina Faso            BF   \n",
              "4           BG         342                          Bulgaria            BG   \n",
              "5           BO          18                           Bolivia            BO   \n",
              "6           BY        1463                           Belarus            BY   \n",
              "7           CD          53  Democratic Republic of the Congo            CD   \n",
              "8           CI          31                     Cote d'Ivoire            CI   \n",
              "9           CN          23                             China            CN   \n",
              "10          CO         124                          Colombia            CO   \n",
              "11          ER          13                           Eritrea            ER   \n",
              "12          GH         544                             Ghana            GH   \n",
              "13          GN          15                            Guinea            GN   \n",
              "14          GW         145                     Guinea-Bissau            GW   \n",
              "15          HT         339                             Haiti            HT   \n",
              "16          ID        1971                         Indonesia            ID   \n",
              "17          KE          32                             Kenya            KE   \n",
              "18          KG         437                        Kyrgyzstan            KG   \n",
              "19          KH        1979                          Cambodia            KH   \n",
              "20          KR          12                 Republic of Korea            KR   \n",
              "21          KZ          54                        Kazakhstan            KZ   \n",
              "22          LA         126  Lao People's Democratic Republic            LA   \n",
              "23          LK          85                         Sri Lanka            LK   \n",
              "24          MD        5901               Republic of Moldova            MD   \n",
              "25          MG          94                        Madagascar            MG   \n",
              "26          ML          45                              Mali            ML   \n",
              "27          MM        1250                           Myanmar            MM   \n",
              "28          MX          19                            Mexico            MX   \n",
              "29          NE          31                             Niger            NE   \n",
              "30          NG         108                           Nigeria            NG   \n",
              "31          NP          27                             Nepal            NP   \n",
              "32          PH       11365                       Philippines            PH   \n",
              "33          RO         655                           Romania            RO   \n",
              "34          SL          81                      Sierra Leone            SL   \n",
              "35          SN          70                           Senegal            SN   \n",
              "36          TH          55                          Thailand            TH   \n",
              "37          TJ          43                        Tajikistan            TJ   \n",
              "38          TM          26                      Turkmenistan            TM   \n",
              "39          UA        7761                           Ukraine            UA   \n",
              "40          UG          98                            Uganda            UG   \n",
              "41          US        3636          United States of America            US   \n",
              "42          UZ         261                        Uzbekistan            UZ   \n",
              "43          VN         170                           Vietnam            VN   \n",
              "\n",
              "    CC Num  Region Number  Population      Users  User % GDP p.c. (USD)  \\\n",
              "0        4             34    38928346    5313081  13.65%           $500   \n",
              "1        8             39     2877797    2296867  79.81%         $4,122   \n",
              "2       50             34   164689383   33062068  20.08%         $1,344   \n",
              "3      854             11    20903273    4094871  19.59%           $559   \n",
              "4      100            151     6948445    4817911  69.34%         $7,661   \n",
              "5       68              5    11673021    5940515  50.89%         $2,896   \n",
              "6      112            151     9449323    7596842  80.40%         $5,016   \n",
              "7      180             17    89561403   11419812  12.75%           $395   \n",
              "8      384             11    26378274   12770255  48.41%         $1,378   \n",
              "9      156             30  1439323776  823871288  57.24%         $7,780   \n",
              "10     170              5    50882891   34809458  68.41%         $5,551   \n",
              "11     232             14     3546421      52237   1.47%           $735   \n",
              "12     288             11    31072940   13514266  43.49%         $1,373   \n",
              "13     324             11    13132795    1860551  14.17%           $624   \n",
              "14     624             11     1968001      82424   4.19%           $591   \n",
              "15     332             29    11402528    1415658  12.42%           $703   \n",
              "16     360             35   273523615  115312623  42.16%         $3,408   \n",
              "17     404             14    53771296   10315273  19.18%         $1,311   \n",
              "18     417            143     6524195    2932304  44.95%         $1,004   \n",
              "19     116             35    16718965    6966372  41.67%         $1,197   \n",
              "20     410             30    51269185   50973756  99.42%        $27,526   \n",
              "21     398            143    18776707   15146441  80.67%         $7,311   \n",
              "22     418             35     7275560    2312455  31.78%         $2,172   \n",
              "23     144             34    21413249    8054950  37.62%         $3,797   \n",
              "24     498            151     4033963    3353567  83.13%         $1,673   \n",
              "25     450             14    27691018    4421862  15.97%           $361   \n",
              "26     466             11    20250833    3038842  15.01%           $693   \n",
              "27     104             35    54409800   21283448  39.12%         $1,162   \n",
              "28     484             13   128932753   90490008  70.18%         $8,119   \n",
              "29     562             11    24206644    4366984  18.04%           $311   \n",
              "30     566             11   206139589   63280348  30.70%         $1,963   \n",
              "31     524             34    29136808    7159136  24.57%           $725   \n",
              "32     608             35   109581078   72807344  66.44%         $2,782   \n",
              "33     642            151    19237691   13596369  70.68%         $9,751   \n",
              "34     694             11     7976983    1434658  17.98%           $468   \n",
              "35     686             11    16743927    6095246  36.40%           $876   \n",
              "36     764             35    69799978   44569765  63.85%         $5,831   \n",
              "37     762            143     9537645    2345713  24.59%           $728   \n",
              "38     795            143     6031200    1618437  26.83%         $5,998   \n",
              "39     804            151    43733762   28073131  64.19%         $2,132   \n",
              "40     800             14    45741007   12871094  28.14%           $526   \n",
              "41     840             21   331002651  250058937  75.55%        $56,266   \n",
              "42     860            143    33469203   20398656  60.95%         $2,008   \n",
              "43     704             35    97338579   53442603  54.90%         $2,108   \n",
              "\n",
              "            Sub-Region    Region  \n",
              "0        Southern Asia      Asia  \n",
              "1      Southern Europe    Europe  \n",
              "2        Southern Asia      Asia  \n",
              "3       Western Africa    Africa  \n",
              "4       Eastern Europe    Europe  \n",
              "5        South America  Americas  \n",
              "6       Eastern Europe    Europe  \n",
              "7        Middle Africa    Africa  \n",
              "8       Western Africa    Africa  \n",
              "9         Eastern Asia      Asia  \n",
              "10       South America  Americas  \n",
              "11      Eastern Africa    Africa  \n",
              "12      Western Africa    Africa  \n",
              "13      Western Africa    Africa  \n",
              "14      Western Africa    Africa  \n",
              "15           Caribbean  Americas  \n",
              "16  South-Eastern Asia      Asia  \n",
              "17      Eastern Africa    Africa  \n",
              "18        Central Asia      Asia  \n",
              "19  South-Eastern Asia      Asia  \n",
              "20        Eastern Asia      Asia  \n",
              "21        Central Asia      Asia  \n",
              "22  South-Eastern Asia      Asia  \n",
              "23       Southern Asia      Asia  \n",
              "24      Eastern Europe    Europe  \n",
              "25      Eastern Africa    Africa  \n",
              "26      Western Africa    Africa  \n",
              "27  South-Eastern Asia      Asia  \n",
              "28     Central America  Americas  \n",
              "29      Western Africa    Africa  \n",
              "30      Western Africa    Africa  \n",
              "31       Southern Asia      Asia  \n",
              "32  South-Eastern Asia      Asia  \n",
              "33      Eastern Europe    Europe  \n",
              "34      Western Africa    Africa  \n",
              "35      Western Africa    Africa  \n",
              "36  South-Eastern Asia      Asia  \n",
              "37        Central Asia      Asia  \n",
              "38        Central Asia      Asia  \n",
              "39      Eastern Europe    Europe  \n",
              "40      Eastern Africa    Africa  \n",
              "41    Northern America  Americas  \n",
              "42        Central Asia      Asia  \n",
              "43  South-Eastern Asia      Asia  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-24240733-ad8f-4678-bb18-d288b8f2eca2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>Country</th>\n",
              "      <th>ISO-3166 Code</th>\n",
              "      <th>CC Num</th>\n",
              "      <th>Region Number</th>\n",
              "      <th>Population</th>\n",
              "      <th>Users</th>\n",
              "      <th>User %</th>\n",
              "      <th>GDP p.c. (USD)</th>\n",
              "      <th>Sub-Region</th>\n",
              "      <th>Region</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AF</td>\n",
              "      <td>97</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>AF</td>\n",
              "      <td>4</td>\n",
              "      <td>34</td>\n",
              "      <td>38928346</td>\n",
              "      <td>5313081</td>\n",
              "      <td>13.65%</td>\n",
              "      <td>$500</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AL</td>\n",
              "      <td>22</td>\n",
              "      <td>Albania</td>\n",
              "      <td>AL</td>\n",
              "      <td>8</td>\n",
              "      <td>39</td>\n",
              "      <td>2877797</td>\n",
              "      <td>2296867</td>\n",
              "      <td>79.81%</td>\n",
              "      <td>$4,122</td>\n",
              "      <td>Southern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BD</td>\n",
              "      <td>11</td>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>BD</td>\n",
              "      <td>50</td>\n",
              "      <td>34</td>\n",
              "      <td>164689383</td>\n",
              "      <td>33062068</td>\n",
              "      <td>20.08%</td>\n",
              "      <td>$1,344</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BF</td>\n",
              "      <td>33</td>\n",
              "      <td>Burkina Faso</td>\n",
              "      <td>BF</td>\n",
              "      <td>854</td>\n",
              "      <td>11</td>\n",
              "      <td>20903273</td>\n",
              "      <td>4094871</td>\n",
              "      <td>19.59%</td>\n",
              "      <td>$559</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BG</td>\n",
              "      <td>342</td>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>BG</td>\n",
              "      <td>100</td>\n",
              "      <td>151</td>\n",
              "      <td>6948445</td>\n",
              "      <td>4817911</td>\n",
              "      <td>69.34%</td>\n",
              "      <td>$7,661</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>BO</td>\n",
              "      <td>18</td>\n",
              "      <td>Bolivia</td>\n",
              "      <td>BO</td>\n",
              "      <td>68</td>\n",
              "      <td>5</td>\n",
              "      <td>11673021</td>\n",
              "      <td>5940515</td>\n",
              "      <td>50.89%</td>\n",
              "      <td>$2,896</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>BY</td>\n",
              "      <td>1463</td>\n",
              "      <td>Belarus</td>\n",
              "      <td>BY</td>\n",
              "      <td>112</td>\n",
              "      <td>151</td>\n",
              "      <td>9449323</td>\n",
              "      <td>7596842</td>\n",
              "      <td>80.40%</td>\n",
              "      <td>$5,016</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>CD</td>\n",
              "      <td>53</td>\n",
              "      <td>Democratic Republic of the Congo</td>\n",
              "      <td>CD</td>\n",
              "      <td>180</td>\n",
              "      <td>17</td>\n",
              "      <td>89561403</td>\n",
              "      <td>11419812</td>\n",
              "      <td>12.75%</td>\n",
              "      <td>$395</td>\n",
              "      <td>Middle Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>CI</td>\n",
              "      <td>31</td>\n",
              "      <td>Cote d'Ivoire</td>\n",
              "      <td>CI</td>\n",
              "      <td>384</td>\n",
              "      <td>11</td>\n",
              "      <td>26378274</td>\n",
              "      <td>12770255</td>\n",
              "      <td>48.41%</td>\n",
              "      <td>$1,378</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>CN</td>\n",
              "      <td>23</td>\n",
              "      <td>China</td>\n",
              "      <td>CN</td>\n",
              "      <td>156</td>\n",
              "      <td>30</td>\n",
              "      <td>1439323776</td>\n",
              "      <td>823871288</td>\n",
              "      <td>57.24%</td>\n",
              "      <td>$7,780</td>\n",
              "      <td>Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>CO</td>\n",
              "      <td>124</td>\n",
              "      <td>Colombia</td>\n",
              "      <td>CO</td>\n",
              "      <td>170</td>\n",
              "      <td>5</td>\n",
              "      <td>50882891</td>\n",
              "      <td>34809458</td>\n",
              "      <td>68.41%</td>\n",
              "      <td>$5,551</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>ER</td>\n",
              "      <td>13</td>\n",
              "      <td>Eritrea</td>\n",
              "      <td>ER</td>\n",
              "      <td>232</td>\n",
              "      <td>14</td>\n",
              "      <td>3546421</td>\n",
              "      <td>52237</td>\n",
              "      <td>1.47%</td>\n",
              "      <td>$735</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>GH</td>\n",
              "      <td>544</td>\n",
              "      <td>Ghana</td>\n",
              "      <td>GH</td>\n",
              "      <td>288</td>\n",
              "      <td>11</td>\n",
              "      <td>31072940</td>\n",
              "      <td>13514266</td>\n",
              "      <td>43.49%</td>\n",
              "      <td>$1,373</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>GN</td>\n",
              "      <td>15</td>\n",
              "      <td>Guinea</td>\n",
              "      <td>GN</td>\n",
              "      <td>324</td>\n",
              "      <td>11</td>\n",
              "      <td>13132795</td>\n",
              "      <td>1860551</td>\n",
              "      <td>14.17%</td>\n",
              "      <td>$624</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>GW</td>\n",
              "      <td>145</td>\n",
              "      <td>Guinea-Bissau</td>\n",
              "      <td>GW</td>\n",
              "      <td>624</td>\n",
              "      <td>11</td>\n",
              "      <td>1968001</td>\n",
              "      <td>82424</td>\n",
              "      <td>4.19%</td>\n",
              "      <td>$591</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>HT</td>\n",
              "      <td>339</td>\n",
              "      <td>Haiti</td>\n",
              "      <td>HT</td>\n",
              "      <td>332</td>\n",
              "      <td>29</td>\n",
              "      <td>11402528</td>\n",
              "      <td>1415658</td>\n",
              "      <td>12.42%</td>\n",
              "      <td>$703</td>\n",
              "      <td>Caribbean</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>ID</td>\n",
              "      <td>1971</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>ID</td>\n",
              "      <td>360</td>\n",
              "      <td>35</td>\n",
              "      <td>273523615</td>\n",
              "      <td>115312623</td>\n",
              "      <td>42.16%</td>\n",
              "      <td>$3,408</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>KE</td>\n",
              "      <td>32</td>\n",
              "      <td>Kenya</td>\n",
              "      <td>KE</td>\n",
              "      <td>404</td>\n",
              "      <td>14</td>\n",
              "      <td>53771296</td>\n",
              "      <td>10315273</td>\n",
              "      <td>19.18%</td>\n",
              "      <td>$1,311</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>KG</td>\n",
              "      <td>437</td>\n",
              "      <td>Kyrgyzstan</td>\n",
              "      <td>KG</td>\n",
              "      <td>417</td>\n",
              "      <td>143</td>\n",
              "      <td>6524195</td>\n",
              "      <td>2932304</td>\n",
              "      <td>44.95%</td>\n",
              "      <td>$1,004</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>KH</td>\n",
              "      <td>1979</td>\n",
              "      <td>Cambodia</td>\n",
              "      <td>KH</td>\n",
              "      <td>116</td>\n",
              "      <td>35</td>\n",
              "      <td>16718965</td>\n",
              "      <td>6966372</td>\n",
              "      <td>41.67%</td>\n",
              "      <td>$1,197</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>KR</td>\n",
              "      <td>12</td>\n",
              "      <td>Republic of Korea</td>\n",
              "      <td>KR</td>\n",
              "      <td>410</td>\n",
              "      <td>30</td>\n",
              "      <td>51269185</td>\n",
              "      <td>50973756</td>\n",
              "      <td>99.42%</td>\n",
              "      <td>$27,526</td>\n",
              "      <td>Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>KZ</td>\n",
              "      <td>54</td>\n",
              "      <td>Kazakhstan</td>\n",
              "      <td>KZ</td>\n",
              "      <td>398</td>\n",
              "      <td>143</td>\n",
              "      <td>18776707</td>\n",
              "      <td>15146441</td>\n",
              "      <td>80.67%</td>\n",
              "      <td>$7,311</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>LA</td>\n",
              "      <td>126</td>\n",
              "      <td>Lao People's Democratic Republic</td>\n",
              "      <td>LA</td>\n",
              "      <td>418</td>\n",
              "      <td>35</td>\n",
              "      <td>7275560</td>\n",
              "      <td>2312455</td>\n",
              "      <td>31.78%</td>\n",
              "      <td>$2,172</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>LK</td>\n",
              "      <td>85</td>\n",
              "      <td>Sri Lanka</td>\n",
              "      <td>LK</td>\n",
              "      <td>144</td>\n",
              "      <td>34</td>\n",
              "      <td>21413249</td>\n",
              "      <td>8054950</td>\n",
              "      <td>37.62%</td>\n",
              "      <td>$3,797</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>MD</td>\n",
              "      <td>5901</td>\n",
              "      <td>Republic of Moldova</td>\n",
              "      <td>MD</td>\n",
              "      <td>498</td>\n",
              "      <td>151</td>\n",
              "      <td>4033963</td>\n",
              "      <td>3353567</td>\n",
              "      <td>83.13%</td>\n",
              "      <td>$1,673</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>MG</td>\n",
              "      <td>94</td>\n",
              "      <td>Madagascar</td>\n",
              "      <td>MG</td>\n",
              "      <td>450</td>\n",
              "      <td>14</td>\n",
              "      <td>27691018</td>\n",
              "      <td>4421862</td>\n",
              "      <td>15.97%</td>\n",
              "      <td>$361</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>ML</td>\n",
              "      <td>45</td>\n",
              "      <td>Mali</td>\n",
              "      <td>ML</td>\n",
              "      <td>466</td>\n",
              "      <td>11</td>\n",
              "      <td>20250833</td>\n",
              "      <td>3038842</td>\n",
              "      <td>15.01%</td>\n",
              "      <td>$693</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>MM</td>\n",
              "      <td>1250</td>\n",
              "      <td>Myanmar</td>\n",
              "      <td>MM</td>\n",
              "      <td>104</td>\n",
              "      <td>35</td>\n",
              "      <td>54409800</td>\n",
              "      <td>21283448</td>\n",
              "      <td>39.12%</td>\n",
              "      <td>$1,162</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>MX</td>\n",
              "      <td>19</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>MX</td>\n",
              "      <td>484</td>\n",
              "      <td>13</td>\n",
              "      <td>128932753</td>\n",
              "      <td>90490008</td>\n",
              "      <td>70.18%</td>\n",
              "      <td>$8,119</td>\n",
              "      <td>Central America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>NE</td>\n",
              "      <td>31</td>\n",
              "      <td>Niger</td>\n",
              "      <td>NE</td>\n",
              "      <td>562</td>\n",
              "      <td>11</td>\n",
              "      <td>24206644</td>\n",
              "      <td>4366984</td>\n",
              "      <td>18.04%</td>\n",
              "      <td>$311</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>NG</td>\n",
              "      <td>108</td>\n",
              "      <td>Nigeria</td>\n",
              "      <td>NG</td>\n",
              "      <td>566</td>\n",
              "      <td>11</td>\n",
              "      <td>206139589</td>\n",
              "      <td>63280348</td>\n",
              "      <td>30.70%</td>\n",
              "      <td>$1,963</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>NP</td>\n",
              "      <td>27</td>\n",
              "      <td>Nepal</td>\n",
              "      <td>NP</td>\n",
              "      <td>524</td>\n",
              "      <td>34</td>\n",
              "      <td>29136808</td>\n",
              "      <td>7159136</td>\n",
              "      <td>24.57%</td>\n",
              "      <td>$725</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PH</td>\n",
              "      <td>11365</td>\n",
              "      <td>Philippines</td>\n",
              "      <td>PH</td>\n",
              "      <td>608</td>\n",
              "      <td>35</td>\n",
              "      <td>109581078</td>\n",
              "      <td>72807344</td>\n",
              "      <td>66.44%</td>\n",
              "      <td>$2,782</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>RO</td>\n",
              "      <td>655</td>\n",
              "      <td>Romania</td>\n",
              "      <td>RO</td>\n",
              "      <td>642</td>\n",
              "      <td>151</td>\n",
              "      <td>19237691</td>\n",
              "      <td>13596369</td>\n",
              "      <td>70.68%</td>\n",
              "      <td>$9,751</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>SL</td>\n",
              "      <td>81</td>\n",
              "      <td>Sierra Leone</td>\n",
              "      <td>SL</td>\n",
              "      <td>694</td>\n",
              "      <td>11</td>\n",
              "      <td>7976983</td>\n",
              "      <td>1434658</td>\n",
              "      <td>17.98%</td>\n",
              "      <td>$468</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>SN</td>\n",
              "      <td>70</td>\n",
              "      <td>Senegal</td>\n",
              "      <td>SN</td>\n",
              "      <td>686</td>\n",
              "      <td>11</td>\n",
              "      <td>16743927</td>\n",
              "      <td>6095246</td>\n",
              "      <td>36.40%</td>\n",
              "      <td>$876</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>TH</td>\n",
              "      <td>55</td>\n",
              "      <td>Thailand</td>\n",
              "      <td>TH</td>\n",
              "      <td>764</td>\n",
              "      <td>35</td>\n",
              "      <td>69799978</td>\n",
              "      <td>44569765</td>\n",
              "      <td>63.85%</td>\n",
              "      <td>$5,831</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>TJ</td>\n",
              "      <td>43</td>\n",
              "      <td>Tajikistan</td>\n",
              "      <td>TJ</td>\n",
              "      <td>762</td>\n",
              "      <td>143</td>\n",
              "      <td>9537645</td>\n",
              "      <td>2345713</td>\n",
              "      <td>24.59%</td>\n",
              "      <td>$728</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>TM</td>\n",
              "      <td>26</td>\n",
              "      <td>Turkmenistan</td>\n",
              "      <td>TM</td>\n",
              "      <td>795</td>\n",
              "      <td>143</td>\n",
              "      <td>6031200</td>\n",
              "      <td>1618437</td>\n",
              "      <td>26.83%</td>\n",
              "      <td>$5,998</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>UA</td>\n",
              "      <td>7761</td>\n",
              "      <td>Ukraine</td>\n",
              "      <td>UA</td>\n",
              "      <td>804</td>\n",
              "      <td>151</td>\n",
              "      <td>43733762</td>\n",
              "      <td>28073131</td>\n",
              "      <td>64.19%</td>\n",
              "      <td>$2,132</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>UG</td>\n",
              "      <td>98</td>\n",
              "      <td>Uganda</td>\n",
              "      <td>UG</td>\n",
              "      <td>800</td>\n",
              "      <td>14</td>\n",
              "      <td>45741007</td>\n",
              "      <td>12871094</td>\n",
              "      <td>28.14%</td>\n",
              "      <td>$526</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>US</td>\n",
              "      <td>3636</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>US</td>\n",
              "      <td>840</td>\n",
              "      <td>21</td>\n",
              "      <td>331002651</td>\n",
              "      <td>250058937</td>\n",
              "      <td>75.55%</td>\n",
              "      <td>$56,266</td>\n",
              "      <td>Northern America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>UZ</td>\n",
              "      <td>261</td>\n",
              "      <td>Uzbekistan</td>\n",
              "      <td>UZ</td>\n",
              "      <td>860</td>\n",
              "      <td>143</td>\n",
              "      <td>33469203</td>\n",
              "      <td>20398656</td>\n",
              "      <td>60.95%</td>\n",
              "      <td>$2,008</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>VN</td>\n",
              "      <td>170</td>\n",
              "      <td>Vietnam</td>\n",
              "      <td>VN</td>\n",
              "      <td>704</td>\n",
              "      <td>35</td>\n",
              "      <td>97338579</td>\n",
              "      <td>53442603</td>\n",
              "      <td>54.90%</td>\n",
              "      <td>$2,108</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24240733-ad8f-4678-bb18-d288b8f2eca2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-24240733-ad8f-4678-bb18-d288b8f2eca2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-24240733-ad8f-4678-bb18-d288b8f2eca2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4edb97f2-8f4d-4ab2-b0d8-ea4572b1f0df\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4edb97f2-8f4d-4ab2-b0d8-ea4572b1f0df')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4edb97f2-8f4d-4ab2-b0d8-ea4572b1f0df button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_601f6520-5eab-4d20-9dfe-60b33a84f0d1\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('incidents')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_601f6520-5eab-4d20-9dfe-60b33a84f0d1 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('incidents');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "incidents",
              "summary": "{\n  \"name\": \"incidents\",\n  \"rows\": 44,\n  \"fields\": [\n    {\n      \"column\": \"citizenship\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"TJ\",\n          \"MD\",\n          \"MG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Datasource\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2233,\n        \"min\": 11,\n        \"max\": 11365,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          26,\n          5901,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"Tajikistan\",\n          \"Republic of Moldova\",\n          \"Madagascar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISO-3166 Code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"TJ\",\n          \"MD\",\n          \"MG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CC Num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          762,\n          498,\n          450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 5,\n        \"max\": 151,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          13,\n          35,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 220873734,\n        \"min\": 1968001,\n        \"max\": 1439323776,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          9537645,\n          4033963,\n          27691018\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Users\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 128027079,\n        \"min\": 52237,\n        \"max\": 823871288,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          2345713,\n          3353567,\n          4421862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User %\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"24.59%\",\n          \"83.13%\",\n          \"15.97%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP p.c. (USD)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"$728\",\n          \"$1,673\",\n          \"$361\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Central America\",\n          \"South-Eastern Asia\",\n          \"Southern Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Europe\",\n          \"Americas\",\n          \"Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "incidents"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "RGPaXa6FBJhc"
      },
      "outputs": [],
      "source": [
        "#incidents['pc'] = incidents['Datasource'] / incidents['Population']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "zBH177SFBTRB"
      },
      "outputs": [],
      "source": [
        "#incidents = incidents.sort_values(by=\"pc\", ascending=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "eKxAEHhmB9Lw"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from scipy.stats import multivariate_normal"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "metadata": {
        "id": "V9FFPP9hc_OC"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "FQKDtlsmB6LZ"
      },
      "outputs": [],
      "source": [
        "#plt.hist(incidents['pc'][1:], bins=10);"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "coBdu1OnClq5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ae3aeeae-ceb4-4eac-c76e-9c05f46a46ca"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   citizenship  Datasource                           Country ISO-3166 Code  \\\n",
              "0           AF          97                       Afghanistan            AF   \n",
              "1           AL          22                           Albania            AL   \n",
              "2           BD          11                        Bangladesh            BD   \n",
              "3           BF          33                      Burkina Faso            BF   \n",
              "4           BG         342                          Bulgaria            BG   \n",
              "5           BO          18                           Bolivia            BO   \n",
              "6           BY        1463                           Belarus            BY   \n",
              "7           CD          53  Democratic Republic of the Congo            CD   \n",
              "8           CI          31                     Cote d'Ivoire            CI   \n",
              "9           CN          23                             China            CN   \n",
              "10          CO         124                          Colombia            CO   \n",
              "11          ER          13                           Eritrea            ER   \n",
              "12          GH         544                             Ghana            GH   \n",
              "13          GN          15                            Guinea            GN   \n",
              "14          GW         145                     Guinea-Bissau            GW   \n",
              "15          HT         339                             Haiti            HT   \n",
              "16          ID        1971                         Indonesia            ID   \n",
              "17          KE          32                             Kenya            KE   \n",
              "18          KG         437                        Kyrgyzstan            KG   \n",
              "19          KH        1979                          Cambodia            KH   \n",
              "20          KR          12                 Republic of Korea            KR   \n",
              "21          KZ          54                        Kazakhstan            KZ   \n",
              "22          LA         126  Lao People's Democratic Republic            LA   \n",
              "23          LK          85                         Sri Lanka            LK   \n",
              "24          MD        5901               Republic of Moldova            MD   \n",
              "25          MG          94                        Madagascar            MG   \n",
              "26          ML          45                              Mali            ML   \n",
              "27          MM        1250                           Myanmar            MM   \n",
              "28          MX          19                            Mexico            MX   \n",
              "29          NE          31                             Niger            NE   \n",
              "30          NG         108                           Nigeria            NG   \n",
              "31          NP          27                             Nepal            NP   \n",
              "32          PH       11365                       Philippines            PH   \n",
              "33          RO         655                           Romania            RO   \n",
              "34          SL          81                      Sierra Leone            SL   \n",
              "35          SN          70                           Senegal            SN   \n",
              "36          TH          55                          Thailand            TH   \n",
              "37          TJ          43                        Tajikistan            TJ   \n",
              "38          TM          26                      Turkmenistan            TM   \n",
              "39          UA        7761                           Ukraine            UA   \n",
              "40          UG          98                            Uganda            UG   \n",
              "41          US        3636          United States of America            US   \n",
              "42          UZ         261                        Uzbekistan            UZ   \n",
              "43          VN         170                           Vietnam            VN   \n",
              "\n",
              "    CC Num  Region Number  Population      Users  User % GDP p.c. (USD)  \\\n",
              "0        4             34    38928346    5313081  13.65%           $500   \n",
              "1        8             39     2877797    2296867  79.81%         $4,122   \n",
              "2       50             34   164689383   33062068  20.08%         $1,344   \n",
              "3      854             11    20903273    4094871  19.59%           $559   \n",
              "4      100            151     6948445    4817911  69.34%         $7,661   \n",
              "5       68              5    11673021    5940515  50.89%         $2,896   \n",
              "6      112            151     9449323    7596842  80.40%         $5,016   \n",
              "7      180             17    89561403   11419812  12.75%           $395   \n",
              "8      384             11    26378274   12770255  48.41%         $1,378   \n",
              "9      156             30  1439323776  823871288  57.24%         $7,780   \n",
              "10     170              5    50882891   34809458  68.41%         $5,551   \n",
              "11     232             14     3546421      52237   1.47%           $735   \n",
              "12     288             11    31072940   13514266  43.49%         $1,373   \n",
              "13     324             11    13132795    1860551  14.17%           $624   \n",
              "14     624             11     1968001      82424   4.19%           $591   \n",
              "15     332             29    11402528    1415658  12.42%           $703   \n",
              "16     360             35   273523615  115312623  42.16%         $3,408   \n",
              "17     404             14    53771296   10315273  19.18%         $1,311   \n",
              "18     417            143     6524195    2932304  44.95%         $1,004   \n",
              "19     116             35    16718965    6966372  41.67%         $1,197   \n",
              "20     410             30    51269185   50973756  99.42%        $27,526   \n",
              "21     398            143    18776707   15146441  80.67%         $7,311   \n",
              "22     418             35     7275560    2312455  31.78%         $2,172   \n",
              "23     144             34    21413249    8054950  37.62%         $3,797   \n",
              "24     498            151     4033963    3353567  83.13%         $1,673   \n",
              "25     450             14    27691018    4421862  15.97%           $361   \n",
              "26     466             11    20250833    3038842  15.01%           $693   \n",
              "27     104             35    54409800   21283448  39.12%         $1,162   \n",
              "28     484             13   128932753   90490008  70.18%         $8,119   \n",
              "29     562             11    24206644    4366984  18.04%           $311   \n",
              "30     566             11   206139589   63280348  30.70%         $1,963   \n",
              "31     524             34    29136808    7159136  24.57%           $725   \n",
              "32     608             35   109581078   72807344  66.44%         $2,782   \n",
              "33     642            151    19237691   13596369  70.68%         $9,751   \n",
              "34     694             11     7976983    1434658  17.98%           $468   \n",
              "35     686             11    16743927    6095246  36.40%           $876   \n",
              "36     764             35    69799978   44569765  63.85%         $5,831   \n",
              "37     762            143     9537645    2345713  24.59%           $728   \n",
              "38     795            143     6031200    1618437  26.83%         $5,998   \n",
              "39     804            151    43733762   28073131  64.19%         $2,132   \n",
              "40     800             14    45741007   12871094  28.14%           $526   \n",
              "41     840             21   331002651  250058937  75.55%        $56,266   \n",
              "42     860            143    33469203   20398656  60.95%         $2,008   \n",
              "43     704             35    97338579   53442603  54.90%         $2,108   \n",
              "\n",
              "            Sub-Region    Region  \n",
              "0        Southern Asia      Asia  \n",
              "1      Southern Europe    Europe  \n",
              "2        Southern Asia      Asia  \n",
              "3       Western Africa    Africa  \n",
              "4       Eastern Europe    Europe  \n",
              "5        South America  Americas  \n",
              "6       Eastern Europe    Europe  \n",
              "7        Middle Africa    Africa  \n",
              "8       Western Africa    Africa  \n",
              "9         Eastern Asia      Asia  \n",
              "10       South America  Americas  \n",
              "11      Eastern Africa    Africa  \n",
              "12      Western Africa    Africa  \n",
              "13      Western Africa    Africa  \n",
              "14      Western Africa    Africa  \n",
              "15           Caribbean  Americas  \n",
              "16  South-Eastern Asia      Asia  \n",
              "17      Eastern Africa    Africa  \n",
              "18        Central Asia      Asia  \n",
              "19  South-Eastern Asia      Asia  \n",
              "20        Eastern Asia      Asia  \n",
              "21        Central Asia      Asia  \n",
              "22  South-Eastern Asia      Asia  \n",
              "23       Southern Asia      Asia  \n",
              "24      Eastern Europe    Europe  \n",
              "25      Eastern Africa    Africa  \n",
              "26      Western Africa    Africa  \n",
              "27  South-Eastern Asia      Asia  \n",
              "28     Central America  Americas  \n",
              "29      Western Africa    Africa  \n",
              "30      Western Africa    Africa  \n",
              "31       Southern Asia      Asia  \n",
              "32  South-Eastern Asia      Asia  \n",
              "33      Eastern Europe    Europe  \n",
              "34      Western Africa    Africa  \n",
              "35      Western Africa    Africa  \n",
              "36  South-Eastern Asia      Asia  \n",
              "37        Central Asia      Asia  \n",
              "38        Central Asia      Asia  \n",
              "39      Eastern Europe    Europe  \n",
              "40      Eastern Africa    Africa  \n",
              "41    Northern America  Americas  \n",
              "42        Central Asia      Asia  \n",
              "43  South-Eastern Asia      Asia  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-877586c9-424e-43aa-a74d-23ada4478653\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>Country</th>\n",
              "      <th>ISO-3166 Code</th>\n",
              "      <th>CC Num</th>\n",
              "      <th>Region Number</th>\n",
              "      <th>Population</th>\n",
              "      <th>Users</th>\n",
              "      <th>User %</th>\n",
              "      <th>GDP p.c. (USD)</th>\n",
              "      <th>Sub-Region</th>\n",
              "      <th>Region</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AF</td>\n",
              "      <td>97</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>AF</td>\n",
              "      <td>4</td>\n",
              "      <td>34</td>\n",
              "      <td>38928346</td>\n",
              "      <td>5313081</td>\n",
              "      <td>13.65%</td>\n",
              "      <td>$500</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AL</td>\n",
              "      <td>22</td>\n",
              "      <td>Albania</td>\n",
              "      <td>AL</td>\n",
              "      <td>8</td>\n",
              "      <td>39</td>\n",
              "      <td>2877797</td>\n",
              "      <td>2296867</td>\n",
              "      <td>79.81%</td>\n",
              "      <td>$4,122</td>\n",
              "      <td>Southern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BD</td>\n",
              "      <td>11</td>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>BD</td>\n",
              "      <td>50</td>\n",
              "      <td>34</td>\n",
              "      <td>164689383</td>\n",
              "      <td>33062068</td>\n",
              "      <td>20.08%</td>\n",
              "      <td>$1,344</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BF</td>\n",
              "      <td>33</td>\n",
              "      <td>Burkina Faso</td>\n",
              "      <td>BF</td>\n",
              "      <td>854</td>\n",
              "      <td>11</td>\n",
              "      <td>20903273</td>\n",
              "      <td>4094871</td>\n",
              "      <td>19.59%</td>\n",
              "      <td>$559</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BG</td>\n",
              "      <td>342</td>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>BG</td>\n",
              "      <td>100</td>\n",
              "      <td>151</td>\n",
              "      <td>6948445</td>\n",
              "      <td>4817911</td>\n",
              "      <td>69.34%</td>\n",
              "      <td>$7,661</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>BO</td>\n",
              "      <td>18</td>\n",
              "      <td>Bolivia</td>\n",
              "      <td>BO</td>\n",
              "      <td>68</td>\n",
              "      <td>5</td>\n",
              "      <td>11673021</td>\n",
              "      <td>5940515</td>\n",
              "      <td>50.89%</td>\n",
              "      <td>$2,896</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>BY</td>\n",
              "      <td>1463</td>\n",
              "      <td>Belarus</td>\n",
              "      <td>BY</td>\n",
              "      <td>112</td>\n",
              "      <td>151</td>\n",
              "      <td>9449323</td>\n",
              "      <td>7596842</td>\n",
              "      <td>80.40%</td>\n",
              "      <td>$5,016</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>CD</td>\n",
              "      <td>53</td>\n",
              "      <td>Democratic Republic of the Congo</td>\n",
              "      <td>CD</td>\n",
              "      <td>180</td>\n",
              "      <td>17</td>\n",
              "      <td>89561403</td>\n",
              "      <td>11419812</td>\n",
              "      <td>12.75%</td>\n",
              "      <td>$395</td>\n",
              "      <td>Middle Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>CI</td>\n",
              "      <td>31</td>\n",
              "      <td>Cote d'Ivoire</td>\n",
              "      <td>CI</td>\n",
              "      <td>384</td>\n",
              "      <td>11</td>\n",
              "      <td>26378274</td>\n",
              "      <td>12770255</td>\n",
              "      <td>48.41%</td>\n",
              "      <td>$1,378</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>CN</td>\n",
              "      <td>23</td>\n",
              "      <td>China</td>\n",
              "      <td>CN</td>\n",
              "      <td>156</td>\n",
              "      <td>30</td>\n",
              "      <td>1439323776</td>\n",
              "      <td>823871288</td>\n",
              "      <td>57.24%</td>\n",
              "      <td>$7,780</td>\n",
              "      <td>Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>CO</td>\n",
              "      <td>124</td>\n",
              "      <td>Colombia</td>\n",
              "      <td>CO</td>\n",
              "      <td>170</td>\n",
              "      <td>5</td>\n",
              "      <td>50882891</td>\n",
              "      <td>34809458</td>\n",
              "      <td>68.41%</td>\n",
              "      <td>$5,551</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>ER</td>\n",
              "      <td>13</td>\n",
              "      <td>Eritrea</td>\n",
              "      <td>ER</td>\n",
              "      <td>232</td>\n",
              "      <td>14</td>\n",
              "      <td>3546421</td>\n",
              "      <td>52237</td>\n",
              "      <td>1.47%</td>\n",
              "      <td>$735</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>GH</td>\n",
              "      <td>544</td>\n",
              "      <td>Ghana</td>\n",
              "      <td>GH</td>\n",
              "      <td>288</td>\n",
              "      <td>11</td>\n",
              "      <td>31072940</td>\n",
              "      <td>13514266</td>\n",
              "      <td>43.49%</td>\n",
              "      <td>$1,373</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>GN</td>\n",
              "      <td>15</td>\n",
              "      <td>Guinea</td>\n",
              "      <td>GN</td>\n",
              "      <td>324</td>\n",
              "      <td>11</td>\n",
              "      <td>13132795</td>\n",
              "      <td>1860551</td>\n",
              "      <td>14.17%</td>\n",
              "      <td>$624</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>GW</td>\n",
              "      <td>145</td>\n",
              "      <td>Guinea-Bissau</td>\n",
              "      <td>GW</td>\n",
              "      <td>624</td>\n",
              "      <td>11</td>\n",
              "      <td>1968001</td>\n",
              "      <td>82424</td>\n",
              "      <td>4.19%</td>\n",
              "      <td>$591</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>HT</td>\n",
              "      <td>339</td>\n",
              "      <td>Haiti</td>\n",
              "      <td>HT</td>\n",
              "      <td>332</td>\n",
              "      <td>29</td>\n",
              "      <td>11402528</td>\n",
              "      <td>1415658</td>\n",
              "      <td>12.42%</td>\n",
              "      <td>$703</td>\n",
              "      <td>Caribbean</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>ID</td>\n",
              "      <td>1971</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>ID</td>\n",
              "      <td>360</td>\n",
              "      <td>35</td>\n",
              "      <td>273523615</td>\n",
              "      <td>115312623</td>\n",
              "      <td>42.16%</td>\n",
              "      <td>$3,408</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>KE</td>\n",
              "      <td>32</td>\n",
              "      <td>Kenya</td>\n",
              "      <td>KE</td>\n",
              "      <td>404</td>\n",
              "      <td>14</td>\n",
              "      <td>53771296</td>\n",
              "      <td>10315273</td>\n",
              "      <td>19.18%</td>\n",
              "      <td>$1,311</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>KG</td>\n",
              "      <td>437</td>\n",
              "      <td>Kyrgyzstan</td>\n",
              "      <td>KG</td>\n",
              "      <td>417</td>\n",
              "      <td>143</td>\n",
              "      <td>6524195</td>\n",
              "      <td>2932304</td>\n",
              "      <td>44.95%</td>\n",
              "      <td>$1,004</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>KH</td>\n",
              "      <td>1979</td>\n",
              "      <td>Cambodia</td>\n",
              "      <td>KH</td>\n",
              "      <td>116</td>\n",
              "      <td>35</td>\n",
              "      <td>16718965</td>\n",
              "      <td>6966372</td>\n",
              "      <td>41.67%</td>\n",
              "      <td>$1,197</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>KR</td>\n",
              "      <td>12</td>\n",
              "      <td>Republic of Korea</td>\n",
              "      <td>KR</td>\n",
              "      <td>410</td>\n",
              "      <td>30</td>\n",
              "      <td>51269185</td>\n",
              "      <td>50973756</td>\n",
              "      <td>99.42%</td>\n",
              "      <td>$27,526</td>\n",
              "      <td>Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>KZ</td>\n",
              "      <td>54</td>\n",
              "      <td>Kazakhstan</td>\n",
              "      <td>KZ</td>\n",
              "      <td>398</td>\n",
              "      <td>143</td>\n",
              "      <td>18776707</td>\n",
              "      <td>15146441</td>\n",
              "      <td>80.67%</td>\n",
              "      <td>$7,311</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>LA</td>\n",
              "      <td>126</td>\n",
              "      <td>Lao People's Democratic Republic</td>\n",
              "      <td>LA</td>\n",
              "      <td>418</td>\n",
              "      <td>35</td>\n",
              "      <td>7275560</td>\n",
              "      <td>2312455</td>\n",
              "      <td>31.78%</td>\n",
              "      <td>$2,172</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>LK</td>\n",
              "      <td>85</td>\n",
              "      <td>Sri Lanka</td>\n",
              "      <td>LK</td>\n",
              "      <td>144</td>\n",
              "      <td>34</td>\n",
              "      <td>21413249</td>\n",
              "      <td>8054950</td>\n",
              "      <td>37.62%</td>\n",
              "      <td>$3,797</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>MD</td>\n",
              "      <td>5901</td>\n",
              "      <td>Republic of Moldova</td>\n",
              "      <td>MD</td>\n",
              "      <td>498</td>\n",
              "      <td>151</td>\n",
              "      <td>4033963</td>\n",
              "      <td>3353567</td>\n",
              "      <td>83.13%</td>\n",
              "      <td>$1,673</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>MG</td>\n",
              "      <td>94</td>\n",
              "      <td>Madagascar</td>\n",
              "      <td>MG</td>\n",
              "      <td>450</td>\n",
              "      <td>14</td>\n",
              "      <td>27691018</td>\n",
              "      <td>4421862</td>\n",
              "      <td>15.97%</td>\n",
              "      <td>$361</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>ML</td>\n",
              "      <td>45</td>\n",
              "      <td>Mali</td>\n",
              "      <td>ML</td>\n",
              "      <td>466</td>\n",
              "      <td>11</td>\n",
              "      <td>20250833</td>\n",
              "      <td>3038842</td>\n",
              "      <td>15.01%</td>\n",
              "      <td>$693</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>MM</td>\n",
              "      <td>1250</td>\n",
              "      <td>Myanmar</td>\n",
              "      <td>MM</td>\n",
              "      <td>104</td>\n",
              "      <td>35</td>\n",
              "      <td>54409800</td>\n",
              "      <td>21283448</td>\n",
              "      <td>39.12%</td>\n",
              "      <td>$1,162</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>MX</td>\n",
              "      <td>19</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>MX</td>\n",
              "      <td>484</td>\n",
              "      <td>13</td>\n",
              "      <td>128932753</td>\n",
              "      <td>90490008</td>\n",
              "      <td>70.18%</td>\n",
              "      <td>$8,119</td>\n",
              "      <td>Central America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>NE</td>\n",
              "      <td>31</td>\n",
              "      <td>Niger</td>\n",
              "      <td>NE</td>\n",
              "      <td>562</td>\n",
              "      <td>11</td>\n",
              "      <td>24206644</td>\n",
              "      <td>4366984</td>\n",
              "      <td>18.04%</td>\n",
              "      <td>$311</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>NG</td>\n",
              "      <td>108</td>\n",
              "      <td>Nigeria</td>\n",
              "      <td>NG</td>\n",
              "      <td>566</td>\n",
              "      <td>11</td>\n",
              "      <td>206139589</td>\n",
              "      <td>63280348</td>\n",
              "      <td>30.70%</td>\n",
              "      <td>$1,963</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>NP</td>\n",
              "      <td>27</td>\n",
              "      <td>Nepal</td>\n",
              "      <td>NP</td>\n",
              "      <td>524</td>\n",
              "      <td>34</td>\n",
              "      <td>29136808</td>\n",
              "      <td>7159136</td>\n",
              "      <td>24.57%</td>\n",
              "      <td>$725</td>\n",
              "      <td>Southern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PH</td>\n",
              "      <td>11365</td>\n",
              "      <td>Philippines</td>\n",
              "      <td>PH</td>\n",
              "      <td>608</td>\n",
              "      <td>35</td>\n",
              "      <td>109581078</td>\n",
              "      <td>72807344</td>\n",
              "      <td>66.44%</td>\n",
              "      <td>$2,782</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>RO</td>\n",
              "      <td>655</td>\n",
              "      <td>Romania</td>\n",
              "      <td>RO</td>\n",
              "      <td>642</td>\n",
              "      <td>151</td>\n",
              "      <td>19237691</td>\n",
              "      <td>13596369</td>\n",
              "      <td>70.68%</td>\n",
              "      <td>$9,751</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>SL</td>\n",
              "      <td>81</td>\n",
              "      <td>Sierra Leone</td>\n",
              "      <td>SL</td>\n",
              "      <td>694</td>\n",
              "      <td>11</td>\n",
              "      <td>7976983</td>\n",
              "      <td>1434658</td>\n",
              "      <td>17.98%</td>\n",
              "      <td>$468</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>SN</td>\n",
              "      <td>70</td>\n",
              "      <td>Senegal</td>\n",
              "      <td>SN</td>\n",
              "      <td>686</td>\n",
              "      <td>11</td>\n",
              "      <td>16743927</td>\n",
              "      <td>6095246</td>\n",
              "      <td>36.40%</td>\n",
              "      <td>$876</td>\n",
              "      <td>Western Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>TH</td>\n",
              "      <td>55</td>\n",
              "      <td>Thailand</td>\n",
              "      <td>TH</td>\n",
              "      <td>764</td>\n",
              "      <td>35</td>\n",
              "      <td>69799978</td>\n",
              "      <td>44569765</td>\n",
              "      <td>63.85%</td>\n",
              "      <td>$5,831</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>TJ</td>\n",
              "      <td>43</td>\n",
              "      <td>Tajikistan</td>\n",
              "      <td>TJ</td>\n",
              "      <td>762</td>\n",
              "      <td>143</td>\n",
              "      <td>9537645</td>\n",
              "      <td>2345713</td>\n",
              "      <td>24.59%</td>\n",
              "      <td>$728</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>TM</td>\n",
              "      <td>26</td>\n",
              "      <td>Turkmenistan</td>\n",
              "      <td>TM</td>\n",
              "      <td>795</td>\n",
              "      <td>143</td>\n",
              "      <td>6031200</td>\n",
              "      <td>1618437</td>\n",
              "      <td>26.83%</td>\n",
              "      <td>$5,998</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>UA</td>\n",
              "      <td>7761</td>\n",
              "      <td>Ukraine</td>\n",
              "      <td>UA</td>\n",
              "      <td>804</td>\n",
              "      <td>151</td>\n",
              "      <td>43733762</td>\n",
              "      <td>28073131</td>\n",
              "      <td>64.19%</td>\n",
              "      <td>$2,132</td>\n",
              "      <td>Eastern Europe</td>\n",
              "      <td>Europe</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>UG</td>\n",
              "      <td>98</td>\n",
              "      <td>Uganda</td>\n",
              "      <td>UG</td>\n",
              "      <td>800</td>\n",
              "      <td>14</td>\n",
              "      <td>45741007</td>\n",
              "      <td>12871094</td>\n",
              "      <td>28.14%</td>\n",
              "      <td>$526</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>US</td>\n",
              "      <td>3636</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>US</td>\n",
              "      <td>840</td>\n",
              "      <td>21</td>\n",
              "      <td>331002651</td>\n",
              "      <td>250058937</td>\n",
              "      <td>75.55%</td>\n",
              "      <td>$56,266</td>\n",
              "      <td>Northern America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>UZ</td>\n",
              "      <td>261</td>\n",
              "      <td>Uzbekistan</td>\n",
              "      <td>UZ</td>\n",
              "      <td>860</td>\n",
              "      <td>143</td>\n",
              "      <td>33469203</td>\n",
              "      <td>20398656</td>\n",
              "      <td>60.95%</td>\n",
              "      <td>$2,008</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>VN</td>\n",
              "      <td>170</td>\n",
              "      <td>Vietnam</td>\n",
              "      <td>VN</td>\n",
              "      <td>704</td>\n",
              "      <td>35</td>\n",
              "      <td>97338579</td>\n",
              "      <td>53442603</td>\n",
              "      <td>54.90%</td>\n",
              "      <td>$2,108</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-877586c9-424e-43aa-a74d-23ada4478653')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-877586c9-424e-43aa-a74d-23ada4478653 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-877586c9-424e-43aa-a74d-23ada4478653');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-64e0406d-9a1f-47a2-bcfe-1455a15fac65\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64e0406d-9a1f-47a2-bcfe-1455a15fac65')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-64e0406d-9a1f-47a2-bcfe-1455a15fac65 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"incidents[0:55]\",\n  \"rows\": 44,\n  \"fields\": [\n    {\n      \"column\": \"citizenship\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"TJ\",\n          \"MD\",\n          \"MG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Datasource\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2233,\n        \"min\": 11,\n        \"max\": 11365,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          26,\n          5901,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"Tajikistan\",\n          \"Republic of Moldova\",\n          \"Madagascar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISO-3166 Code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"TJ\",\n          \"MD\",\n          \"MG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CC Num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          762,\n          498,\n          450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 5,\n        \"max\": 151,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          13,\n          35,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 220873734,\n        \"min\": 1968001,\n        \"max\": 1439323776,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          9537645,\n          4033963,\n          27691018\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Users\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 128027079,\n        \"min\": 52237,\n        \"max\": 823871288,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          2345713,\n          3353567,\n          4421862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User %\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"24.59%\",\n          \"83.13%\",\n          \"15.97%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP p.c. (USD)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"$728\",\n          \"$1,673\",\n          \"$361\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Central America\",\n          \"South-Eastern Asia\",\n          \"Southern Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Europe\",\n          \"Americas\",\n          \"Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "incidents[0:55]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "QaDg28GJDeCX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "241b6f37-3608-496f-bec8-c81b72a8648b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (0.14.4)\n",
            "Requirement already satisfied: fiona>=1.8.21 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.9.6)\n",
            "Requirement already satisfied: numpy>=1.22 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.26.4)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from geopandas) (24.1)\n",
            "Requirement already satisfied: pandas>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.1.4)\n",
            "Requirement already satisfied: pyproj>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (3.6.1)\n",
            "Requirement already satisfied: shapely>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.0.6)\n",
            "Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (24.2.0)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (2024.8.30)\n",
            "Requirement already satisfied: click~=8.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (8.1.7)\n",
            "Requirement already satisfied: click-plugins>=1.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (1.1.1)\n",
            "Requirement already satisfied: cligj>=0.5 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (0.7.2)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (1.16.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.1)\n"
          ]
        }
      ],
      "source": [
        "!pip install geopandas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "WLDREYMsDkcu"
      },
      "outputs": [],
      "source": [
        "import geopandas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "eKWH170hDmVD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "552ff944-9f2c-4c50-b0a3-d08deb6e5f99"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-21cf0a24543a>:1: FutureWarning: The geopandas.dataset module is deprecated and will be removed in GeoPandas 1.0. You can get the original 'naturalearth_lowres' data from https://www.naturalearthdata.com/downloads/110m-cultural-vectors/.\n",
            "  world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\n"
          ]
        }
      ],
      "source": [
        "world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "b-ZuBxFtgLfH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "outputId": "833ba278-2d16-496f-e959-697d291fb7a3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         pop_est      continent                      name iso_a3  gdp_md_est  \\\n",
              "0       889953.0        Oceania                      Fiji    FJI        5496   \n",
              "1     58005463.0         Africa                  Tanzania    TZA       63177   \n",
              "2       603253.0         Africa                 W. Sahara    ESH         907   \n",
              "3     37589262.0  North America                    Canada    CAN     1736425   \n",
              "4    328239523.0  North America  United States of America    USA    21433226   \n",
              "..           ...            ...                       ...    ...         ...   \n",
              "172    6944975.0         Europe                    Serbia    SRB       51475   \n",
              "173     622137.0         Europe                Montenegro    MNE        5542   \n",
              "174    1794248.0         Europe                    Kosovo    -99        7926   \n",
              "175    1394973.0  North America       Trinidad and Tobago    TTO       24269   \n",
              "176   11062113.0         Africa                  S. Sudan    SSD       11998   \n",
              "\n",
              "                                              geometry  \n",
              "0    MULTIPOLYGON (((180.00000 -16.06713, 180.00000...  \n",
              "1    POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...  \n",
              "2    POLYGON ((-8.66559 27.65643, -8.66512 27.58948...  \n",
              "3    MULTIPOLYGON (((-122.84000 49.00000, -122.9742...  \n",
              "4    MULTIPOLYGON (((-122.84000 49.00000, -120.0000...  \n",
              "..                                                 ...  \n",
              "172  POLYGON ((18.82982 45.90887, 18.82984 45.90888...  \n",
              "173  POLYGON ((20.07070 42.58863, 19.80161 42.50009...  \n",
              "174  POLYGON ((20.59025 41.85541, 20.52295 42.21787...  \n",
              "175  POLYGON ((-61.68000 10.76000, -61.10500 10.890...  \n",
              "176  POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...  \n",
              "\n",
              "[177 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-69f7be7b-adb4-4517-b607-6b163789de6a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pop_est</th>\n",
              "      <th>continent</th>\n",
              "      <th>name</th>\n",
              "      <th>iso_a3</th>\n",
              "      <th>gdp_md_est</th>\n",
              "      <th>geometry</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>889953.0</td>\n",
              "      <td>Oceania</td>\n",
              "      <td>Fiji</td>\n",
              "      <td>FJI</td>\n",
              "      <td>5496</td>\n",
              "      <td>MULTIPOLYGON (((180.00000 -16.06713, 180.00000...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>58005463.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Tanzania</td>\n",
              "      <td>TZA</td>\n",
              "      <td>63177</td>\n",
              "      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>603253.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>W. Sahara</td>\n",
              "      <td>ESH</td>\n",
              "      <td>907</td>\n",
              "      <td>POLYGON ((-8.66559 27.65643, -8.66512 27.58948...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37589262.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAN</td>\n",
              "      <td>1736425</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>328239523.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>USA</td>\n",
              "      <td>21433226</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>6944975.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Serbia</td>\n",
              "      <td>SRB</td>\n",
              "      <td>51475</td>\n",
              "      <td>POLYGON ((18.82982 45.90887, 18.82984 45.90888...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>622137.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Montenegro</td>\n",
              "      <td>MNE</td>\n",
              "      <td>5542</td>\n",
              "      <td>POLYGON ((20.07070 42.58863, 19.80161 42.50009...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>1794248.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Kosovo</td>\n",
              "      <td>-99</td>\n",
              "      <td>7926</td>\n",
              "      <td>POLYGON ((20.59025 41.85541, 20.52295 42.21787...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>1394973.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>24269</td>\n",
              "      <td>POLYGON ((-61.68000 10.76000, -61.10500 10.890...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>11062113.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>S. Sudan</td>\n",
              "      <td>SSD</td>\n",
              "      <td>11998</td>\n",
              "      <td>POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>177 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69f7be7b-adb4-4517-b607-6b163789de6a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-69f7be7b-adb4-4517-b607-6b163789de6a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-69f7be7b-adb4-4517-b607-6b163789de6a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-460ed0a1-f785-4d33-93ff-e0d1c78127be\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-460ed0a1-f785-4d33-93ff-e0d1c78127be')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-460ed0a1-f785-4d33-93ff-e0d1c78127be button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_ec0f125a-725b-4d20-a326-3ac716e96ca9\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('world')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ec0f125a-725b-4d20-a326-3ac716e96ca9 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('world');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "world",
              "summary": "{\n  \"name\": \"world\",\n  \"rows\": 177,\n  \"fields\": [\n    {\n      \"column\": \"pop_est\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 151354289.1545052,\n        \"min\": 140.0,\n        \"max\": 1397715000.0,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          389482.0,\n          3193694.0,\n          1397715000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Africa\",\n          \"Europe\",\n          \"Oceania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 177,\n        \"samples\": [\n          \"Bahamas\",\n          \"Puerto Rico\",\n          \"China\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iso_a3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 177,\n        \"samples\": [\n          \"BHS\",\n          \"PRI\",\n          \"CHN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdp_md_est\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2019326,\n        \"min\": 16,\n        \"max\": 21433226,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          13578,\n          104988,\n          14342903\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geometry\",\n      \"properties\": {\n        \"dtype\": \"geometry\",\n        \"num_unique_values\": 177,\n        \"samples\": [\n          \"MULTIPOLYGON (((-78.98 26.790000000000003, -78.51 26.870000000000005, -77.85000000000001 26.84, -77.82000000000001 26.580000000000005, -78.91000000000001 26.42, -78.98 26.790000000000003)), ((-77.79 27.040000000000003, -77 26.59, -77.17255 25.87918, -77.35641 26.00735, -77.34 26.53, -77.78802 26.925159999999998, -77.79 27.040000000000003)), ((-78.19087 25.210300000000004, -77.89 25.17, -77.54 24.34, -77.53466 23.759750000000004, -77.78 23.710000000000004, -78.03405000000001 24.28615, -78.40848 24.575640000000003, -78.19087 25.210300000000004)))\",\n          \"POLYGON ((-66.28243445500821 18.514761664295364, -65.7713028632093 18.426679185453878, -65.59100379094295 18.228034979723915, -65.84716386581377 17.97590566657186, -66.59993445500949 17.981822618069273, -67.18416236028527 17.946553453030077, -67.24242753769435 18.374460150622937, -67.10067908391774 18.52060110114435, -66.28243445500821 18.514761664295364))\",\n          \"MULTIPOLYGON (((109.47520958866365 18.197700913968575, 108.65520796105616 18.507681993071387, 108.62621748254044 19.367887885001906, 109.11905561730804 19.821038519769345, 110.21159874882281 20.101253973872033, 110.78655073450221 20.077534491450052, 111.01005130416458 19.69592987719072, 110.57064660038677 19.25587921800927, 110.33918786015147 18.678395087147592, 109.47520958866365 18.197700913968575)), ((80.2599902688853 42.34999929459906, 80.1801501809943 42.92006785742694, 80.86620649610126 43.18036204688101, 79.96610639844141 44.91751699480463, 81.9470707539181 45.31702749285312, 82.45892581576906 45.539649563166506, 83.18048383986047 47.33003123635086, 85.16429039911324 47.0009557155161, 85.72048383987067 47.452969468773105, 85.7682328633083 48.45575063739699, 86.59877648310336 48.549181626980626, 87.35997033076265 49.21498078062912, 87.75126427607671 49.297197984405486, 88.01383222855173 48.599462795600616, 88.85429772334676 48.069081732772965, 90.28082563676392 47.69354909930793, 90.97080936072501 46.88814606382293, 90.58576826371828 45.71971609148753, 90.9455395853343 45.28607330991028, 92.13389082231822 45.11507599545646, 93.4807336771413 44.975472113619965, 94.68892866412533 44.35233185482842, 95.30687544147153 44.24133087826547, 95.76245486855669 43.319449164394605, 96.34939578652781 42.725635280928685, 97.45175744017801 42.74888967546002, 99.51581749878004 42.524691473961724, 100.84586551310827 42.66380442969145, 101.83304039917994 42.51487295182628, 103.31227827353482 41.9074681666676, 104.52228193564899 41.908346666016556, 104.96499393109347 41.59740957291635, 106.12931562706169 42.13432770442891, 107.74477257693795 42.48151581478187, 109.24359581913146 42.5194463160841, 110.41210330611528 42.87123362891103, 111.12968224492023 43.40683401140015, 111.82958784388137 43.74311839453952, 111.66773725794323 44.07317576758771, 111.34837690637946 44.45744171811009, 111.8733061056003 45.10207937273506, 112.43606245325881 45.01164561622429, 113.46390669154417 44.80889313412712, 114.46033165899607 45.339816799493825, 115.98509647020009 45.727235012386004, 116.71786828009886 46.38820241961521, 117.42170128791419 46.67273285581426, 118.87432579963873 46.80541209572365, 119.66326989143876 46.69267995867892, 119.7728239278975 47.04805878355013, 118.86657433479495 47.74706004494617, 118.06414269416672 48.06673045510369, 117.29550744025741 47.69770905210743, 116.30895267137323 47.85341014260284, 115.74283735561579 47.72654450132629, 115.48528201707306 48.13538259540344, 116.19180219936757 49.134598090199106, 116.67880089728612 49.888531399121405, 117.8792444194264 49.510983384796965, 119.2884607280258 50.142882798862004, 119.27939000000003 50.58292, 120.18208000000016 51.64355000000012, 120.7382 51.96411000000006, 120.72578901579197 52.516226304730935, 120.17708865771681 52.75388621684124, 121.00308475147017 53.25140106873119, 122.24574791879283 53.431725979213695, 123.57146999999998 53.45880000000005, 125.06821129771038 53.16104482686886, 125.94634891164617 52.79279857035698, 126.56439904185697 51.7842554795327, 126.93915652883766 51.35389415140592, 127.28745568248485 50.73979726826548, 127.65740000000028 49.760270000000105, 129.39781782442043 49.44060008401544, 130.58229332898242 48.72968740497614, 130.9872600000001 47.79013000000003, 132.50669000000005 47.78896000000003, 133.37359581922794 48.18344167743487, 135.02631147678665 48.478229885443874, 134.50081 47.57845000000009, 134.1123500000001 47.212480000000085, 133.76964399631288 46.116926988299014, 133.09712000000013 45.14409000000006, 131.8834542176595 45.32116160743652, 131.02519000000018 44.96796000000006, 131.28855512911548 44.11151968034828, 131.1446879416149 42.92998973242689, 130.63386640840974 42.90301463477053, 130.63999970690955 42.39502427522179, 129.99426720593323 42.985386867843786, 129.59666873587952 42.42498179785456, 128.0522152039723 41.99428457291795, 128.20843305879066 41.46677155208249, 127.34378299368302 41.50315176041597, 126.86908328664987 41.81656932226619, 126.18204511932943 41.10733612727637, 125.07994184784064 40.56982371679245, 124.26562462778531 39.928493353834156, 122.86757042856095 39.63778758397622, 122.1313879741309 39.170451768544666, 121.05455447803286 38.897471014962846, 121.58599490772248 39.36085358332407, 121.37675703337268 39.75026133885949, 122.16859500538106 40.422442531896024, 121.64035851449353 40.94638987890333, 120.76862877816194 40.59338816991754, 119.63960208544907 39.898055935214245, 119.02346398323306 39.252333075511146, 118.04274865119791 39.2042739934797, 117.53270226447711 38.73763580988408, 118.05969852098964 38.06147553156106, 118.87814985562832 37.89732534438593, 118.91163618375344 37.44846385349871, 119.70280236214205 37.15638865818505, 120.8234574728236 37.87042776137801, 121.711258579598 37.48112335870718, 122.35793745329849 37.45448415786072, 122.5199947449658 36.93061432550185, 121.10416385303307 36.651329047180425, 120.63700890511453 36.111439520811075, 119.66456180224606 35.60979055433772, 119.1512081238586 34.90985911716044, 120.22752485563373 34.36033193616865, 120.62036909391655 33.37672272392514, 121.22901411345023 32.46031871187719, 121.90814578663003 31.692174384074647, 121.89191938689038 30.949351508095106, 121.26425744027328 30.6762674016487, 121.50351932178467 30.14291494396429, 122.0921138855891 29.83252045340315, 121.93842817595306 29.01802236583478, 121.68443851123851 28.225512600206617, 121.12566124886649 28.135673122667185, 120.39547326058232 27.05320689544932, 119.5854968608395 25.740780544532612, 118.65687137255452 24.54739085540024, 117.28160647997088 23.624501451099658, 115.89073530483512 22.78287323657807, 114.76382734584624 22.668074042241667, 114.15254682826564 22.22376007739615, 113.80677981980074 22.5483397486214, 113.24107791550159 22.051367499270455, 111.84359215703248 21.550493679281473, 110.78546552942407 21.397143866455338, 110.44403934127168 20.34103261970633, 109.88986128137361 20.282457383703488, 109.62765506392466 21.008227037026703, 109.86448815311832 21.395050970947523, 108.5228129415244 21.715212307211814, 108.05018029178294 21.55237986906012, 107.04342003787264 21.811898912029914, 106.56727339073532 22.21820486092477, 106.72540327354847 22.79426788989842, 105.81124718630522 22.976892401617903, 105.32920942588663 23.352063300056912, 104.47685835166448 22.819150092046968, 103.50451460166056 22.70375661873921, 102.7069922221001 22.708795070887675, 102.17043582561358 22.464753119389304, 101.65201785686152 22.318198757409547, 101.80311974488293 21.17436676684507, 101.27002566935997 21.201651923095184, 101.18000532430754 21.436572984294028, 101.15003299357825 21.849984442629022, 100.41653771362738 21.558839423096614, 99.98348921102149 21.7429367131364, 99.24089887898725 22.11831431730458, 99.5319922220874 22.94903880461258, 98.89874922078278 23.14272207284253, 98.66026248575577 24.063286037689966, 97.60471967976198 23.897404690033042, 97.72460900267914 25.083637193293, 98.67183800658916 25.918702500913525, 98.71209394734451 26.743535874940267, 98.68269005737046 27.50881216075062, 98.2462309102333 27.74722138112918, 97.91198774616944 28.335945136014345, 97.32711388549004 28.26158274994634, 96.24883344928779 28.411030992134442, 96.58659061074749 28.83097951915434, 96.11767866413103 29.452802028922466, 95.40480228066464 29.03171662039213, 94.56599043170294 29.277438055939985, 93.41334760943269 28.640629380807226, 92.50311893104364 27.89687632904645, 91.69665652869668 27.771741848251665, 91.25885379431992 28.040614325466294, 90.7305139505678 28.064953925075756, 90.01582889197118 28.296438503527217, 89.47581017452111 28.042758897406397, 88.81424848832056 27.299315904239364, 88.73032596227856 28.086864732367516, 88.12044070836987 27.876541652939594, 86.9545170430006 27.974261786403517, 85.82331994013151 28.203575954698707, 85.01163821812304 28.642773952747344, 84.23457970575015 28.839893703724698, 83.89899295444673 29.320226141877658, 83.33711510613719 29.463731594352197, 82.32751264845088 30.115268052688137, 81.52580447787474 30.42271698660863, 81.11125613802932 30.183480943313402, 79.7213668151071 30.88271474865473, 78.73889448437401 31.515906073527063, 78.45844648632601 32.61816437431273, 79.17612877799553 32.48377981213771, 79.20889163606859 32.994394639613716, 78.81108646028574 33.50619802503242, 78.91226891471322 34.32193634697579, 77.83745079947457 35.494009507787766, 76.19284834178569 35.89840342868783, 75.89689741405013 36.666806138651836, 75.15802778514092 37.13303091078912, 74.98000247589542 37.419990139305895, 74.8299857929521 37.9900070257014, 74.86481570831683 38.3788463404816, 74.25751427602273 38.60650686294345, 73.92885216664644 38.50581533462274, 73.6753792662548 39.4312368841056, 73.96001305531843 39.660008449861735, 73.8222436868283 39.893973497063186, 74.77686242055606 40.36642527929163, 75.4678279967307 40.56207225194867, 76.52636803579745 40.42794607193512, 76.90448449087708 41.06648590754965, 78.18719689322597 41.18531586360481, 78.54366092317531 41.58224254003869, 80.11943037305139 42.12394074153825, 80.2599902688853 42.34999929459906)))\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "world"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "9VzaxTjuELfN"
      },
      "outputs": [],
      "source": [
        "world = world.merge(incidents, left_on=\"name\", right_on=\"Country\", how=\"left\")\n",
        "world = world.fillna(0)\n",
        "world = world[(world.pop_est>0) & (world.name!=\"Antarctica\")]\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "C7awFAwErfr0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "27b66234-b5e9-4933-e5f4-98485e6b2568"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         pop_est      continent                      name iso_a3  gdp_md_est  \\\n",
              "0       889953.0        Oceania                      Fiji    FJI        5496   \n",
              "1     58005463.0         Africa                  Tanzania    TZA       63177   \n",
              "2       603253.0         Africa                 W. Sahara    ESH         907   \n",
              "3     37589262.0  North America                    Canada    CAN     1736425   \n",
              "4    328239523.0  North America  United States of America    USA    21433226   \n",
              "..           ...            ...                       ...    ...         ...   \n",
              "172    6944975.0         Europe                    Serbia    SRB       51475   \n",
              "173     622137.0         Europe                Montenegro    MNE        5542   \n",
              "174    1794248.0         Europe                    Kosovo    -99        7926   \n",
              "175    1394973.0  North America       Trinidad and Tobago    TTO       24269   \n",
              "176   11062113.0         Africa                  S. Sudan    SSD       11998   \n",
              "\n",
              "                                              geometry citizenship  \\\n",
              "0    MULTIPOLYGON (((180.00000 -16.06713, 180.00000...           0   \n",
              "1    POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...           0   \n",
              "2    POLYGON ((-8.66559 27.65643, -8.66512 27.58948...           0   \n",
              "3    MULTIPOLYGON (((-122.84000 49.00000, -122.9742...           0   \n",
              "4    MULTIPOLYGON (((-122.84000 49.00000, -120.0000...          US   \n",
              "..                                                 ...         ...   \n",
              "172  POLYGON ((18.82982 45.90887, 18.82984 45.90888...           0   \n",
              "173  POLYGON ((20.07070 42.58863, 19.80161 42.50009...           0   \n",
              "174  POLYGON ((20.59025 41.85541, 20.52295 42.21787...           0   \n",
              "175  POLYGON ((-61.68000 10.76000, -61.10500 10.890...           0   \n",
              "176  POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...           0   \n",
              "\n",
              "     Datasource                   Country ISO-3166 Code  CC Num  \\\n",
              "0           0.0                         0             0     0.0   \n",
              "1           0.0                         0             0     0.0   \n",
              "2           0.0                         0             0     0.0   \n",
              "3           0.0                         0             0     0.0   \n",
              "4        3636.0  United States of America            US   840.0   \n",
              "..          ...                       ...           ...     ...   \n",
              "172         0.0                         0             0     0.0   \n",
              "173         0.0                         0             0     0.0   \n",
              "174         0.0                         0             0     0.0   \n",
              "175         0.0                         0             0     0.0   \n",
              "176         0.0                         0             0     0.0   \n",
              "\n",
              "     Region Number   Population        Users  User % GDP p.c. (USD)  \\\n",
              "0              0.0          0.0          0.0       0              0   \n",
              "1              0.0          0.0          0.0       0              0   \n",
              "2              0.0          0.0          0.0       0              0   \n",
              "3              0.0          0.0          0.0       0              0   \n",
              "4             21.0  331002651.0  250058937.0  75.55%        $56,266   \n",
              "..             ...          ...          ...     ...            ...   \n",
              "172            0.0          0.0          0.0       0              0   \n",
              "173            0.0          0.0          0.0       0              0   \n",
              "174            0.0          0.0          0.0       0              0   \n",
              "175            0.0          0.0          0.0       0              0   \n",
              "176            0.0          0.0          0.0       0              0   \n",
              "\n",
              "           Sub-Region    Region  \n",
              "0                   0         0  \n",
              "1                   0         0  \n",
              "2                   0         0  \n",
              "3                   0         0  \n",
              "4    Northern America  Americas  \n",
              "..                ...       ...  \n",
              "172                 0         0  \n",
              "173                 0         0  \n",
              "174                 0         0  \n",
              "175                 0         0  \n",
              "176                 0         0  \n",
              "\n",
              "[176 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-da2a47d7-5d17-40b6-9575-a0b7510294ab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pop_est</th>\n",
              "      <th>continent</th>\n",
              "      <th>name</th>\n",
              "      <th>iso_a3</th>\n",
              "      <th>gdp_md_est</th>\n",
              "      <th>geometry</th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>Country</th>\n",
              "      <th>ISO-3166 Code</th>\n",
              "      <th>CC Num</th>\n",
              "      <th>Region Number</th>\n",
              "      <th>Population</th>\n",
              "      <th>Users</th>\n",
              "      <th>User %</th>\n",
              "      <th>GDP p.c. (USD)</th>\n",
              "      <th>Sub-Region</th>\n",
              "      <th>Region</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>889953.0</td>\n",
              "      <td>Oceania</td>\n",
              "      <td>Fiji</td>\n",
              "      <td>FJI</td>\n",
              "      <td>5496</td>\n",
              "      <td>MULTIPOLYGON (((180.00000 -16.06713, 180.00000...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>58005463.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Tanzania</td>\n",
              "      <td>TZA</td>\n",
              "      <td>63177</td>\n",
              "      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>603253.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>W. Sahara</td>\n",
              "      <td>ESH</td>\n",
              "      <td>907</td>\n",
              "      <td>POLYGON ((-8.66559 27.65643, -8.66512 27.58948...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37589262.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAN</td>\n",
              "      <td>1736425</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>328239523.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>USA</td>\n",
              "      <td>21433226</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n",
              "      <td>US</td>\n",
              "      <td>3636.0</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>US</td>\n",
              "      <td>840.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>331002651.0</td>\n",
              "      <td>250058937.0</td>\n",
              "      <td>75.55%</td>\n",
              "      <td>$56,266</td>\n",
              "      <td>Northern America</td>\n",
              "      <td>Americas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>6944975.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Serbia</td>\n",
              "      <td>SRB</td>\n",
              "      <td>51475</td>\n",
              "      <td>POLYGON ((18.82982 45.90887, 18.82984 45.90888...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>622137.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Montenegro</td>\n",
              "      <td>MNE</td>\n",
              "      <td>5542</td>\n",
              "      <td>POLYGON ((20.07070 42.58863, 19.80161 42.50009...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>1794248.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Kosovo</td>\n",
              "      <td>-99</td>\n",
              "      <td>7926</td>\n",
              "      <td>POLYGON ((20.59025 41.85541, 20.52295 42.21787...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>1394973.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>24269</td>\n",
              "      <td>POLYGON ((-61.68000 10.76000, -61.10500 10.890...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>11062113.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>S. Sudan</td>\n",
              "      <td>SSD</td>\n",
              "      <td>11998</td>\n",
              "      <td>POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>176 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da2a47d7-5d17-40b6-9575-a0b7510294ab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-da2a47d7-5d17-40b6-9575-a0b7510294ab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-da2a47d7-5d17-40b6-9575-a0b7510294ab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ca8086d4-a073-472a-8957-38fc76551579\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca8086d4-a073-472a-8957-38fc76551579')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ca8086d4-a073-472a-8957-38fc76551579 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_bf0c5a83-2ac2-40e2-865c-22ecd5c75100\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('world')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_bf0c5a83-2ac2-40e2-865c-22ecd5c75100 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('world');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "world",
              "summary": "{\n  \"name\": \"world\",\n  \"rows\": 176,\n  \"fields\": [\n    {\n      \"column\": \"pop_est\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 151750717.34724236,\n        \"min\": 140.0,\n        \"max\": 1397715000.0,\n        \"num_unique_values\": 176,\n        \"samples\": [\n          389482.0,\n          3193694.0,\n          1397715000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Oceania\",\n          \"Africa\",\n          \"Europe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"Bahamas\",\n          \"Puerto Rico\",\n          \"China\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iso_a3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"BHS\",\n          \"PRI\",\n          \"CHN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdp_md_est\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2024743,\n        \"min\": 16,\n        \"max\": 21433226,\n        \"num_unique_values\": 176,\n        \"samples\": [\n          13578,\n          104988,\n          14342903\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geometry\",\n      \"properties\": {\n        \"dtype\": \"geometry\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"MULTIPOLYGON (((-78.98 26.790000000000003, -78.51 26.870000000000005, -77.85000000000001 26.84, -77.82000000000001 26.580000000000005, -78.91000000000001 26.42, -78.98 26.790000000000003)), ((-77.79 27.040000000000003, -77 26.59, -77.17255 25.87918, -77.35641 26.00735, -77.34 26.53, -77.78802 26.925159999999998, -77.79 27.040000000000003)), ((-78.19087 25.210300000000004, -77.89 25.17, -77.54 24.34, -77.53466 23.759750000000004, -77.78 23.710000000000004, -78.03405000000001 24.28615, -78.40848 24.575640000000003, -78.19087 25.210300000000004)))\",\n          \"POLYGON ((-66.28243445500821 18.514761664295364, -65.7713028632093 18.426679185453878, -65.59100379094295 18.228034979723915, -65.84716386581377 17.97590566657186, -66.59993445500949 17.981822618069273, -67.18416236028527 17.946553453030077, -67.24242753769435 18.374460150622937, -67.10067908391774 18.52060110114435, -66.28243445500821 18.514761664295364))\",\n          \"MULTIPOLYGON (((109.47520958866365 18.197700913968575, 108.65520796105616 18.507681993071387, 108.62621748254044 19.367887885001906, 109.11905561730804 19.821038519769345, 110.21159874882281 20.101253973872033, 110.78655073450221 20.077534491450052, 111.01005130416458 19.69592987719072, 110.57064660038677 19.25587921800927, 110.33918786015147 18.678395087147592, 109.47520958866365 18.197700913968575)), ((80.2599902688853 42.34999929459906, 80.1801501809943 42.92006785742694, 80.86620649610126 43.18036204688101, 79.96610639844141 44.91751699480463, 81.9470707539181 45.31702749285312, 82.45892581576906 45.539649563166506, 83.18048383986047 47.33003123635086, 85.16429039911324 47.0009557155161, 85.72048383987067 47.452969468773105, 85.7682328633083 48.45575063739699, 86.59877648310336 48.549181626980626, 87.35997033076265 49.21498078062912, 87.75126427607671 49.297197984405486, 88.01383222855173 48.599462795600616, 88.85429772334676 48.069081732772965, 90.28082563676392 47.69354909930793, 90.97080936072501 46.88814606382293, 90.58576826371828 45.71971609148753, 90.9455395853343 45.28607330991028, 92.13389082231822 45.11507599545646, 93.4807336771413 44.975472113619965, 94.68892866412533 44.35233185482842, 95.30687544147153 44.24133087826547, 95.76245486855669 43.319449164394605, 96.34939578652781 42.725635280928685, 97.45175744017801 42.74888967546002, 99.51581749878004 42.524691473961724, 100.84586551310827 42.66380442969145, 101.83304039917994 42.51487295182628, 103.31227827353482 41.9074681666676, 104.52228193564899 41.908346666016556, 104.96499393109347 41.59740957291635, 106.12931562706169 42.13432770442891, 107.74477257693795 42.48151581478187, 109.24359581913146 42.5194463160841, 110.41210330611528 42.87123362891103, 111.12968224492023 43.40683401140015, 111.82958784388137 43.74311839453952, 111.66773725794323 44.07317576758771, 111.34837690637946 44.45744171811009, 111.8733061056003 45.10207937273506, 112.43606245325881 45.01164561622429, 113.46390669154417 44.80889313412712, 114.46033165899607 45.339816799493825, 115.98509647020009 45.727235012386004, 116.71786828009886 46.38820241961521, 117.42170128791419 46.67273285581426, 118.87432579963873 46.80541209572365, 119.66326989143876 46.69267995867892, 119.7728239278975 47.04805878355013, 118.86657433479495 47.74706004494617, 118.06414269416672 48.06673045510369, 117.29550744025741 47.69770905210743, 116.30895267137323 47.85341014260284, 115.74283735561579 47.72654450132629, 115.48528201707306 48.13538259540344, 116.19180219936757 49.134598090199106, 116.67880089728612 49.888531399121405, 117.8792444194264 49.510983384796965, 119.2884607280258 50.142882798862004, 119.27939000000003 50.58292, 120.18208000000016 51.64355000000012, 120.7382 51.96411000000006, 120.72578901579197 52.516226304730935, 120.17708865771681 52.75388621684124, 121.00308475147017 53.25140106873119, 122.24574791879283 53.431725979213695, 123.57146999999998 53.45880000000005, 125.06821129771038 53.16104482686886, 125.94634891164617 52.79279857035698, 126.56439904185697 51.7842554795327, 126.93915652883766 51.35389415140592, 127.28745568248485 50.73979726826548, 127.65740000000028 49.760270000000105, 129.39781782442043 49.44060008401544, 130.58229332898242 48.72968740497614, 130.9872600000001 47.79013000000003, 132.50669000000005 47.78896000000003, 133.37359581922794 48.18344167743487, 135.02631147678665 48.478229885443874, 134.50081 47.57845000000009, 134.1123500000001 47.212480000000085, 133.76964399631288 46.116926988299014, 133.09712000000013 45.14409000000006, 131.8834542176595 45.32116160743652, 131.02519000000018 44.96796000000006, 131.28855512911548 44.11151968034828, 131.1446879416149 42.92998973242689, 130.63386640840974 42.90301463477053, 130.63999970690955 42.39502427522179, 129.99426720593323 42.985386867843786, 129.59666873587952 42.42498179785456, 128.0522152039723 41.99428457291795, 128.20843305879066 41.46677155208249, 127.34378299368302 41.50315176041597, 126.86908328664987 41.81656932226619, 126.18204511932943 41.10733612727637, 125.07994184784064 40.56982371679245, 124.26562462778531 39.928493353834156, 122.86757042856095 39.63778758397622, 122.1313879741309 39.170451768544666, 121.05455447803286 38.897471014962846, 121.58599490772248 39.36085358332407, 121.37675703337268 39.75026133885949, 122.16859500538106 40.422442531896024, 121.64035851449353 40.94638987890333, 120.76862877816194 40.59338816991754, 119.63960208544907 39.898055935214245, 119.02346398323306 39.252333075511146, 118.04274865119791 39.2042739934797, 117.53270226447711 38.73763580988408, 118.05969852098964 38.06147553156106, 118.87814985562832 37.89732534438593, 118.91163618375344 37.44846385349871, 119.70280236214205 37.15638865818505, 120.8234574728236 37.87042776137801, 121.711258579598 37.48112335870718, 122.35793745329849 37.45448415786072, 122.5199947449658 36.93061432550185, 121.10416385303307 36.651329047180425, 120.63700890511453 36.111439520811075, 119.66456180224606 35.60979055433772, 119.1512081238586 34.90985911716044, 120.22752485563373 34.36033193616865, 120.62036909391655 33.37672272392514, 121.22901411345023 32.46031871187719, 121.90814578663003 31.692174384074647, 121.89191938689038 30.949351508095106, 121.26425744027328 30.6762674016487, 121.50351932178467 30.14291494396429, 122.0921138855891 29.83252045340315, 121.93842817595306 29.01802236583478, 121.68443851123851 28.225512600206617, 121.12566124886649 28.135673122667185, 120.39547326058232 27.05320689544932, 119.5854968608395 25.740780544532612, 118.65687137255452 24.54739085540024, 117.28160647997088 23.624501451099658, 115.89073530483512 22.78287323657807, 114.76382734584624 22.668074042241667, 114.15254682826564 22.22376007739615, 113.80677981980074 22.5483397486214, 113.24107791550159 22.051367499270455, 111.84359215703248 21.550493679281473, 110.78546552942407 21.397143866455338, 110.44403934127168 20.34103261970633, 109.88986128137361 20.282457383703488, 109.62765506392466 21.008227037026703, 109.86448815311832 21.395050970947523, 108.5228129415244 21.715212307211814, 108.05018029178294 21.55237986906012, 107.04342003787264 21.811898912029914, 106.56727339073532 22.21820486092477, 106.72540327354847 22.79426788989842, 105.81124718630522 22.976892401617903, 105.32920942588663 23.352063300056912, 104.47685835166448 22.819150092046968, 103.50451460166056 22.70375661873921, 102.7069922221001 22.708795070887675, 102.17043582561358 22.464753119389304, 101.65201785686152 22.318198757409547, 101.80311974488293 21.17436676684507, 101.27002566935997 21.201651923095184, 101.18000532430754 21.436572984294028, 101.15003299357825 21.849984442629022, 100.41653771362738 21.558839423096614, 99.98348921102149 21.7429367131364, 99.24089887898725 22.11831431730458, 99.5319922220874 22.94903880461258, 98.89874922078278 23.14272207284253, 98.66026248575577 24.063286037689966, 97.60471967976198 23.897404690033042, 97.72460900267914 25.083637193293, 98.67183800658916 25.918702500913525, 98.71209394734451 26.743535874940267, 98.68269005737046 27.50881216075062, 98.2462309102333 27.74722138112918, 97.91198774616944 28.335945136014345, 97.32711388549004 28.26158274994634, 96.24883344928779 28.411030992134442, 96.58659061074749 28.83097951915434, 96.11767866413103 29.452802028922466, 95.40480228066464 29.03171662039213, 94.56599043170294 29.277438055939985, 93.41334760943269 28.640629380807226, 92.50311893104364 27.89687632904645, 91.69665652869668 27.771741848251665, 91.25885379431992 28.040614325466294, 90.7305139505678 28.064953925075756, 90.01582889197118 28.296438503527217, 89.47581017452111 28.042758897406397, 88.81424848832056 27.299315904239364, 88.73032596227856 28.086864732367516, 88.12044070836987 27.876541652939594, 86.9545170430006 27.974261786403517, 85.82331994013151 28.203575954698707, 85.01163821812304 28.642773952747344, 84.23457970575015 28.839893703724698, 83.89899295444673 29.320226141877658, 83.33711510613719 29.463731594352197, 82.32751264845088 30.115268052688137, 81.52580447787474 30.42271698660863, 81.11125613802932 30.183480943313402, 79.7213668151071 30.88271474865473, 78.73889448437401 31.515906073527063, 78.45844648632601 32.61816437431273, 79.17612877799553 32.48377981213771, 79.20889163606859 32.994394639613716, 78.81108646028574 33.50619802503242, 78.91226891471322 34.32193634697579, 77.83745079947457 35.494009507787766, 76.19284834178569 35.89840342868783, 75.89689741405013 36.666806138651836, 75.15802778514092 37.13303091078912, 74.98000247589542 37.419990139305895, 74.8299857929521 37.9900070257014, 74.86481570831683 38.3788463404816, 74.25751427602273 38.60650686294345, 73.92885216664644 38.50581533462274, 73.6753792662548 39.4312368841056, 73.96001305531843 39.660008449861735, 73.8222436868283 39.893973497063186, 74.77686242055606 40.36642527929163, 75.4678279967307 40.56207225194867, 76.52636803579745 40.42794607193512, 76.90448449087708 41.06648590754965, 78.18719689322597 41.18531586360481, 78.54366092317531 41.58224254003869, 80.11943037305139 42.12394074153825, 80.2599902688853 42.34999929459906)))\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"citizenship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"MG\",\n          \"GW\",\n          \"GN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Datasource\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1093.0547415029487,\n        \"min\": 0.0,\n        \"max\": 11365.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          94.0,\n          145.0,\n          15.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"Madagascar\",\n          \"Guinea-Bissau\",\n          \"Guinea\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISO-3166 Code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"MG\",\n          \"GW\",\n          \"GN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CC Num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 224.88485365314716,\n        \"min\": 0.0,\n        \"max\": 860.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          450.0,\n          624.0,\n          324.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.89343478489366,\n        \"min\": 0.0,\n        \"max\": 151.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          39.0,\n          34.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115178059.15558396,\n        \"min\": 0.0,\n        \"max\": 1439323776.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          27691018.0,\n          1968001.0,\n          13132795.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Users\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66065480.89291186,\n        \"min\": 0.0,\n        \"max\": 823871288.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          4421862.0,\n          82424.0,\n          1860551.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"15.97%\",\n          \"4.19%\",\n          \"14.17%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP p.c. (USD)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"$361\",\n          \"$591\",\n          \"$624\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sub-Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Southern Europe\",\n          \"Southern Asia\",\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Americas\",\n          \"Europe\",\n          \"Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "world"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "world['gdp_md_est']=world['gdp_md_est']*1000000"
      ],
      "metadata": {
        "id": "NSrix2Scj1US"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "bjfk-TZvG_zF"
      },
      "outputs": [],
      "source": [
        "#FOR GRAPH\n",
        "\n",
        "world['gdpG'] = world['gdp_md_est'] / (world['pop_est']) #gdp per capita KEEP SAME\n",
        "world['pcG'] = world['Datasource'] / (world['pop_est']/1000000) #trafficking per MILLION individuals\n",
        "\n",
        "#FOR REST\n",
        "world['gdp'] = world['gdp_md_est'] / world['pop_est'] #gdp per capita\n",
        "world['pc'] = world['Datasource'] / world['pop_est'] #trafficking per capita"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "1rVH24FTEuVc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "outputId": "aea24145-40c3-4da8-c662-a241847683d5"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1850x1050 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig, ax = plt.subplots(1, 1)\n",
        "fig.set_size_inches(18.5, 10.5)\n",
        "world_plot = world.plot(column='pcG', ax=ax, legend=False)\n",
        "scalarmappable = ax.collections[0]\n",
        "\n",
        "# Increase the size of the axis numbers (tick labels)\n",
        "ax.tick_params(axis='both', which='major', labelsize=17)\n",
        "\n",
        "# Create a colorbar using the ScalarMappable object\n",
        "cax = fig.add_axes([0.92, 0.17, 0.03, 0.6])\n",
        "cbar = fig.colorbar(scalarmappable, cax=cax)\n",
        "\n",
        "# Set font size for the colorbar labels\n",
        "cbar.ax.tick_params(labelsize=18)\n",
        "ax.set_axis_off();\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import geopandas as gpd\n",
        "\n",
        "\n",
        "fig, ax = plt.subplots(1, 1)\n",
        "fig.set_size_inches(18.5, 10.5)\n",
        "\n",
        "world_plot = world.plot(column='pcG', ax=ax, legend=False)\n",
        "scalarmappable = ax.collections[0]\n",
        "\n",
        "ax.tick_params(axis='both', which='major', labelsize=17)\n",
        "\n",
        "cax = fig.add_axes([0.92, 0.17, 0.03, 0.6])\n",
        "cbar = fig.colorbar(scalarmappable, cax=cax)\n",
        "\n",
        "cbar.ax.tick_params(labelsize=18)\n",
        "ax.set_axis_off()\n",
        "\n",
        "for idx, row in world.iterrows():\n",
        "    if row['pcG'] > 20:\n",
        "        centroid = row.geometry.centroid.coords[0]\n",
        "        ax.annotate(text=row['Country'],\n",
        "                    xy=centroid,\n",
        "                    fontsize=12,\n",
        "                    color='red',\n",
        "                    ha='center',\n",
        "                    va='center',\n",
        "                    arrowprops=dict(arrowstyle='->', color='red', lw=1.5))\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "id": "d2nmJFO8R_yl",
        "outputId": "3a5f7006-9595-4b9a-acc8-751081c307a2"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1850x1050 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "fig, ax = plt.subplots(1, 1)\n",
        "fig.set_size_inches(18.5, 10.5)\n",
        "world.plot(column='gdpG', ax=ax, legend=False, vmin=0);\n",
        "scalarmappable = ax.collections[0]\n",
        "\n",
        "ax.tick_params(axis='both', which='major', labelsize=17)\n",
        "\n",
        "cax = fig.add_axes([0.92, 0.17, 0.03, 0.6])\n",
        "cbar = fig.colorbar(scalarmappable, cax=cax)\n",
        "\n",
        "cbar.ax.tick_params(labelsize=24)\n",
        "\n",
        "ax.set_axis_off();\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "giHlrlPz1gF6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "outputId": "06eef9f1-3fec-4663-de6f-84a99611e224"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1850x1050 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "YwyP00db0AOK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "c0c7d82b-e94d-4eb1-de2a-b3fc9162b996"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='gdp', ylabel='pc'>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "\"\"\"plt.scatter(world[\"gdp\"],world[\"pc\"])\n",
        "plt.text( .064, .000017, \"A\",fontsize=(14))\n",
        "plt.xlabel(\"GDP per Capita\")\n",
        "plt.ylabel(\"Trafficking Reports per Capita\")\n",
        "#plt.title(\"World Trafficking Reports Per Capita vs. GDP Per Capita\");\n",
        "plt.show()\"\"\"\n",
        "#not in the paper yet\n",
        "#df.boxplot(column='y_column', by='x_axis')\n",
        "#plt.show()\n",
        "df=world\n",
        "import seaborn as sns\n",
        "sns.regplot(x='gdp',y='pc',data=df, ci=95)\n",
        "#plt.ylim(0,)\n",
        "#plt.xlim(0,)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "E1uwZD2jnDMJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a2851cc7-6a1e-41fa-a6a6-9f0924bc9fb2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0       6175.607026\n",
            "1       1089.156033\n",
            "2       1503.515109\n",
            "3      46194.708478\n",
            "4      65297.517508\n",
            "           ...     \n",
            "172     7411.833736\n",
            "173     8908.005793\n",
            "174     4417.449539\n",
            "175    17397.469342\n",
            "176     1084.602914\n",
            "Name: gdp, Length: 176, dtype: float64\n",
            "0      0.000000\n",
            "1      0.000000\n",
            "2      0.000000\n",
            "3      0.000000\n",
            "4      0.000011\n",
            "         ...   \n",
            "172    0.000000\n",
            "173    0.000000\n",
            "174    0.000000\n",
            "175    0.000000\n",
            "176    0.000000\n",
            "Name: pc, Length: 176, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "\n",
        "\n",
        "import geopandas as gpd\n",
        "data_points = (world['gdp'], world['pc'])\n",
        "for point in data_points:\n",
        "    print(point)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "8ZihpHTRrkK3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "outputId": "1d638e4e-4676-4562-90d4-fda69a8cb47a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAksAAAHHCAYAAACvJxw8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABIAklEQVR4nO3deXhU5f3//9es2chGQhICBMIiu4psIlRcooi4a61+0QK1ahUU0J8LVbTSKi4tUq2CtopaFxQ/bq0KIiAuRcAoKDsIGASTEEL2bTJz//4IGR0DxyQkzCR5Pq7rXJNzzj33vOdGyMsz99zHZowxAgAAwGHZg10AAABAKCMsAQAAWCAsAQAAWCAsAQAAWCAsAQAAWCAsAQAAWCAsAQAAWCAsAQAAWCAsAQAAWCAsAS3Un/70J9lstmPyWqeddppOO+00//5HH30km82m119//Zi8/sSJE9WtW7dj8lqNVVJSot///vdKSUmRzWbTtGnTgl0SgCZCWAJCwHPPPSebzebfwsPDlZqaqjFjxuixxx5TcXFxk7zOvn379Kc//Unr1q1rkv6aUijXVh8PPPCAnnvuOd1www3697//rauvvtqyvc/n0wsvvKCzzjpLiYmJcrlcSkpK0tlnn62nn35alZWVAe1/+t+H0+lU+/btNXjwYE2dOlWbNm2q0//u3bsDnuNwOJSWlqaLL764xY4xECw27g0HBN9zzz2nSZMmadasWUpPT5fH41F2drY++ugjLV26VGlpaXrnnXd0/PHH+59TXV2t6upqhYeH1/t1vvjiCw0dOlQLFizQxIkT6/28qqoqSZLb7ZZUc2Xp9NNP16JFi3TZZZfVu5/G1ubxeOTz+RQWFtYkr9UcTj75ZDmdTn366ae/2La8vFwXX3yxlixZolNOOUXnn3++kpOTlZ+fr5UrV+q9997ThAkT9Mwzz/ifY7PZdNZZZ+m3v/2tjDEqLCzU+vXrtWjRIpWWluqhhx7SLbfc4m+/e/dupaen68orr9S5554rr9erzZs3a968eaqsrNTnn3+uE088sTmGAmh1nMEuAMCPxo4dqyFDhvj3Z8yYoeXLl+u8887TBRdcoM2bNysiIkKS5HQ65XQ271/hsrIyRUZG+kNSsLhcrqC+fn3k5uaqX79+9Wo7ffp0LVmyRHPnztXUqVMDzt16663avn27li5dWud5xx13nK666qqAYw8++KDOP/983XrrrerTp4/OPffcgPMnnXRSwHNGjhypCy64QPPmzdNTTz1V37cHtGl8DAeEuDPOOEMzZ87Ud999pxdffNF//HBzlpYuXapRo0YpLi5O7dq1U+/evfXHP/5RUs3VoKFDh0qSJk2a5P945rnnnpNUMy9pwIAByszM1KmnnqrIyEj/c38+Z6mW1+vVH//4R6WkpCgqKkoXXHCB9uzZE9CmW7duh72K9dM+f6m2w81ZKi0t1a233qouXbooLCxMvXv31l//+lf9/GK5zWbTlClT9NZbb2nAgAEKCwtT//79tXjx4sMP+M/k5ubqmmuuUXJyssLDw3XCCSfo+eef95+vnb+1a9cuvfvuu/7ad+/efdj+9uzZo3/9618655xz6gSlWr169dKNN95Yr/oSEhK0cOFCOZ1O3X///b/Y/owzzpAk7dq1q179A+DKEtAiXH311frjH/+oDz74QNdee+1h22zcuFHnnXeejj/+eM2aNUthYWHasWOHPvvsM0lS3759NWvWLN1zzz267rrr9Ktf/UqSdMopp/j7OHDggMaOHasrrrhCV111lZKTky3ruv/++2Wz2XTHHXcoNzdXc+fOVUZGhtatW+e/AlYf9antp4wxuuCCC7RixQpdc801OvHEE7VkyRLddttt2rt3rx599NGA9p9++qneeOMN3XjjjYqOjtZjjz2mSy+9VFlZWUpISDhiXeXl5TrttNO0Y8cOTZkyRenp6Vq0aJEmTpyogoICTZ06VX379tW///1vTZ8+XZ07d9att94qSerQocNh+3z//ffl9XrrXCE6GmlpaRo9erRWrFihoqIixcTEHLHtt99+K0mW7xvAzxgAQbdgwQIjyaxdu/aIbWJjY82gQYP8+/fee6/56V/hRx991Egy+/fvP2Ifa9euNZLMggUL6pwbPXq0kWTmz59/2HOjR4/2769YscJIMp06dTJFRUX+46+99pqRZP7+97/7j3Xt2tVMmDDhF/u0qm3ChAmma9eu/v233nrLSDJ/+ctfAtpddtllxmazmR07dviPSTJutzvg2Pr1640k8/jjj9d5rZ+aO3eukWRefPFF/7GqqiozYsQI065du4D33rVrVzNu3DjL/owxZvr06UaSWbduXcDxyspKs3//fv+Wl5cXcF6SmTx58hH7nTp1qpFk1q9fb4wxZteuXUaSue+++8z+/ftNdna2+eijj8ygQYOMJPN///d/v1grgBp8DAe0EO3atbP8VlxcXJwk6e2335bP52vUa4SFhWnSpEn1bv/b3/5W0dHR/v3LLrtMHTt21Hvvvdeo16+v9957Tw6HQzfffHPA8VtvvVXGGL3//vsBxzMyMtSjRw///vHHH6+YmBjt3LnzF18nJSVFV155pf+Yy+XSzTffrJKSEq1cubLBtRcVFUmq+fP8+Wt16NDBv3Xt2rVB/db29/P/Ru6991516NBBKSkpOu200/Ttt9/qoYce0iWXXNLg2oG2irAEtBAlJSUBweTnfvOb32jkyJH6/e9/r+TkZF1xxRV67bXXGhScOnXq1KDJ3L169QrYt9ls6tmz5xHn6zSV7777TqmpqXXGo2/fvv7zP5WWllanj/j4eB08ePAXX6dXr16y2wP/qTzS69RHbc0lJSUBx0eOHKmlS5dq6dKlOvvssxvcb21/Px+T6667TkuXLtWyZcuUmZmp3Nxc3X777Q3uH2jLmLMEtADff/+9CgsL1bNnzyO2iYiI0Mcff6wVK1bo3Xff1eLFi/Xqq6/qjDPO0AcffCCHw/GLr9OQeUb1daSFM71eb71qagpHeh0ThJVT+vTpI0nasGGDTjjhBP/xDh06KCMjQ5ICJvLX14YNG+RwOJSenh5wvFevXv5+ATQOV5aAFuDf//63JGnMmDGW7ex2u84880zNmTNHmzZt0v3336/ly5drxYoVko4cXBpr+/btAfvGGO3YsSPgm2vx8fEqKCio89yfX5VpSG1du3bVvn376nzktGXLFv/5ptC1a1dt3769ztW5o3mdsWPHyuFw6KWXXmqSGiUpKytLK1eu1IgRIyyvPgJoHMISEOKWL1+uP//5z0pPT9f48eOP2C4/P7/OsdpFB2tXg46KipKkw4aXxnjhhRcCAsvrr7+uH374QWPHjvUf69Gjhz7//HP/wpaS9N///rfOEgMNqa12kcV//OMfAccfffRR2Wy2gNc/Gueee66ys7P16quv+o9VV1fr8ccfV7t27TR69OgG95mWlqbf/e53ev/99+vUX6shV7zy8/N15ZVXyuv16q677mpwPQB+GR/DASHk/fff15YtW1RdXa2cnBwtX75cS5cuVdeuXfXOO+9YrtY9a9Ysffzxxxo3bpy6du2q3NxcPfnkk+rcubNGjRolqSa4xMXFaf78+YqOjlZUVJSGDx9e56Ob+mrfvr1GjRqlSZMmKScnR3PnzlXPnj0Dljf4/e9/r9dff13nnHOOLr/8cn377bd68cUXAyZcN7S2888/X6effrruuusu7d69WyeccII++OADvf3225o2bVqdvhvruuuu01NPPaWJEycqMzNT3bp10+uvv67PPvtMc+fObfRVnLlz52rXrl266aabtHDhQp1//vlKSkpSXl6ePvvsM/3nP/9R79696zxv27ZtevHFF2WMUVFRkX8F75KSEs2ZM0fnnHPO0b5lAIcT1O/iATDG/Lh0QO3mdrtNSkqKOeuss8zf//73gK+o1/r50gHLli0zF154oUlNTTVut9ukpqaaK6+80mzbti3geW+//bbp16+fcTqdAV/VHz16tOnfv/9h6zvS0gGvvPKKmTFjhklKSjIRERFm3Lhx5rvvvqvz/L/97W+mU6dOJiwszIwcOdJ88cUXdfq0qu3nSwcYY0xxcbGZPn26SU1NNS6Xy/Tq1cs88sgjxufzBbTTEb5yf6QlDX4uJyfHTJo0ySQmJhq3220GDhx42OUN6rt0QK3q6mqzYMECc8YZZ5j27dsbp9NpEhMTzZlnnmnmz59vysvL67yP2s1ut5u4uDgzaNAgM3XqVLNx48Y6/dcuHfDII4/UuyYAh8e94QAAACwwZwkAAMACYQkAAMACYQkAAMACYQkAAMACYQkAAMACYQkAAMBCq1+U0ufzad++fYqOjm7yWz0AAIDmYYxRcXGxUlNT69zM+lhr9WFp37596tKlS7DLAAAAjbBnzx517tw5qDW0+rBUezuCPXv2KCYmJsjVAACA+igqKlKXLl1C4ubQrT4s1X70FhMTQ1gCAKCFCYUpNEzwBgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsEBYAgAAsOAMdgEtWVZWlvLy8pq838TERKWlpTV5vwAAoOEIS42UlZWlPn37qrysrMn7joiM1JbNmwlMAACEAMJSI+Xl5am8rEzj73hEyWk9mqzfnKxv9dJDtykvL4+wBABACCAsHaXktB7q3Kt/sMsAAADNhAneAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFoIalrxer2bOnKn09HRFRESoR48e+vOf/yxjjL+NMUb33HOPOnbsqIiICGVkZGj79u1BrBoAALQlQQ1LDz30kObNm6d//OMf2rx5sx566CE9/PDDevzxx/1tHn74YT322GOaP3++Vq9eraioKI0ZM0YVFRVBrBwAALQVzmC++P/+9z9deOGFGjdunCSpW7dueuWVV7RmzRpJNVeV5s6dq7vvvlsXXnihJOmFF15QcnKy3nrrLV1xxRVBqx0AALQNQb2ydMopp2jZsmXatm2bJGn9+vX69NNPNXbsWEnSrl27lJ2drYyMDP9zYmNjNXz4cK1atSooNQMAgLYlqFeW7rzzThUVFalPnz5yOBzyer26//77NX78eElSdna2JCk5OTngecnJyf5zP1dZWanKykr/flFRUTNVDwAA2oKgXll67bXX9NJLL+nll1/Wl19+qeeff15//etf9fzzzze6z9mzZys2Nta/denSpQkrBgAAbU1Qw9Jtt92mO++8U1dccYUGDhyoq6++WtOnT9fs2bMlSSkpKZKknJycgOfl5OT4z/3cjBkzVFhY6N/27NnTvG8CAAC0akENS2VlZbLbA0twOBzy+XySpPT0dKWkpGjZsmX+80VFRVq9erVGjBhx2D7DwsIUExMTsAEAADRWUOcsnX/++br//vuVlpam/v3766uvvtKcOXP0u9/9TpJks9k0bdo0/eUvf1GvXr2Unp6umTNnKjU1VRdddFEwSwcAAG1EUMPS448/rpkzZ+rGG29Ubm6uUlNTdf311+uee+7xt7n99ttVWlqq6667TgUFBRo1apQWL16s8PDwIFYOAADaiqCGpejoaM2dO1dz5849YhubzaZZs2Zp1qxZx64wAACAQ7g3HAAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgAXCEgAAgIWgh6W9e/fqqquuUkJCgiIiIjRw4EB98cUX/vPGGN1zzz3q2LGjIiIilJGRoe3btwexYgAA0JYENSwdPHhQI0eOlMvl0vvvv69Nmzbpb3/7m+Lj4/1tHn74YT322GOaP3++Vq9eraioKI0ZM0YVFRVBrBwAALQVzmC++EMPPaQuXbpowYIF/mPp6en+n40xmjt3ru6++25deOGFkqQXXnhBycnJeuutt3TFFVcc85oBAEDbEtQrS++8846GDBmiX//610pKStKgQYP0z3/+039+165dys7OVkZGhv9YbGyshg8frlWrVgWjZAAA0MYENSzt3LlT8+bNU69evbRkyRLdcMMNuvnmm/X8889LkrKzsyVJycnJAc9LTk72n/u5yspKFRUVBWwAAACNFdSP4Xw+n4YMGaIHHnhAkjRo0CBt2LBB8+fP14QJExrV5+zZs3Xfffc1ZZkAAKANC+qVpY4dO6pfv34Bx/r27ausrCxJUkpKiiQpJycnoE1OTo7/3M/NmDFDhYWF/m3Pnj3NUDkAAGgrghqWRo4cqa1btwYc27Ztm7p27SqpZrJ3SkqKli1b5j9fVFSk1atXa8SIEYftMywsTDExMQEbAABAYwX1Y7jp06frlFNO0QMPPKDLL79ca9as0dNPP62nn35akmSz2TRt2jT95S9/Ua9evZSenq6ZM2cqNTVVF110UTBLBwAAbURQw9LQoUP15ptvasaMGZo1a5bS09M1d+5cjR8/3t/m9ttvV2lpqa677joVFBRo1KhRWrx4scLDw4NYOQAAaCuCGpYk6bzzztN55513xPM2m02zZs3SrFmzjmFVAAAANYJ+uxMAAIBQRlgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACwQFgCAACw0Kiw1L17dx04cKDO8YKCAnXv3v2oiwIAAAgVjQpLu3fvltfrrXO8srJSe/fuPeqiAAAAQoWzIY3feecd/89LlixRbGysf9/r9WrZsmXq1q1bkxUHAAAQbA0KSxdddJEkyWazacKECQHnXC6XunXrpr/97W9NVhwAAECwNSgs+Xw+SVJ6errWrl2rxMTEZikKAAAgVDQoLNXatWtXU9cBAAAQkhoVliRp2bJlWrZsmXJzc/1XnGo9++yzR10YAABAKGhUWLrvvvs0a9YsDRkyRB07dpTNZmvqugAAAEJCo8LS/Pnz9dxzz+nqq69u6noAAABCSqPWWaqqqtIpp5zS1LUAAACEnEaFpd///vd6+eWXm7oWAACAkNOoj+EqKir09NNP68MPP9Txxx8vl8sVcH7OnDlNUhwAAECwNSosff311zrxxBMlSRs2bAg4x2RvAADQmjQqLK1YsaKp6wAAAAhJjZqzBAAA0FY06srS6aefbvlx2/LlyxtdEAAAQChpVFiqna9Uy+PxaN26ddqwYUOdG+wCAAC0ZI0KS48++uhhj//pT39SSUnJURUEAAAQSpp0ztJVV13FfeEAAECr0qRhadWqVQoPD2/KLgEAAIKqUR/DXXLJJQH7xhj98MMP+uKLLzRz5swmKQwAACAUNCosxcbGBuzb7Xb17t1bs2bN0tlnn90khQEAAISCRoWlBQsWNHUdAAAAIalRYalWZmamNm/eLEnq37+/Bg0a1CRFAQAAhIpGhaXc3FxdccUV+uijjxQXFydJKigo0Omnn66FCxeqQ4cOTVkjAABA0DTq23A33XSTiouLtXHjRuXn5ys/P18bNmxQUVGRbr755qauEQAAIGgadWVp8eLF+vDDD9W3b1//sX79+umJJ55ggjcAAGhVGnVlyefzyeVy1Tnucrnk8/mOuigAAIBQ0aiwdMYZZ2jq1Knat2+f/9jevXs1ffp0nXnmmU1WHAAAQLA1Kiz94x//UFFRkbp166YePXqoR48eSk9PV1FRkR5//PGmrhEAACBoGjVnqUuXLvryyy/14YcfasuWLZKkvn37KiMjo0mLAwAACLYGXVlavny5+vXrp6KiItlsNp111lm66aabdNNNN2no0KHq37+/Pvnkk+aqFQAA4JhrUFiaO3eurr32WsXExNQ5Fxsbq+uvv15z5sxpsuIAAACCrUFhaf369TrnnHOOeP7ss89WZmbmURcFAAAQKhoUlnJycg67ZEAtp9Op/fv3H3VRAAAAoaJBYalTp07asGHDEc9//fXX6tix41EXBQAAECoaFJbOPfdczZw5UxUVFXXOlZeX695779V5553XZMUBAAAEW4OWDrj77rv1xhtv6LjjjtOUKVPUu3dvSdKWLVv0xBNPyOv16q677mqWQgEAAIKhQVeWkpOT9b///U8DBgzQjBkzdPHFF+viiy/WH//4Rw0YMECffvqpkpOTG1XIgw8+KJvNpmnTpvmPVVRUaPLkyUpISFC7du106aWXKicnp1H9AwAANEaDF6Xs2rWr3nvvPR08eFA7duyQMUa9evVSfHx8o4tYu3atnnrqKR1//PEBx6dPn653331XixYtUmxsrKZMmaJLLrlEn332WaNfCwAAoCEadbsTSYqPj9fQoUM1bNiwowpKJSUlGj9+vP75z38G9FNYWKhnnnlGc+bM0RlnnKHBgwdrwYIF+t///qfPP/+80a8HAADQEI0OS01l8uTJGjduXJ1bpWRmZsrj8QQc79Onj9LS0rRq1apjXSYAAGijGnVvuKaycOFCffnll1q7dm2dc9nZ2XK73YqLiws4npycrOzs7CP2WVlZqcrKSv9+UVFRk9ULAADanqBdWdqzZ4+mTp2ql156SeHh4U3W7+zZsxUbG+vfunTp0mR9AwCAtidoYSkzM1O5ubk66aST5HQ65XQ6tXLlSj322GNyOp1KTk5WVVWVCgoKAp6Xk5OjlJSUI/Y7Y8YMFRYW+rc9e/Y08zsBAACtWdA+hjvzzDP1zTffBBybNGmS+vTpozvuuENdunSRy+XSsmXLdOmll0qStm7dqqysLI0YMeKI/YaFhSksLKxZawcAAG1H0MJSdHS0BgwYEHAsKipKCQkJ/uPXXHONbrnlFrVv314xMTG66aabNGLECJ188snBKBkAALRBQZ3g/UseffRR2e12XXrppaqsrNSYMWP05JNPBrssAADQhoRUWProo48C9sPDw/XEE0/oiSeeCE5BAACgzQv6OksAAAChjLAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABggbAEAABgwRnsAtoSj9ennftLtb+kUiUV1fJ4fYoJdyku0qVuiVGKjXAFu0QAAPAzhKVjoKjCo893HtCO3BJ5vObwjbbtV+e4CHVx2o5tcQAAwBJhqRl5fUZf7Tmo1TvzVe2rCUmxES51S4hUdLhLLodNReXVyimu0PcHy/V9Qbm+l0sdLrtX2SXVQa4eAABIhKVmU+Hx6t1vftD3B8slSamx4RrZM1EdY8Nls9W9elRU4dHX3xfqy+/yFdljqG75IE/29tk6Z0DKsS4dAAD8BBO8m0FhuUevfbFH3x8sl8th01l9k3XZ4M5KjYs4bFCSpJhwl0b1TFRGR48qsr5RRbXRH17M1BMrdsiYI3x0BwAAmh1hqYkVV3j0eub3OljmUbswp349uIv6pcYcMST9XIxLyll4l87tGSlJemTJVv35v5sJTAAABAlhqQmVV3n15ld7VVJZrfhIl34zpIs6RIc1vCPj0+9PitWsC/tLkp79bJceXrKVwAQAQBAQlppItdend9bv819RumhQJ7ULP7opYb8d0U1/PhSY5n30reat/LYpSgUAAA1AWGoiH2/PU3ZRhcKcdl08qJNiwptmzaSrR3TT3eP6SpIeXrxVH2zMbpJ+AQBA/fBtuCawNbtY3+wtlCSdMyBF7aPcR93n5s2b/T+fFCWN7Rmp93eU6eZXvtTsMxPUNbZhYSwxMVFpaWlHXRcAAG0NYekoFXukFVtyJElDu8WrW0LUUfVXlL9fknTVVVcFnrA7lHz5LKnrCZqy8Gv98NxUmaryevcbERmpLZs3E5gAAGggwtJRsenLfKc8XqNOcRE6uXvCUfdYXlIkSRp3/V3qffzggHOVXml5tlFZfKpG3bVQQxO99eozJ+tbvfTQbcrLyyMsAQDQQISlo9Bu0FjlVdrlcth0dr9k2eu5PEB9JKR2Vede/escj0gp1+uZ3yurzKG+7VLVp2NMk70mAACoiwnejZRbWq340RMlSSN7JCrmGN0ENzUuQsPT20uSVmzdr6JyzzF5XQAA2irCUiM9lVkke1ikEsJ8Or5z7DF97aHd2qtjbLiqvD4t25LL+ksAADQjwlIjXdInSlX7d2tw++p6r87dVOx2m87qlyyH3aas/DJt+qHomL4+AABtCWGpkfonhemHZ6co+th8+lZHfKRbJ3ev+Tjuk+15KqmsDk4hAAC0coSlFuykLvFKig5TZbVPn2zbH+xyAABolQhLLZjdbtOZfZNkk7Qtt0RZ+WXBLgkAgFaHsNTCJUWH+yeYf7Q1V14fk70BAGhKhKVWYET3BEW6HTpY5tGXWQeDXQ4AAK0KYakVCHM5NKpnoiRp7e58lTLZGwCAJkNYaiX6pEQrKTpMHq/R6l35wS4HAIBWg7DUSthsNp3aq4MkacPeQh0oqQxyRQAAtA6EpVakU3yEenSIkpH06Y68YJcDAECrQFhqZUb2TJTdJu0+UMZSAgAANAHCUisTH+nWwE41Swl8uj1PPu4bBwDAUSEstULD0xPkdti1v6RSW7KLg10OAAAtGmGpFYpwOzQ0PV6StOrbA6r2BbkgAABaMMJSK3Vi5zhFhztVUlmtb0v4YwYAoLH4LdpKOR12ndw9QZK0rcghmzsyyBUBANAyEZZasT4p0YqPdKnKZ1PM0IuCXQ4AAC0SYakVs9tsGnHo6lLM0ItUXMnkJQAAGoqw1Mr1TGqnWJdP9rBIvbmlJNjlAADQ4hCWWjmbzab+cV5J0ns7SpVbVBHkigAAaFkIS21ASrhR5d4tqvJKT6zYEexyAABoUQhLbYDNJhV8/IIk6eU1Wfr+ILdBAQCgvghLbURF1tcakOSWx2v0+DKuLgEAUF+EpTZk/IBoSdLrX36vXXmlQa4GAICWgbDUhvROdOuMPkny+oweXbot2OUAANAiEJbamFvPPk6S9J+v92lLdlGQqwEAIPQRltqY/qmxGjewo4yR5nzA1SUAAH4JYakNmn5WL9lt0gebcrR+T0GwywEAIKQRltqgnknRumhQJ0nSXz/YGuRqAAAIbYSlNmramcfJabfpk+15Wr3zQLDLAQAgZBGW2qi0hEhdPrSLJOlvH2yTMSbIFQEAEJoIS23YTWf0lNtp15rd+fpke16wywEAICQRltqwjrERuvrkrpJq5i5xdQkAgLoIS23cDaf1UKTboa+/L9TSTTnBLgcAgJAT1LA0e/ZsDR06VNHR0UpKStJFF12krVsDv51VUVGhyZMnKyEhQe3atdOll16qnBx+qTeVxHZhmjSymyRpztJt8vm4ugQAwE8FNSytXLlSkydP1ueff66lS5fK4/Ho7LPPVmnpj/ctmz59uv7zn/9o0aJFWrlypfbt26dLLrkkiFW3Ptf9qoeiw53akl2s/3y9L9jlAAAQUpzBfPHFixcH7D/33HNKSkpSZmamTj31VBUWFuqZZ57Ryy+/rDPOOEOStGDBAvXt21eff/65Tj755GCU3erERrp03a+6629Lt2nuh9s1bmBHOR18QgsAgBRic5YKCwslSe3bt5ckZWZmyuPxKCMjw9+mT58+SktL06pVq4JSY2s1aVS62ke5tSuvVG98uTfY5QAAEDJCJiz5fD5NmzZNI0eO1IABAyRJ2dnZcrvdiouLC2ibnJys7Ozsw/ZTWVmpoqKigA2/rF2YUzeM7iFJ+vuy7aqs9ga5IgAAQkPIhKXJkydrw4YNWrhw4VH1M3v2bMXGxvq3Ll26NFGFrd/VI7oqKTpMewvK9eraPcEuBwCAkBASYWnKlCn673//qxUrVqhz587+4ykpKaqqqlJBQUFA+5ycHKWkpBy2rxkzZqiwsNC/7dnDL/36Cnc5dNMZPSVJjy3bodLK6iBXBABA8AU1LBljNGXKFL355ptavny50tPTA84PHjxYLpdLy5Yt8x/bunWrsrKyNGLEiMP2GRYWppiYmIAN9feboWlKax+pvJJK/euTXcEuBwCAoAtqWJo8ebJefPFFvfzyy4qOjlZ2drays7NVXl4uSYqNjdU111yjW265RStWrFBmZqYmTZqkESNG8E24ZuJ22nXbmN6SpKc//lb7iyuDXBEAAMEV1LA0b948FRYW6rTTTlPHjh3926uvvupv8+ijj+q8887TpZdeqlNPPVUpKSl64403glh16zduYEed0DlWpVVePbZse7DLAQAgqIL+MdzhtokTJ/rbhIeH64knnlB+fr5KS0v1xhtvHHG+EpqG3W7TnWP7SpJeWZOlnftLglwRAADBExITvBF6RvRI0Bl9klTtM3pkydZffgIAAK0UYQlHdMc5fWS3Se9vyFbmdweDXQ4AAEFBWMIR9U6J1mWDa5ZyePD9zTKGm+wCANoewhIsTT/rOIW77Fq7+6CWbMwJdjkAABxzhCVY6hgbod+P6i5J+su7m1Th4TYoAIC2hbCEX3TDaT2UEhOu7w+W658f7wx2OQAAHFOEJfyiqDCnZpzbR5L0xEc7tK+gPMgVAQBw7BCWUC8XnJCqod3iVeHx6YH3Nge7HAAAjhnCEurFZrPpTxf0l90m/ffrH/T5zgPBLgkAgGOCsIR6658aq/83PE2S9Kd3Nqra6wtyRQAAND/CEhrk1rN6KzbCpS3ZxXplTVawywEAoNkRltAg8VFu/X9nHydJemTJVuUWVwS5IgAAmhdhCQ125bA0DewUq6KKav3pnY3BLgcAgGZFWEKDOR12PXjpQDnsNr33TbaWbMwOdkkAADQbwhIapX9qrK47tWZl75lvbVBhuSfIFQEA0DwIS2i0qWf2UnpilHKLK/Xg+6y9BABonQhLaLRwl0MPXjJQkvTKmj1a9S1rLwEAWh/CEo7K8O4J/rWXZrzxNTfaBQC0OoQlHLU7x/ZRckyYdh8o04Pvbwl2OQAANCnCEo5aTLhLD15yvCTpuf/t1ootuUGuCACApkNYQpM4vU+SJp7STZL0/y1ar9wiFqsEALQOhCU0mTvH9lGflGgdKK3SrYvWy+czwS4JAICjRlhCkwl3OfT4lYMU7rLrk+15eubTXcEuCQCAo0ZYQpPqlRytmef1kyQ9vGSLvvm+MMgVAQBwdAhLaHL/b1iazumfIo/X6OaFX6mogtW9AQAtF2EJTc5ms+nBSwcqNTZcu/JKdcur65i/BABosQhLaBZxkW7Nv3qw3E67Ptycq8eX7wh2SQAANAphCc3m+M5xuv+iAZKkRz/cpsUbfghyRQAANBxhCc3q10O6+NdfmvbqOn39fUFQ6wEAoKEIS2h2d4/rq9HHdVCFx6drnv9CewvKg10SAAD1RlhCs3M67PrH/xuk3snR2l9cqQnPrtHB0qpglwUAQL0QlnBMRIe79OykoeoYG64duSWa9NxalVVVB7ssAAB+EWEJx0ynuAi98Lthiot0ad2eAl3/70xVeLzBLgsAAEvOYBeAY2fz5s1N3mdiYqLS0tLq3b5XcrSenThUV/1rtT7Znqfr/52pp64erHCXo8lrAwCgKRCW2oCi/P2SpKuuuqrJ+46IjNSWzZsbFJhOSovXgolDNXHBWq3ctl83vJipeVcRmAAAoYmw1AaUlxRJksZdf5d6Hz+4yfrNyfpWLz10m/Ly8hoUliRpePcEPTtxqCY9t0Yrtu7XhGfX6F8Thig63NVk9QEA0BQIS21IQmpXde7VP9hl+I3okaDnJw3TNc9/odW78jX+X6v17MShSmwXFuzSAADwY4I3gmp49wS9cu3Jah/l1tffF+riJz/TjtySYJcFAIAfYQlBN7BzrBb9YYTS2kdqT365LnnyM322Iy/YZQEAIImwhBDRo0M7vXnjKTopLU5FFdW6+pnVevrjb2WMCXZpAIA2jrCEkJHQLkwvX3uyLj2ps3xGeuC9LZr88pcqLPcEuzQAQBvGBG8ctaZev+nm4Qk6oUusZv1nk977Jlvr9xTq71ecqCHd2jfp6wAAUB+EJTRac63fVLt20/E3nKKbX/lKWflluvypVbr2V901/azjWI8JAHBMEZbQaM2xftNP12466aQ0vXvzKN379ka98dVePfXxTi3dlKP7LuyvX/Xq0CSvBwDALyEs4ag15/pN0eEuzfnNiTp3YEf98c1vtDOvVFc/s0YZfZN197i+6pYY1SyvCwBALSZ4o0XI6JespdNHa9LIbnLabfpwc47OenSlZr+3WcUVTAAHADQfwhJajNhIl+49v78WT/uVTj2ugzxeo6c+3qlRD63QnA+2Kr+0KtglAgBaIcISWpyeSdF6ftJQPTtxiHp0iFJhuUePLd+hkQ8u133/2ah9BeXBLhEA0IowZwktks1m0xl9kjX6uCQt2ZitJz/aoQ17i7Tgs93696rvdGbfJF0+pItGH9dBTgf/TwAAaDzCElo0h92mcwd21NgBKfp0R56eXPGtVu08oCUbc7RkY446RIfpkpM66ZJBnXVccjvZbLZgl1wvWVlZystr2lu+JCYmKi0trUn7BIC2gLCEVsFms+lXvTroV706aGt2sRZ9sUdvfrVX+4sr9dTKnXpq5U51aR+hjL7JOqtvsoamt5crRK84ZWVlqU/fviovK2vSfmvXryIwAUDDEJbQ6vROidbd5/XT7ef00fItuXo983t9vH2/9uSXa8Fnu7Xgs92KDndqaLf2GtItXsO6tdfAzrEKc4bGYpd5eXkqLyvT+DseUXJajybp86frVxGWAKBhCEtotdxOu84ZkKJzBqSorKpan2zP04ebcrR8S64OlFZp+ZZcLd+S62/bPzVGfVJi1LdjtPqkxKh3SrRiI1xBqz85rUezrV8FAKg/whJCUlPfb06SYiordWWPMF2e3l67CjzanOfR5v1V2pxXpcJKn77KKtBXWQUBz4l225TczqmkKIeSoxxKjHQoLtyuuDCHYsPt6p7aQX16dJPd3jLmQjXHuDIXCkBrR1hCSGmu+83VsEkyhz3jjE+VO6Wn3Ild5UpKl7tDNzljk1RcZVSc79GO/CMtfLlf0iZFuh2KCnMqyv/oVITbIZfDJrvNJuehR4e9ZrPJJp8x8vqMvMbI1P7skw4WFCjp13/SJ7lOuYu/lzGSkal5/OnPkoyp+7PNJtlttoDHihKj5Ctn65a3v5Xv9Y0yVRUynnL5PJUyVeXyeSrkKy+St6xIvvIi+coK5S0vkqn65WUYmAsFoLUjLCGkNMf95iRp85qVev/5vzeoX4+vSmXVNpVUS2XVNpVW21TutanSK1X4bKqo9smrmnlOZVVelVV5tb+J6o3oPkS5FZIqmmrNqDCFpw1s8LPsMgpzSBEOo0inUYRDhx6NIh1Sac4uvfbQLcyFAtCqEZYQkpr6fnM5Wd82eb/fb9+oR6f+Wh+u/FQ9evdTaaVXpVXVKq2sVmmlV2VV1f4rRz6fUbWv5uqRzxj5jOSw2WS322S31SyBUHvl6fusLN13370657c3KyGlU83VIdV8489m0+F/Vs1VpNqLZzWvUXOlySejHevX6OO3XtSoy/+gjunHyeP1yeM1qvb6VOX1yVNtVOHxqrx2q/Kq2mfkk03lXqnca1P+YRdIP06dpy7U7R/mqf+2r9QtIUrpiVHqlhilHh2iFB0evDlfANBUCEvAUTDVVYoLd6hrQtPd0PdLZ55u37BcXaOmqHNKTJP0eVAlKtv6mVKcE3RC57h6Pcfj9anc41VZpVfFlR4VV1SrpKJaxZWHHis8Kq3yyhHeTjvyPdqRv69OH4mRDqXFOJUW61SXWKfSYlzqHONUmNN6jhfzoACEEsISgMNyOexyOeyKCXcpReGHbfPN5yv14mP3y9k+Va74VDnjDz227yRnu/bKK/Mqr8yrL7Mr/c8xxqfqgmx59n8nT953qtr/nar271J1/j7J+CQxDwpAaCEsAWi0qtJCefK+09mXXlVnLliVr0pFVTYVeX7cCj02Vfnsch0KVTpuhL+9XUYxLiO3p0hbV/yfPtywV+fFJalDdFiLWXkdQOtEWAJw1BoyF6ysqloHSqp0oLRKB0oqlVdSpQOllfJ4pQKPTVKc4k+/RrM+ztesj5epfZRbvZOj1TslWn07Rqt3SoyOS26nSDf/fAE4NvjXBjhKTb12UXOshRRKIt1ORbZ3qkv7SP8xY4yKKqqVV1Kpnd/t0drVq3Tc0NP0Q4lX+aVVWrXzgFbtPOBvb7NJXdtHqndKzQKifVJqwlTXhCg5WsiaVwBaDsIS0EjNuyaUVFJS0iz9hiKbzabYCJdiI1wKK/Dp/bcf0pJ7Lle/gSdoe06JtmQXaUt2sbZmF2tLdpHySqq0+0CZdh8o05KNOf5+wl12HZccrd7J0eqZ1E7piVHq3iFKae2j5HaG5r0AAYQ+whLQSM29JlRFRUWT9dlShbscGtg5VgM7xwYczyup1NbsYm3+oehQgCrWtpxiVXh8+vr7Qn39fWFAe7tN6tI+UumJUYcCVDt1T4xSl/hIdYwLD9mbKgMIDYQl4Cg115pQOLLEdmFK7BmmkT0T/ce8PqPdB0q19dAVqJ15pdqVV6Jd+0tVWuXVdwfK9N2BMn20NXDpULtNSokJV+f4SHWOj1Cn+Ah1jo9Q5/hIdYqLUEpsuMJdoXGTZQDBQVgCEJIaO3crRVJKgjQ6QVLvKBkTqYMVPv1QXK3vDlYot9ymfSXV+qG4WrmlXnl80r7CCu0rrNCa3YfvM8plU3yEQ+3D7YqPcCj+J4/dUtqrX/fOiot0Ky7CJWcIX6XKyspSXl5ek/fLulgtR3P8N9AW/vwJSwBCyrG9P6BN9qhYOWOTa7aYJDlja7dkOWKSZHeFqdRjVOqp1vdFh+uzQNJO/15MuFPxUW7FRboVH+lSfKRbcZEuRYe71C6s5t6B7Q5tUT95jApzKNLtVJjTLqfd1uTLJWRlZalP374qLytr0n4l1sVqKZrrv4G28OdPWAIQUkLp/oDGSB5TpYpqm8p9UoXXpgrvj49FZZU6cLBAsUmdVOapCWFFFdUqqqjWdwca/wvJZpPCnHaFOR01jy673I5D+y67wpx2uZ0OuR02uRx2uZ12/yKitcdczprn1JyzKWffPjmOG60zx1ys+IQk2W1GdtV8DGm3KfDnn5+zSc5Djz+Xk/WtXnroNu4P2ALk5eWpvKxM4+94RMlpPZqkz7by509YAhCSWsr9Aec8dJ3+k5mp4084UQXlHhWUVamgzKODZR4dLKtSQVmVDpZ5am4PU+lVSWXN/QNLDm219xIsraqWOXTRyxipwuNThcfXJHXWShgzWTsk6cAvtTw8p90m909CmNthlzeitxLOu1VPZRYqPWeL2oU5FPuzq2rto9yKj3Qz9ytEJKf1aNK/W21BiwhLTzzxhB555BFlZ2frhBNO0OOPP65hw4YFuywAkFR3fpVdUoKkBLukdoe2gLPuQ9uPfMbI45WqfUZVXqPSikrJ4ZbHa+TxGXm8RlU++fervEbVvpr2Pz7+2EfAMZ+UX1Co1Wu+UPcTTpY7sl3NTZ4P3dj5pzd8/vFnyXvoXK1qn1F1lVdl8ga8n3b9T9eSb8ukb62/nOB2SNFuu2LC7Ip229Xu0GPtfnRYzc8xbru6dkzQgF7dFOFysII7gi7kw9Krr76qW265RfPnz9fw4cM1d+5cjRkzRlu3blVSUlKwywPQhh3b+VVN4+IRL6jPoN71bm9MTXjyeI2qqn01m7fm0eP1aff2zfrs/Tdkd0fIHhYpmztCjvBo2SOiZY+MkSM8RvaIaNkcTlV5pQPlPh0or88VszxJWxXmtPuvTLWPcis+6serVrX77SPdio/iCpYVr8+o3OOTPTJWpdXSgZLKmvDrNar2+eQ59FjtNfJ4ffKZmgDvM0bm0M91HiWVFDgUn/EHbc6r0knBfpPNKOTD0pw5c3Tttddq0qRJkqT58+fr3Xff1bPPPqs777wzyNUBaMtCaX5Vffts6PpdNptNTptNTrsUcZgQUrwhW8Vr37Ss1Rifqk2VKn1SldemKp9U5bOp0lvzWLMvVR46V+7xqrJasjldqqz26YfCCv1QWP+6I90OxUe6FR3uVHT4j5Pof/pzO/++S1GHJt67HfZDc8Iccjvth+aN1ey7HE0z6d4YI5+Rqn0+eX1GlR6fKqt9qvB4/Y8//dl/rNqnyp/sl1d5Ve7xHvq4tubnH495A45VeGoCriR1ueklLd4naV/WUb+XGg7FDD5Pewqrm6i/0BTSYamqqkqZmZmaMWOG/5jdbldGRoZWrVoVxMoA4EctYX5Vc6/f1eRzwSZfok8/X6u0Xv10sKxK+aVVhx5r5oX9uF+lg6Ue5ZdV6WBplap9RmVVXpVVlTdJLT/ldthlt0t2m012m002m+Sw2w7t1xyX5P9os9p36KPN2o86fTVBKdgcNiOXwyGnwy6nwyaXvebRabfJ6bDLZbfJ/pP3ZTvSo2wqzt+vVe+/qu4ZNwX7bTWrkA5LeXl58nq9Sk5ODjienJysLVu2HPY5lZWVqqys9O8XFtas5FtUdNjv/DZa7a0ovt++UZXlTfc1zNp/0LJ3b9O3UZG/0Dp4fTZXv9RKrdRKrfu/3yVJ2vT1V/JW1vz76p8HJknhh7aEnz7LLWNcKq82KqnyqajSqLzaqLzap3KPUYXHqMJrVOap2S+v9qmi2qis2tRcnamumefl8UmeQx9P/Xx+fXOtqe+wSS6HTS6HTW57zdyumm82Si67TW6HTW67TU6Han4+tIU5a467HTaFHdp3/fS8w6YwR03fYU6bvtu5XZOvv06XT/uzOnROP3JBRgqYlmbBtn+XCj99WSnu65v892xtf8aEQMI0IWzv3r1Gkvnf//4XcPy2224zw4YNO+xz7r33XqOaP2o2NjY2Nja2Fr7t2bPnWEQOSyF9ZSkxMVEOh0M5OTkBx3NycpSSknLY58yYMUO33HKLf9/n8yk/P18JCQlN9o2KoqIidenSRXv27FFMTEyT9NlWMHaNx9g1HmPXeIxd4zBujVc7dllZWbLZbEpNTQ12SaH9MZzb7dbgwYO1bNkyXXTRRZJqws+yZcs0ZcqUwz4nLCxMYWFhAcfi4uKapb6YmBj+EjQSY9d4jF3jMXaNx9g1DuPWeLGxsSEzdiEdliTplltu0YQJEzRkyBANGzZMc+fOVWlpqf/bcQAAAM0p5MPSb37zG+3fv1/33HOPsrOzdeKJJ2rx4sV1Jn0DAAA0h5APS5I0ZcqUI37sFgxhYWG6995763zch1/G2DUeY9d4jF3jMXaNw7g1XiiOnc2YUPhOHgAAQGiyB7sAAACAUEZYAgAAsEBYAgAAsEBYAgAAsEBYaoQnnnhC3bp1U3h4uIYPH641a9YEu6RmM3v2bA0dOlTR0dFKSkrSRRddpK1btwa0qaio0OTJk5WQkKB27drp0ksvrbPqelZWlsaNG6fIyEglJSXptttuU3V14F2qP/roI5100kkKCwtTz5499dxzz9WppyWP/YMPPiibzaZp06b5jzF2R7Z3715dddVVSkhIUEREhAYOHKgvvvjCf94Yo3vuuUcdO3ZURESEMjIytH379oA+8vPzNX78eMXExCguLk7XXHON/76Otb7++mv96le/Unh4uLp06aKHH364Ti2LFi1Snz59FB4eroEDB+q9995rnjfdBLxer2bOnKn09HRFRESoR48e+vOf/xxwfy3GrsbHH3+s888/X6mpqbLZbHrrrbcCzofSONWnlmPFatw8Ho/uuOMODRw4UFFRUUpNTdVvf/tb7du3L6CPFjduwbvTSsu0cOFC43a7zbPPPms2btxorr32WhMXF2dycnKCXVqzGDNmjFmwYIHZsGGDWbdunTn33HNNWlqaKSkp8bf5wx/+YLp06WKWLVtmvvjiC3PyySebU045xX++urraDBgwwGRkZJivvvrKvPfeeyYxMdHMmDHD32bnzp0mMjLS3HLLLWbTpk3m8ccfNw6HwyxevNjfpiWP/Zo1a0y3bt3M8ccfb6ZOneo/ztgdXn5+vunatauZOHGiWb16tdm5c6dZsmSJ2bFjh7/Ngw8+aGJjY81bb71l1q9fby644AKTnp5uysvL/W3OOeccc8IJJ5jPP//cfPLJJ6Znz57myiuv9J8vLCw0ycnJZvz48WbDhg3mlVdeMREREeapp57yt/nss8+Mw+EwDz/8sNm0aZO5++67jcvlMt98882xGYwGuv/++01CQoL573//a3bt2mUWLVpk2rVrZ/7+97/72zB2Nd577z1z1113mTfeeMNIMm+++WbA+VAap/rUcqxYjVtBQYHJyMgwr776qtmyZYtZtWqVGTZsmBk8eHBAHy1t3AhLDTRs2DAzefJk/77X6zWpqalm9uzZQazq2MnNzTWSzMqVK40xNX8xXC6XWbRokb/N5s2bjSSzatUqY0zNXyy73W6ys7P9bebNm2diYmJMZWWlMcaY22+/3fTv3z/gtX7zm9+YMWPG+Pdb6tgXFxebXr16maVLl5rRo0f7wxJjd2R33HGHGTVq1BHP+3w+k5KSYh555BH/sYKCAhMWFmZeeeUVY4wxmzZtMpLM2rVr/W3ef/99Y7PZzN69e40xxjz55JMmPj7eP5a1r927d2///uWXX27GjRsX8PrDhw83119//dG9yWYybtw487vf/S7g2CWXXGLGjx9vjGHsjuTnv/RDaZzqU0uwHC5k/tyaNWuMJPPdd98ZY1rmuPExXANUVVUpMzNTGRkZ/mN2u10ZGRlatWpVECs7dgoLCyVJ7du3lyRlZmbK4/EEjEmfPn2UlpbmH5NVq1Zp4MCBAauujxkzRkVFRdq4caO/zU/7qG1T20dLHvvJkydr3Lhxdd4fY3dk77zzjoYMGaJf//rXSkpK0qBBg/TPf/7Tf37Xrl3Kzs4OeE+xsbEaPnx4wNjFxcVpyJAh/jYZGRmy2+1avXq1v82pp54qt9vtbzNmzBht3bpVBw8e9LexGt9Qc8opp2jZsmXatm2bJGn9+vX69NNPNXbsWEmMXX2F0jjVp5ZQVlhYKJvN5r9Pa0scN8JSA+Tl5cnr9da51UpycrKys7ODVNWx4/P5NG3aNI0cOVIDBgyQJGVnZ8vtdte5WfFPxyQ7O/uwY1Z7zqpNUVGRysvLW+zYL1y4UF9++aVmz55d5xxjd2Q7d+7UvHnz1KtXLy1ZskQ33HCDbr75Zj3//POSfnzvVu8pOztbSUlJAeedTqfat2/fJOMbqmN355136oorrlCfPn3kcrk0aNAgTZs2TePHj5fE2NVXKI1TfWoJVRUVFbrjjjt05ZVX+m+K2xLHrUXc7gShYfLkydqwYYM+/fTTYJfSIuzZs0dTp07V0qVLFR4eHuxyWhSfz6chQ4bogQcekCQNGjRIGzZs0Pz58zVhwoQgVxfaXnvtNb300kt6+eWX1b9/f61bt07Tpk1TamoqY4djyuPx6PLLL5cxRvPmzQt2OUeFK0sNkJiYKIfDUefbSjk5OUpJSQlSVcfGlClT9N///lcrVqxQ586d/cdTUlJUVVWlgoKCgPY/HZOUlJTDjlntOas2MTExioiIaJFjn5mZqdzcXJ100klyOp1yOp1auXKlHnvsMTmdTiUnJzN2R9CxY0f169cv4Fjfvn2VlZUl6cf3bvWeUlJSlJubG3C+urpa+fn5TTK+oTp2t912m//q0sCBA3X11Vdr+vTp/qubjF39hNI41aeWUFMblL777jstXbrUf1VJapnjRlhqALfbrcGDB2vZsmX+Yz6fT8uWLdOIESOCWFnzMcZoypQpevPNN7V8+XKlp6cHnB88eLBcLlfAmGzdulVZWVn+MRkxYoS++eabgL8ctX95an8hjhgxIqCP2ja1fbTEsT/zzDP1zTffaN26df5tyJAhGj9+vP9nxu7wRo4cWWeJim3btqlr166SpPT0dKWkpAS8p6KiIq1evTpg7AoKCpSZmelvs3z5cvl8Pg0fPtzf5uOPP5bH4/G3Wbp0qXr37q34+Hh/G6vxDTVlZWWy2wP/aXc4HPL5fJIYu/oKpXGqTy2hpDYobd++XR9++KESEhICzrfIcWvQdHCYhQsXmrCwMPPcc8+ZTZs2meuuu87ExcUFfFupNbnhhhtMbGys+eijj8wPP/zg38rKyvxt/vCHP5i0tDSzfPly88UXX5gRI0aYESNG+M/Xfv397LPPNuvWrTOLFy82HTp0OOzX32+77TazefNm88QTTxz26+8tfex/+m04Yxi7I1mzZo1xOp3m/vvvN9u3bzcvvfSSiYyMNC+++KK/zYMPPmji4uLM22+/bb7++mtz4YUXHvZr3YMGDTKrV682n376qenVq1fA15MLCgpMcnKyufrqq82GDRvMwoULTWRkZJ2vJzudTvPXv/7VbN682dx7770h9fX3n5swYYLp1KmTf+mAN954wyQmJprbb7/d34axq1FcXGy++uor89VXXxlJZs6cOearr77yf2srlMapPrUcK1bjVlVVZS644ALTuXNns27duoDfGz/9ZltLGzfCUiM8/vjjJi0tzbjdbjNs2DDz+eefB7ukZiPpsNuCBQv8bcrLy82NN95o4uPjTWRkpLn44ovNDz/8ENDP7t27zdixY01ERIRJTEw0t956q/F4PAFtVqxYYU488UTjdrtN9+7dA16jVksf+5+HJcbuyP7zn/+YAQMGmLCwMNOnTx/z9NNPB5z3+Xxm5syZJjk52YSFhZkzzzzTbN26NaDNgQMHzJVXXmnatWtnYmJizKRJk0xxcXFAm/Xr15tRo0aZsLAw06lTJ/Pggw/WqeW1114zxx13nHG73aZ///7m3Xffbfo33ESKiorM1KlTTVpamgkPDzfdu3c3d911V8AvKsauxooVKw7779uECROMMaE1TvWp5VixGrddu3Yd8ffGihUr/H20tHGzGfOTZV0BAAAQgDlLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAFq8bt26ae7cucEuA0ArRVgCAACwQFgCAACwQFgCEFKKi4s1fvx4RUVFqWPHjnr00Ud12mmnadq0aZKk3NxcnX/++YqIiFB6erpeeumlOn3YbDbNmzdPY8eOVUREhLp3767XX3/9GL8TAK0FYQlASLnlllv02Wef6Z133tHSpUv1ySef6Msvv/Sfnzhxovbs2aMVK1bo9ddf15NPPqnc3Nw6/cycOVOXXnqp1q9fr/Hjx+uKK67Q5s2bj+VbAdBKcCNdACGjuLhYCQkJevnll3XZZZdJkgoLC5Wamqprr71WN954o3r37q01a9Zo6NChkqQtW7aob9++evTRR/1Xn2w2m/7whz9o3rx5/r5PPvlknXTSSXryySeP+fsC0LJxZQlAyNi5c6c8Ho+GDRvmPxYbG6vevXtLkjZv3iyn06nBgwf7z/fp00dxcXF1+hoxYkSdfa4sAWgMwhIAAIAFwhKAkNG9e3e5XC6tXbvWf6ywsFDbtm2TVHMVqbq6WpmZmf7zW7duVUFBQZ2+Pv/88zr7ffv2bZ7CAbRqzmAXAAC1oqOjNWHCBN12221q3769kpKSdO+998put8tms6l3794655xzdP3112vevHlyOp2aNm2aIiIi6vS1aNEiDRkyRKNGjdJLL72kNWvW6JlnngnCuwLQ0nFlCUBImTNnjkaMGKHzzjtPGRkZGjlypPr27avw8HBJ0oIFC5SamqrRo0frkksu0XXXXaekpKQ6/dx3331auHChjj/+eL3wwgt65ZVX1K9fv2P9dgC0AnwbDkBIKy0tVadOnfS3v/1N11xzTb2eY7PZ9Oabb+qiiy5q3uIAtAl8DAcgpHz11VfasmWLhg0bpsLCQs2aNUuSdOGFFwa5MgBtFWEJQMj561//qq1bt8rtdmvw4MH65JNPlJiYGOyyALRRfAwHAABggQneAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFghLAAAAFv5/1ECxEkTMqE8AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Visualize the 'gdp' variable\n",
        "sns.histplot(df['gdp'], kde=True)\n",
        "plt.title(\"Distribution of GDP\")\n",
        "plt.show()\n",
        "\n",
        "# Visualize the 'pc' variable\n",
        "sns.histplot(df['pc'], kde=True)\n",
        "plt.title(\"Distribution of PC\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "id": "_LFBUoEM_u6L",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 303
        },
        "outputId": "1a6eb35c-6672-448d-f770-c5474001e65c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "112          Ukraine\n",
              "111          Belarus\n",
              "90          Cambodia\n",
              "147      Philippines\n",
              "62     Guinea-Bissau\n",
              "105       Kyrgyzstan\n",
              "122         Bulgaria\n",
              "Name: name, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Ukraine</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Belarus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Cambodia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>Philippines</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>Guinea-Bissau</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Kyrgyzstan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>Bulgaria</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ],
      "source": [
        "world.sort_values(by=\"pc\",ascending=False)[\"name\"][:7]\n",
        "#ukraine is top one"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "id": "EC2f0x95AUM0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "98352ef5-3754-4f80-b00c-dc82f412215a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "128                Luxembourg\n",
            "23     Fr. S. Antarctic Lands\n",
            "20               Falkland Is.\n",
            "127               Switzerland\n",
            "133                   Ireland\n",
            "21                     Norway\n",
            "Name: name, dtype: object\n"
          ]
        }
      ],
      "source": [
        "world.sort_values(by=\"gdp\",ascending=False)[\"name\"][:11]\n",
        "#ukraine is top one\n",
        "\n",
        "top_countries_gdp = world.sort_values(by=\"gdp\", ascending=False)[\"name\"][:6]\n",
        "print(top_countries_gdp)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "721Fs_qjvUQ4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9abcfbc1-08e2-4e9b-f438-5f22c62393ab"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The DataFrame does not contain infs (infinities).\n",
            "The DataFrame does not contain NaNs (Not-a-Number).\n"
          ]
        }
      ],
      "source": [
        "has_infs = df.isin([np.inf, -np.inf]).any(axis=None)\n",
        "has_nans = df.isnull().any().any()\n",
        "\n",
        "if has_infs:\n",
        "    print(\"The DataFrame contains infs (infinities).\")\n",
        "else:\n",
        "    print(\"The DataFrame does not contain infs (infinities).\")\n",
        "\n",
        "if has_nans:\n",
        "    print(\"The DataFrame contains NaNs (Not-a-Number).\")\n",
        "else:\n",
        "    print(\"The DataFrame does not contain NaNs (Not-a-Number).\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "id": "qw9mLbRZzn9D",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "outputId": "26400642-6687-45d5-df2c-499062caedeb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "112                     Ukraine\n",
              "111                     Belarus\n",
              "90                     Cambodia\n",
              "147                 Philippines\n",
              "62                Guinea-Bissau\n",
              "105                  Kyrgyzstan\n",
              "122                    Bulgaria\n",
              "117                     Romania\n",
              "16                        Haiti\n",
              "93                      Myanmar\n",
              "59                        Ghana\n",
              "4      United States of America\n",
              "64                 Sierra Leone\n",
              "6                    Uzbekistan\n",
              "125                     Albania\n",
              "Name: name, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Ukraine</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Belarus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Cambodia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>Philippines</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>Guinea-Bissau</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Kyrgyzstan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>Bulgaria</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Romania</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Haiti</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Myanmar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Ghana</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>United States of America</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>Sierra Leone</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Uzbekistan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>Albania</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "world.sort_values(by=\"pc\",ascending=False)[\"name\"][:15]\n",
        "#ukraine is top one"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "0xiEzbqTaPHH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 848
        },
        "outputId": "622ad6f1-77d2-4304-cf05-391b66c6ed8f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-8.742787988461458, 183.59854775769062)"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#without ultra high trafficking countries and ultra high gdp per capita aka OUTLIERS\n",
        "\n",
        "\n",
        "nohigh=world[world[\"Country\"]!=\"Ukraine\"][world[\"Country\"]!=\"Belarus\"][world[\"Country\"]!=\"Cambodia\"][world[\"Country\"]!=\"Philippines\"][world[\"Country\"]!=\"Guinea-Bissau\"][world[\"name\"]!=\"Switzerland\"][world[\"name\"]!=\"Luxembourg\"][world[\"name\"]!=\"Falkland Is.\"][world[\"name\"]!=\"Fr. S. Antarctic Lands\"][world[\"name\"]!=\"Norway\"][world[\"name\"]!=\"Ireland\"][world[\"name\"]!=\"Kyrgyzstan\"]\n",
        "plt.scatter(nohigh[\"gdpG\"],nohigh[\"pcG\"])\n",
        "plt.xlabel(\"GDP per Capita\")\n",
        "plt.ylabel(\"Trafficking Reports Million individuals\")\n",
        "#plt.title(\"World Trafficking Reports Per Capita vs. \\n GDP Per Capita with Omitted Data\");\n",
        "#plt.ylim([-.00001, .000175])\n",
        "#plt.ylim([-0.000000001, .000000018])\n",
        "#plt.xlim([-0.0000005, .000012])\n",
        "\n",
        "#x axis gdp y axis pc\n",
        "# from graph with outliers:\n",
        "#(-5460.876223401382, 120425.2061426726)\n",
        "#(-8.742787988461458, 183.59854775769062)\n",
        "plt.xlim([-5460.876223401382, 120425.2061426726])\n",
        "plt.ylim([-8.742787988461458, 183.59854775769062])\n",
        "\n",
        "#nodc=usamap[usamap[\"STATE_NAME\"]!=\"District of Columbia\"]\n",
        "#plt.scatter(nodc[\"PerCapitaGDP\"],nodc[\"Calls\"])\n",
        "#plt.xlabel(\"gdp per capita\")\n",
        "#plt.ylabel(\"trafficking calls per capita\")\n",
        "#plt.title(\"Trafficking calls Per Capita vs. GDP Per Capita\");"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "id": "lJIO7xADMYra"
      },
      "outputs": [],
      "source": [
        "world = world.rename(columns={\"CC Num\":\"Num\", \"Region Number\":\"rnum\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "0z43lTnPMLU1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "909cabe3-b638-4b05-c3a6-246603514709"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.26.4)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (1.13.1)\n",
            "Requirement already satisfied: patsy in /usr/local/lib/python3.10/dist-packages (0.5.6)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.1.4)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy) (1.16.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.2)\n",
            "Requirement already satisfied: numpy>=1.22.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.26.4)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.13.1)\n",
            "Requirement already satisfied: pandas!=2.1.0,>=1.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (2.1.4)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.6)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (24.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels) (2024.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.6->statsmodels) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "#!pip3 install git+https://github.com/statsmodels/statsmodels.git\n",
        "\n",
        "!pip3 install numpy scipy patsy pandas\n",
        "!pip3 install statsmodels\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "lScmlOvt_6hy"
      },
      "outputs": [],
      "source": [
        "#new\n",
        "#world.corr()['pc']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "id": "nMV3FuMdMP1J"
      },
      "outputs": [],
      "source": [
        "lmworld = smf.ols(formula='pc ~ C(rnum) + gdp', data=world)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "id": "_y6_RSFlGGNJ"
      },
      "outputs": [],
      "source": [
        "#just shows that to find pvalue i use OLS. thats all. no need otu use data here or in the next cell\n",
        "\n",
        "import statsmodels.api as sm\n",
        "\n",
        "# Assuming you have a DataFrame 'df' with columns 'gdp' and 'pc'\n",
        "x = world['gdp']  # Independent variable\n",
        "y = world['pc']   # Dependent variable\n",
        "\n",
        "# Add a constant to the independent variable\n",
        "x = sm.add_constant(x)\n",
        "\n",
        "# Fit the linear regression model\n",
        "model = sm.OLS(y, x).fit()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "id": "So8leHeSGJIW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f96ffde1-3c71-44f9-b746-69e7cdd36f7b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                     pc   R-squared:                       0.013\n",
            "Model:                            OLS   Adj. R-squared:                  0.008\n",
            "Method:                 Least Squares   F-statistic:                     2.338\n",
            "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.128\n",
            "Time:                        05:08:30   Log-Likelihood:                 1633.1\n",
            "No. Observations:                 176   AIC:                            -3262.\n",
            "Df Residuals:                     174   BIC:                            -3256.\n",
            "Df Model:                           1                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "==============================================================================\n",
            "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "const       7.188e-06   2.09e-06      3.436      0.001    3.06e-06    1.13e-05\n",
            "gdp        -1.213e-10   7.93e-11     -1.529      0.128   -2.78e-10    3.53e-11\n",
            "==============================================================================\n",
            "Omnibus:                      225.527   Durbin-Watson:                   1.493\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             8108.524\n",
            "Skew:                           5.439   Prob(JB):                         0.00\n",
            "Kurtosis:                      34.423   Cond. No.                     3.22e+04\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 3.22e+04. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ],
      "source": [
        "print(model.summary())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "id": "lOBr-5z9MyHZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 737
        },
        "outputId": "f21bec46-ff67-4bb6-c28e-2c8de72dd8e0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:                     pc   R-squared:                       0.579\n",
              "Model:                            OLS   Adj. R-squared:                  0.545\n",
              "Method:                 Least Squares   F-statistic:                     17.15\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):           2.54e-24\n",
              "Time:                        05:08:30   Log-Likelihood:                 1708.1\n",
              "No. Observations:                 176   AIC:                            -3388.\n",
              "Df Residuals:                     162   BIC:                            -3344.\n",
              "Df Model:                          13                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "====================================================================================\n",
              "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------------\n",
              "Intercept         3.263e-07   1.67e-06      0.196      0.845   -2.96e-06    3.62e-06\n",
              "C(rnum)[T.5.0]    1.777e-06    1.1e-05      0.162      0.872   -1.99e-05    2.35e-05\n",
              "C(rnum)[T.11.0]   1.247e-05   5.38e-06      2.319      0.022    1.85e-06    2.31e-05\n",
              "C(rnum)[T.13.0]   2.777e-09   1.54e-05      0.000      1.000   -3.05e-05    3.05e-05\n",
              "C(rnum)[T.14.0]   1.801e-06   7.86e-06      0.229      0.819   -1.37e-05    1.73e-05\n",
              "C(rnum)[T.21.0]   1.193e-05   1.57e-05      0.762      0.447    -1.9e-05    4.29e-05\n",
              "C(rnum)[T.29.0]    2.98e-05   1.55e-05      1.927      0.056   -7.37e-07    6.03e-05\n",
              "C(rnum)[T.30.0]   -1.24e-07   1.54e-05     -0.008      0.994   -3.06e-05    3.04e-05\n",
              "C(rnum)[T.34.0]   1.572e-06   7.85e-06      0.200      0.842   -1.39e-05    1.71e-05\n",
              "C(rnum)[T.35.0]   4.276e-05   6.47e-06      6.613      0.000       3e-05    5.55e-05\n",
              "C(rnum)[T.39.0]   7.479e-06   1.54e-05      0.484      0.629    -2.3e-05     3.8e-05\n",
              "C(rnum)[T.143.0]  1.722e-05   7.05e-06      2.444      0.016    3.31e-06    3.11e-05\n",
              "C(rnum)[T.151.0]     0.0001   7.82e-06     13.158      0.000    8.74e-05       0.000\n",
              "gdp              -1.811e-11   5.69e-11     -0.318      0.751   -1.31e-10    9.43e-11\n",
              "==============================================================================\n",
              "Omnibus:                       95.062   Durbin-Watson:                   2.018\n",
              "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1579.986\n",
              "Skew:                           1.540   Prob(JB):                         0.00\n",
              "Kurtosis:                      17.351   Cond. No.                     3.57e+05\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 3.57e+05. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>           <td>pc</td>        <th>  R-squared:         </th> <td>   0.579</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.545</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   17.15</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th> <td>2.54e-24</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:08:30</td>     <th>  Log-Likelihood:    </th> <td>  1708.1</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>   176</td>      <th>  AIC:               </th> <td>  -3388.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>   162</td>      <th>  BIC:               </th> <td>  -3344.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>    13</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th>        <td> 3.263e-07</td> <td> 1.67e-06</td> <td>    0.196</td> <td> 0.845</td> <td>-2.96e-06</td> <td> 3.62e-06</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.5.0]</th>   <td> 1.777e-06</td> <td>  1.1e-05</td> <td>    0.162</td> <td> 0.872</td> <td>-1.99e-05</td> <td> 2.35e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.11.0]</th>  <td> 1.247e-05</td> <td> 5.38e-06</td> <td>    2.319</td> <td> 0.022</td> <td> 1.85e-06</td> <td> 2.31e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.13.0]</th>  <td> 2.777e-09</td> <td> 1.54e-05</td> <td>    0.000</td> <td> 1.000</td> <td>-3.05e-05</td> <td> 3.05e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.14.0]</th>  <td> 1.801e-06</td> <td> 7.86e-06</td> <td>    0.229</td> <td> 0.819</td> <td>-1.37e-05</td> <td> 1.73e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.21.0]</th>  <td> 1.193e-05</td> <td> 1.57e-05</td> <td>    0.762</td> <td> 0.447</td> <td> -1.9e-05</td> <td> 4.29e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.29.0]</th>  <td>  2.98e-05</td> <td> 1.55e-05</td> <td>    1.927</td> <td> 0.056</td> <td>-7.37e-07</td> <td> 6.03e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.30.0]</th>  <td> -1.24e-07</td> <td> 1.54e-05</td> <td>   -0.008</td> <td> 0.994</td> <td>-3.06e-05</td> <td> 3.04e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.34.0]</th>  <td> 1.572e-06</td> <td> 7.85e-06</td> <td>    0.200</td> <td> 0.842</td> <td>-1.39e-05</td> <td> 1.71e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.35.0]</th>  <td> 4.276e-05</td> <td> 6.47e-06</td> <td>    6.613</td> <td> 0.000</td> <td>    3e-05</td> <td> 5.55e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.39.0]</th>  <td> 7.479e-06</td> <td> 1.54e-05</td> <td>    0.484</td> <td> 0.629</td> <td> -2.3e-05</td> <td>  3.8e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.143.0]</th> <td> 1.722e-05</td> <td> 7.05e-06</td> <td>    2.444</td> <td> 0.016</td> <td> 3.31e-06</td> <td> 3.11e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>C(rnum)[T.151.0]</th> <td>    0.0001</td> <td> 7.82e-06</td> <td>   13.158</td> <td> 0.000</td> <td> 8.74e-05</td> <td>    0.000</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>gdp</th>              <td>-1.811e-11</td> <td> 5.69e-11</td> <td>   -0.318</td> <td> 0.751</td> <td>-1.31e-10</td> <td> 9.43e-11</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td>95.062</td> <th>  Durbin-Watson:     </th> <td>   2.018</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>1579.986</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 1.540</td> <th>  Prob(JB):          </th> <td>    0.00</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td>17.351</td> <th>  Cond. No.          </th> <td>3.57e+05</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 3.57e+05. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &        pc        & \\textbf{  R-squared:         } &     0.579   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.545   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     17.15   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &  2.54e-24   \\\\\n\\textbf{Time:}             &     05:08:30     & \\textbf{  Log-Likelihood:    } &    1708.1   \\\\\n\\textbf{No. Observations:} &         176      & \\textbf{  AIC:               } &    -3388.   \\\\\n\\textbf{Df Residuals:}     &         162      & \\textbf{  BIC:               } &    -3344.   \\\\\n\\textbf{Df Model:}         &          13      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                          & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept}        &    3.263e-07  &     1.67e-06     &     0.196  &         0.845        &    -2.96e-06    &     3.62e-06     \\\\\n\\textbf{C(rnum)[T.5.0]}   &    1.777e-06  &      1.1e-05     &     0.162  &         0.872        &    -1.99e-05    &     2.35e-05     \\\\\n\\textbf{C(rnum)[T.11.0]}  &    1.247e-05  &     5.38e-06     &     2.319  &         0.022        &     1.85e-06    &     2.31e-05     \\\\\n\\textbf{C(rnum)[T.13.0]}  &    2.777e-09  &     1.54e-05     &     0.000  &         1.000        &    -3.05e-05    &     3.05e-05     \\\\\n\\textbf{C(rnum)[T.14.0]}  &    1.801e-06  &     7.86e-06     &     0.229  &         0.819        &    -1.37e-05    &     1.73e-05     \\\\\n\\textbf{C(rnum)[T.21.0]}  &    1.193e-05  &     1.57e-05     &     0.762  &         0.447        &     -1.9e-05    &     4.29e-05     \\\\\n\\textbf{C(rnum)[T.29.0]}  &     2.98e-05  &     1.55e-05     &     1.927  &         0.056        &    -7.37e-07    &     6.03e-05     \\\\\n\\textbf{C(rnum)[T.30.0]}  &    -1.24e-07  &     1.54e-05     &    -0.008  &         0.994        &    -3.06e-05    &     3.04e-05     \\\\\n\\textbf{C(rnum)[T.34.0]}  &    1.572e-06  &     7.85e-06     &     0.200  &         0.842        &    -1.39e-05    &     1.71e-05     \\\\\n\\textbf{C(rnum)[T.35.0]}  &    4.276e-05  &     6.47e-06     &     6.613  &         0.000        &        3e-05    &     5.55e-05     \\\\\n\\textbf{C(rnum)[T.39.0]}  &    7.479e-06  &     1.54e-05     &     0.484  &         0.629        &     -2.3e-05    &      3.8e-05     \\\\\n\\textbf{C(rnum)[T.143.0]} &    1.722e-05  &     7.05e-06     &     2.444  &         0.016        &     3.31e-06    &     3.11e-05     \\\\\n\\textbf{C(rnum)[T.151.0]} &       0.0001  &     7.82e-06     &    13.158  &         0.000        &     8.74e-05    &        0.000     \\\\\n\\textbf{gdp}              &   -1.811e-11  &     5.69e-11     &    -0.318  &         0.751        &    -1.31e-10    &     9.43e-11     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 95.062 & \\textbf{  Durbin-Watson:     } &    2.018  \\\\\n\\textbf{Prob(Omnibus):} &  0.000 & \\textbf{  Jarque-Bera (JB):  } & 1579.986  \\\\\n\\textbf{Skew:}          &  1.540 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n\\textbf{Kurtosis:}      & 17.351 & \\textbf{  Cond. No.          } & 3.57e+05  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 3.57e+05. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "source": [
        "lmworld.fit().summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "_ACe5PrmXDYA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "d70da35e-865e-4df0-e9d5-d4d65d3be755"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        pop_est                continent                      name iso_a3  \\\n",
              "0      889953.0                  Oceania                      Fiji    FJI   \n",
              "1    58005463.0                   Africa                  Tanzania    TZA   \n",
              "2      603253.0                   Africa                 W. Sahara    ESH   \n",
              "3    37589262.0            North America                    Canada    CAN   \n",
              "4   328239523.0            North America  United States of America    USA   \n",
              "5    18513930.0                     Asia                Kazakhstan    KAZ   \n",
              "6    33580650.0                     Asia                Uzbekistan    UZB   \n",
              "7     8776109.0                  Oceania          Papua New Guinea    PNG   \n",
              "8   270625568.0                     Asia                 Indonesia    IDN   \n",
              "9    44938712.0            South America                 Argentina    ARG   \n",
              "10   18952038.0            South America                     Chile    CHL   \n",
              "11   86790567.0                   Africa           Dem. Rep. Congo    COD   \n",
              "12   10192317.3                   Africa                   Somalia    SOM   \n",
              "13   52573973.0                   Africa                     Kenya    KEN   \n",
              "14   42813238.0                   Africa                     Sudan    SDN   \n",
              "15   15946876.0                   Africa                      Chad    TCD   \n",
              "16   11263077.0            North America                     Haiti    HTI   \n",
              "17   10738958.0            North America            Dominican Rep.    DOM   \n",
              "18  144373535.0                   Europe                    Russia    RUS   \n",
              "19     389482.0            North America                   Bahamas    BHS   \n",
              "20       3398.0            South America              Falkland Is.    FLK   \n",
              "21    5347896.0                   Europe                    Norway    NOR   \n",
              "22      56225.0            North America                 Greenland    GRL   \n",
              "23        140.0  Seven seas (open ocean)    Fr. S. Antarctic Lands    ATF   \n",
              "24    1293119.0                     Asia               Timor-Leste    TLS   \n",
              "25   58558270.0                   Africa              South Africa    ZAF   \n",
              "26    2125268.0                   Africa                   Lesotho    LSO   \n",
              "27  127575529.0            North America                    Mexico    MEX   \n",
              "28    3461734.0            South America                   Uruguay    URY   \n",
              "29  211049527.0            South America                    Brazil    BRA   \n",
              "30   11513100.0            South America                   Bolivia    BOL   \n",
              "31   32510453.0            South America                      Peru    PER   \n",
              "32   50339443.0            South America                  Colombia    COL   \n",
              "33    4246439.0            North America                    Panama    PAN   \n",
              "34    5047561.0            North America                Costa Rica    CRI   \n",
              "35    6545502.0            North America                 Nicaragua    NIC   \n",
              "\n",
              "        gdp_md_est                                           geometry  \\\n",
              "0       5496000000  MULTIPOLYGON (((180.00000 -16.06713, 180.00000...   \n",
              "1      63177000000  POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...   \n",
              "2        907000000  POLYGON ((-8.66559 27.65643, -8.66512 27.58948...   \n",
              "3    1736425000000  MULTIPOLYGON (((-122.84000 49.00000, -122.9742...   \n",
              "4   21433226000000  MULTIPOLYGON (((-122.84000 49.00000, -120.0000...   \n",
              "5     181665000000  POLYGON ((87.35997 49.21498, 86.59878 48.54918...   \n",
              "6      57921000000  POLYGON ((55.96819 41.30864, 55.92892 44.99586...   \n",
              "7      24829000000  MULTIPOLYGON (((141.00021 -2.60015, 142.73525 ...   \n",
              "8    1119190000000  MULTIPOLYGON (((141.00021 -2.60015, 141.01706 ...   \n",
              "9     445445000000  MULTIPOLYGON (((-68.63401 -52.63637, -68.25000...   \n",
              "10    282318000000  MULTIPOLYGON (((-68.63401 -52.63637, -68.63335...   \n",
              "11     50400000000  POLYGON ((29.34000 -4.49998, 29.51999 -5.41998...   \n",
              "12      4719000000  POLYGON ((41.58513 -1.68325, 40.99300 -0.85829...   \n",
              "13     95503000000  POLYGON ((39.20222 -4.67677, 37.76690 -3.67712...   \n",
              "14     30513000000  POLYGON ((24.56737 8.22919, 23.80581 8.66632, ...   \n",
              "15     11314000000  POLYGON ((23.83766 19.58047, 23.88689 15.61084...   \n",
              "16     14332000000  POLYGON ((-71.71236 19.71446, -71.62487 19.169...   \n",
              "17     88941000000  POLYGON ((-71.70830 18.04500, -71.68774 18.316...   \n",
              "18   1699876000000  MULTIPOLYGON (((180.00000 71.51571, 180.00000 ...   \n",
              "19     13578000000  MULTIPOLYGON (((-78.98000 26.79000, -78.51000 ...   \n",
              "20       282000000  POLYGON ((-61.20000 -51.85000, -60.00000 -51.2...   \n",
              "21    403336000000  MULTIPOLYGON (((15.14282 79.67431, 15.52255 80...   \n",
              "22      3051000000  POLYGON ((-46.76379 82.62796, -43.40644 83.225...   \n",
              "23        16000000  POLYGON ((68.93500 -48.62500, 69.58000 -48.940...   \n",
              "24      2017000000  POLYGON ((124.96868 -8.89279, 125.08625 -8.656...   \n",
              "25    351431000000  POLYGON ((16.34498 -28.57671, 16.82402 -28.082...   \n",
              "26      2376000000  POLYGON ((28.97826 -28.95560, 29.32517 -29.257...   \n",
              "27   1268870000000  POLYGON ((-117.12776 32.53534, -115.99135 32.6...   \n",
              "28     56045000000  POLYGON ((-57.62513 -30.21629, -56.97603 -30.1...   \n",
              "29   1839758000000  POLYGON ((-53.37366 -33.76838, -53.65054 -33.2...   \n",
              "30     40895000000  POLYGON ((-69.52968 -10.95173, -68.78616 -11.0...   \n",
              "31    226848000000  POLYGON ((-69.89364 -4.29819, -70.79477 -4.251...   \n",
              "32    323615000000  POLYGON ((-66.87633 1.25336, -67.06505 1.13011...   \n",
              "33     66800000000  POLYGON ((-77.35336 8.67050, -77.47472 8.52429...   \n",
              "34     61801000000  POLYGON ((-82.54620 9.56613, -82.93289 9.47681...   \n",
              "35     12520000000  POLYGON ((-83.65561 10.93876, -83.89505 10.726...   \n",
              "\n",
              "   citizenship  Datasource                   Country ISO-3166 Code  ...  \\\n",
              "0            0         0.0                         0             0  ...   \n",
              "1            0         0.0                         0             0  ...   \n",
              "2            0         0.0                         0             0  ...   \n",
              "3            0         0.0                         0             0  ...   \n",
              "4           US      3636.0  United States of America            US  ...   \n",
              "5           KZ        54.0                Kazakhstan            KZ  ...   \n",
              "6           UZ       261.0                Uzbekistan            UZ  ...   \n",
              "7            0         0.0                         0             0  ...   \n",
              "8           ID      1971.0                 Indonesia            ID  ...   \n",
              "9            0         0.0                         0             0  ...   \n",
              "10           0         0.0                         0             0  ...   \n",
              "11           0         0.0                         0             0  ...   \n",
              "12           0         0.0                         0             0  ...   \n",
              "13          KE        32.0                     Kenya            KE  ...   \n",
              "14           0         0.0                         0             0  ...   \n",
              "15           0         0.0                         0             0  ...   \n",
              "16          HT       339.0                     Haiti            HT  ...   \n",
              "17           0         0.0                         0             0  ...   \n",
              "18           0         0.0                         0             0  ...   \n",
              "19           0         0.0                         0             0  ...   \n",
              "20           0         0.0                         0             0  ...   \n",
              "21           0         0.0                         0             0  ...   \n",
              "22           0         0.0                         0             0  ...   \n",
              "23           0         0.0                         0             0  ...   \n",
              "24           0         0.0                         0             0  ...   \n",
              "25           0         0.0                         0             0  ...   \n",
              "26           0         0.0                         0             0  ...   \n",
              "27          MX        19.0                    Mexico            MX  ...   \n",
              "28           0         0.0                         0             0  ...   \n",
              "29           0         0.0                         0             0  ...   \n",
              "30          BO        18.0                   Bolivia            BO  ...   \n",
              "31           0         0.0                         0             0  ...   \n",
              "32          CO       124.0                  Colombia            CO  ...   \n",
              "33           0         0.0                         0             0  ...   \n",
              "34           0         0.0                         0             0  ...   \n",
              "35           0         0.0                         0             0  ...   \n",
              "\n",
              "     Population        Users  User %  GDP p.c. (USD)          Sub-Region  \\\n",
              "0           0.0          0.0       0               0                   0   \n",
              "1           0.0          0.0       0               0                   0   \n",
              "2           0.0          0.0       0               0                   0   \n",
              "3           0.0          0.0       0               0                   0   \n",
              "4   331002651.0  250058937.0  75.55%         $56,266    Northern America   \n",
              "5    18776707.0   15146441.0  80.67%          $7,311        Central Asia   \n",
              "6    33469203.0   20398656.0  60.95%          $2,008        Central Asia   \n",
              "7           0.0          0.0       0               0                   0   \n",
              "8   273523615.0  115312623.0  42.16%          $3,408  South-Eastern Asia   \n",
              "9           0.0          0.0       0               0                   0   \n",
              "10          0.0          0.0       0               0                   0   \n",
              "11          0.0          0.0       0               0                   0   \n",
              "12          0.0          0.0       0               0                   0   \n",
              "13   53771296.0   10315273.0  19.18%          $1,311      Eastern Africa   \n",
              "14          0.0          0.0       0               0                   0   \n",
              "15          0.0          0.0       0               0                   0   \n",
              "16   11402528.0    1415658.0  12.42%            $703           Caribbean   \n",
              "17          0.0          0.0       0               0                   0   \n",
              "18          0.0          0.0       0               0                   0   \n",
              "19          0.0          0.0       0               0                   0   \n",
              "20          0.0          0.0       0               0                   0   \n",
              "21          0.0          0.0       0               0                   0   \n",
              "22          0.0          0.0       0               0                   0   \n",
              "23          0.0          0.0       0               0                   0   \n",
              "24          0.0          0.0       0               0                   0   \n",
              "25          0.0          0.0       0               0                   0   \n",
              "26          0.0          0.0       0               0                   0   \n",
              "27  128932753.0   90490008.0  70.18%          $8,119     Central America   \n",
              "28          0.0          0.0       0               0                   0   \n",
              "29          0.0          0.0       0               0                   0   \n",
              "30   11673021.0    5940515.0  50.89%          $2,896       South America   \n",
              "31          0.0          0.0       0               0                   0   \n",
              "32   50882891.0   34809458.0  68.41%          $5,551       South America   \n",
              "33          0.0          0.0       0               0                   0   \n",
              "34          0.0          0.0       0               0                   0   \n",
              "35          0.0          0.0       0               0                   0   \n",
              "\n",
              "      Region           gdpG        pcG            gdp            pc  \n",
              "0          0    6175.607026   0.000000    6175.607026  0.000000e+00  \n",
              "1          0    1089.156033   0.000000    1089.156033  0.000000e+00  \n",
              "2          0    1503.515109   0.000000    1503.515109  0.000000e+00  \n",
              "3          0   46194.708478   0.000000   46194.708478  0.000000e+00  \n",
              "4   Americas   65297.517508  11.077277   65297.517508  1.107728e-05  \n",
              "5       Asia    9812.341302   2.916723    9812.341302  2.916723e-06  \n",
              "6       Asia    1724.832604   7.772333    1724.832604  7.772333e-06  \n",
              "7          0    2829.158116   0.000000    2829.158116  0.000000e+00  \n",
              "8       Asia    4135.566378   7.283126    4135.566378  7.283126e-06  \n",
              "9          0    9912.277860   0.000000    9912.277860  0.000000e+00  \n",
              "10         0   14896.445438   0.000000   14896.445438  0.000000e+00  \n",
              "11         0     580.708270   0.000000     580.708270  0.000000e+00  \n",
              "12         0     462.995790   0.000000     462.995790  0.000000e+00  \n",
              "13    Africa    1816.545232   0.608666    1816.545232  6.086662e-07  \n",
              "14         0     712.700123   0.000000     712.700123  0.000000e+00  \n",
              "15         0     709.480653   0.000000     709.480653  0.000000e+00  \n",
              "16  Americas    1272.476429  30.098347    1272.476429  3.009835e-05  \n",
              "17         0    8282.088448   0.000000    8282.088448  0.000000e+00  \n",
              "18         0   11774.152375   0.000000   11774.152375  0.000000e+00  \n",
              "19         0   34861.688088   0.000000   34861.688088  0.000000e+00  \n",
              "20         0   82989.994114   0.000000   82989.994114  0.000000e+00  \n",
              "21         0   75419.566873   0.000000   75419.566873  0.000000e+00  \n",
              "22         0   54264.117386   0.000000   54264.117386  0.000000e+00  \n",
              "23         0  114285.714286   0.000000  114285.714286  0.000000e+00  \n",
              "24         0    1559.794574   0.000000    1559.794574  0.000000e+00  \n",
              "25         0    6001.389727   0.000000    6001.389727  0.000000e+00  \n",
              "26         0    1117.976650   0.000000    1117.976650  0.000000e+00  \n",
              "27  Americas    9946.029697   0.148931    9946.029697  1.489314e-07  \n",
              "28         0   16189.863230   0.000000   16189.863230  0.000000e+00  \n",
              "29         0    8717.186085   0.000000    8717.186085  0.000000e+00  \n",
              "30  Americas    3552.040719   1.563436    3552.040719  1.563436e-06  \n",
              "31         0    6977.694220   0.000000    6977.694220  0.000000e+00  \n",
              "32  Americas    6428.656749   2.463277    6428.656749  2.463277e-06  \n",
              "33         0   15730.827642   0.000000   15730.827642  0.000000e+00  \n",
              "34         0   12243.735143   0.000000   12243.735143  0.000000e+00  \n",
              "35         0    1912.763910   0.000000    1912.763910  0.000000e+00  \n",
              "\n",
              "[36 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-51d33b58-5ac6-4163-b84b-f90baf55661b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pop_est</th>\n",
              "      <th>continent</th>\n",
              "      <th>name</th>\n",
              "      <th>iso_a3</th>\n",
              "      <th>gdp_md_est</th>\n",
              "      <th>geometry</th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>Country</th>\n",
              "      <th>ISO-3166 Code</th>\n",
              "      <th>...</th>\n",
              "      <th>Population</th>\n",
              "      <th>Users</th>\n",
              "      <th>User %</th>\n",
              "      <th>GDP p.c. (USD)</th>\n",
              "      <th>Sub-Region</th>\n",
              "      <th>Region</th>\n",
              "      <th>gdpG</th>\n",
              "      <th>pcG</th>\n",
              "      <th>gdp</th>\n",
              "      <th>pc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>889953.0</td>\n",
              "      <td>Oceania</td>\n",
              "      <td>Fiji</td>\n",
              "      <td>FJI</td>\n",
              "      <td>5496000000</td>\n",
              "      <td>MULTIPOLYGON (((180.00000 -16.06713, 180.00000...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6175.607026</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6175.607026</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>58005463.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Tanzania</td>\n",
              "      <td>TZA</td>\n",
              "      <td>63177000000</td>\n",
              "      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1089.156033</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1089.156033</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>603253.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>W. Sahara</td>\n",
              "      <td>ESH</td>\n",
              "      <td>907000000</td>\n",
              "      <td>POLYGON ((-8.66559 27.65643, -8.66512 27.58948...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1503.515109</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1503.515109</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37589262.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAN</td>\n",
              "      <td>1736425000000</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>46194.708478</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>46194.708478</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>328239523.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>USA</td>\n",
              "      <td>21433226000000</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n",
              "      <td>US</td>\n",
              "      <td>3636.0</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>US</td>\n",
              "      <td>...</td>\n",
              "      <td>331002651.0</td>\n",
              "      <td>250058937.0</td>\n",
              "      <td>75.55%</td>\n",
              "      <td>$56,266</td>\n",
              "      <td>Northern America</td>\n",
              "      <td>Americas</td>\n",
              "      <td>65297.517508</td>\n",
              "      <td>11.077277</td>\n",
              "      <td>65297.517508</td>\n",
              "      <td>1.107728e-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>18513930.0</td>\n",
              "      <td>Asia</td>\n",
              "      <td>Kazakhstan</td>\n",
              "      <td>KAZ</td>\n",
              "      <td>181665000000</td>\n",
              "      <td>POLYGON ((87.35997 49.21498, 86.59878 48.54918...</td>\n",
              "      <td>KZ</td>\n",
              "      <td>54.0</td>\n",
              "      <td>Kazakhstan</td>\n",
              "      <td>KZ</td>\n",
              "      <td>...</td>\n",
              "      <td>18776707.0</td>\n",
              "      <td>15146441.0</td>\n",
              "      <td>80.67%</td>\n",
              "      <td>$7,311</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "      <td>9812.341302</td>\n",
              "      <td>2.916723</td>\n",
              "      <td>9812.341302</td>\n",
              "      <td>2.916723e-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>33580650.0</td>\n",
              "      <td>Asia</td>\n",
              "      <td>Uzbekistan</td>\n",
              "      <td>UZB</td>\n",
              "      <td>57921000000</td>\n",
              "      <td>POLYGON ((55.96819 41.30864, 55.92892 44.99586...</td>\n",
              "      <td>UZ</td>\n",
              "      <td>261.0</td>\n",
              "      <td>Uzbekistan</td>\n",
              "      <td>UZ</td>\n",
              "      <td>...</td>\n",
              "      <td>33469203.0</td>\n",
              "      <td>20398656.0</td>\n",
              "      <td>60.95%</td>\n",
              "      <td>$2,008</td>\n",
              "      <td>Central Asia</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1724.832604</td>\n",
              "      <td>7.772333</td>\n",
              "      <td>1724.832604</td>\n",
              "      <td>7.772333e-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8776109.0</td>\n",
              "      <td>Oceania</td>\n",
              "      <td>Papua New Guinea</td>\n",
              "      <td>PNG</td>\n",
              "      <td>24829000000</td>\n",
              "      <td>MULTIPOLYGON (((141.00021 -2.60015, 142.73525 ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2829.158116</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2829.158116</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>270625568.0</td>\n",
              "      <td>Asia</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>IDN</td>\n",
              "      <td>1119190000000</td>\n",
              "      <td>MULTIPOLYGON (((141.00021 -2.60015, 141.01706 ...</td>\n",
              "      <td>ID</td>\n",
              "      <td>1971.0</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>ID</td>\n",
              "      <td>...</td>\n",
              "      <td>273523615.0</td>\n",
              "      <td>115312623.0</td>\n",
              "      <td>42.16%</td>\n",
              "      <td>$3,408</td>\n",
              "      <td>South-Eastern Asia</td>\n",
              "      <td>Asia</td>\n",
              "      <td>4135.566378</td>\n",
              "      <td>7.283126</td>\n",
              "      <td>4135.566378</td>\n",
              "      <td>7.283126e-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>44938712.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>ARG</td>\n",
              "      <td>445445000000</td>\n",
              "      <td>MULTIPOLYGON (((-68.63401 -52.63637, -68.25000...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9912.277860</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>9912.277860</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>18952038.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Chile</td>\n",
              "      <td>CHL</td>\n",
              "      <td>282318000000</td>\n",
              "      <td>MULTIPOLYGON (((-68.63401 -52.63637, -68.63335...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14896.445438</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14896.445438</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>86790567.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Dem. Rep. Congo</td>\n",
              "      <td>COD</td>\n",
              "      <td>50400000000</td>\n",
              "      <td>POLYGON ((29.34000 -4.49998, 29.51999 -5.41998...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>580.708270</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>580.708270</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>10192317.3</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Somalia</td>\n",
              "      <td>SOM</td>\n",
              "      <td>4719000000</td>\n",
              "      <td>POLYGON ((41.58513 -1.68325, 40.99300 -0.85829...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>462.995790</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>462.995790</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>52573973.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Kenya</td>\n",
              "      <td>KEN</td>\n",
              "      <td>95503000000</td>\n",
              "      <td>POLYGON ((39.20222 -4.67677, 37.76690 -3.67712...</td>\n",
              "      <td>KE</td>\n",
              "      <td>32.0</td>\n",
              "      <td>Kenya</td>\n",
              "      <td>KE</td>\n",
              "      <td>...</td>\n",
              "      <td>53771296.0</td>\n",
              "      <td>10315273.0</td>\n",
              "      <td>19.18%</td>\n",
              "      <td>$1,311</td>\n",
              "      <td>Eastern Africa</td>\n",
              "      <td>Africa</td>\n",
              "      <td>1816.545232</td>\n",
              "      <td>0.608666</td>\n",
              "      <td>1816.545232</td>\n",
              "      <td>6.086662e-07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>42813238.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Sudan</td>\n",
              "      <td>SDN</td>\n",
              "      <td>30513000000</td>\n",
              "      <td>POLYGON ((24.56737 8.22919, 23.80581 8.66632, ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>712.700123</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>712.700123</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>15946876.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Chad</td>\n",
              "      <td>TCD</td>\n",
              "      <td>11314000000</td>\n",
              "      <td>POLYGON ((23.83766 19.58047, 23.88689 15.61084...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>709.480653</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>709.480653</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>11263077.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Haiti</td>\n",
              "      <td>HTI</td>\n",
              "      <td>14332000000</td>\n",
              "      <td>POLYGON ((-71.71236 19.71446, -71.62487 19.169...</td>\n",
              "      <td>HT</td>\n",
              "      <td>339.0</td>\n",
              "      <td>Haiti</td>\n",
              "      <td>HT</td>\n",
              "      <td>...</td>\n",
              "      <td>11402528.0</td>\n",
              "      <td>1415658.0</td>\n",
              "      <td>12.42%</td>\n",
              "      <td>$703</td>\n",
              "      <td>Caribbean</td>\n",
              "      <td>Americas</td>\n",
              "      <td>1272.476429</td>\n",
              "      <td>30.098347</td>\n",
              "      <td>1272.476429</td>\n",
              "      <td>3.009835e-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>10738958.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Dominican Rep.</td>\n",
              "      <td>DOM</td>\n",
              "      <td>88941000000</td>\n",
              "      <td>POLYGON ((-71.70830 18.04500, -71.68774 18.316...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8282.088448</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8282.088448</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>144373535.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Russia</td>\n",
              "      <td>RUS</td>\n",
              "      <td>1699876000000</td>\n",
              "      <td>MULTIPOLYGON (((180.00000 71.51571, 180.00000 ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11774.152375</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11774.152375</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>389482.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>BHS</td>\n",
              "      <td>13578000000</td>\n",
              "      <td>MULTIPOLYGON (((-78.98000 26.79000, -78.51000 ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>34861.688088</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>34861.688088</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>3398.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Falkland Is.</td>\n",
              "      <td>FLK</td>\n",
              "      <td>282000000</td>\n",
              "      <td>POLYGON ((-61.20000 -51.85000, -60.00000 -51.2...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>82989.994114</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>82989.994114</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>5347896.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Norway</td>\n",
              "      <td>NOR</td>\n",
              "      <td>403336000000</td>\n",
              "      <td>MULTIPOLYGON (((15.14282 79.67431, 15.52255 80...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>75419.566873</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>75419.566873</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>56225.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Greenland</td>\n",
              "      <td>GRL</td>\n",
              "      <td>3051000000</td>\n",
              "      <td>POLYGON ((-46.76379 82.62796, -43.40644 83.225...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>54264.117386</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>54264.117386</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>140.0</td>\n",
              "      <td>Seven seas (open ocean)</td>\n",
              "      <td>Fr. S. Antarctic Lands</td>\n",
              "      <td>ATF</td>\n",
              "      <td>16000000</td>\n",
              "      <td>POLYGON ((68.93500 -48.62500, 69.58000 -48.940...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>114285.714286</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>114285.714286</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>1293119.0</td>\n",
              "      <td>Asia</td>\n",
              "      <td>Timor-Leste</td>\n",
              "      <td>TLS</td>\n",
              "      <td>2017000000</td>\n",
              "      <td>POLYGON ((124.96868 -8.89279, 125.08625 -8.656...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1559.794574</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1559.794574</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>58558270.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>South Africa</td>\n",
              "      <td>ZAF</td>\n",
              "      <td>351431000000</td>\n",
              "      <td>POLYGON ((16.34498 -28.57671, 16.82402 -28.082...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6001.389727</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6001.389727</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2125268.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Lesotho</td>\n",
              "      <td>LSO</td>\n",
              "      <td>2376000000</td>\n",
              "      <td>POLYGON ((28.97826 -28.95560, 29.32517 -29.257...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1117.976650</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1117.976650</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>127575529.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>MEX</td>\n",
              "      <td>1268870000000</td>\n",
              "      <td>POLYGON ((-117.12776 32.53534, -115.99135 32.6...</td>\n",
              "      <td>MX</td>\n",
              "      <td>19.0</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>MX</td>\n",
              "      <td>...</td>\n",
              "      <td>128932753.0</td>\n",
              "      <td>90490008.0</td>\n",
              "      <td>70.18%</td>\n",
              "      <td>$8,119</td>\n",
              "      <td>Central America</td>\n",
              "      <td>Americas</td>\n",
              "      <td>9946.029697</td>\n",
              "      <td>0.148931</td>\n",
              "      <td>9946.029697</td>\n",
              "      <td>1.489314e-07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>3461734.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Uruguay</td>\n",
              "      <td>URY</td>\n",
              "      <td>56045000000</td>\n",
              "      <td>POLYGON ((-57.62513 -30.21629, -56.97603 -30.1...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16189.863230</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>16189.863230</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211049527.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>BRA</td>\n",
              "      <td>1839758000000</td>\n",
              "      <td>POLYGON ((-53.37366 -33.76838, -53.65054 -33.2...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8717.186085</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8717.186085</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>11513100.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Bolivia</td>\n",
              "      <td>BOL</td>\n",
              "      <td>40895000000</td>\n",
              "      <td>POLYGON ((-69.52968 -10.95173, -68.78616 -11.0...</td>\n",
              "      <td>BO</td>\n",
              "      <td>18.0</td>\n",
              "      <td>Bolivia</td>\n",
              "      <td>BO</td>\n",
              "      <td>...</td>\n",
              "      <td>11673021.0</td>\n",
              "      <td>5940515.0</td>\n",
              "      <td>50.89%</td>\n",
              "      <td>$2,896</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "      <td>3552.040719</td>\n",
              "      <td>1.563436</td>\n",
              "      <td>3552.040719</td>\n",
              "      <td>1.563436e-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>32510453.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Peru</td>\n",
              "      <td>PER</td>\n",
              "      <td>226848000000</td>\n",
              "      <td>POLYGON ((-69.89364 -4.29819, -70.79477 -4.251...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6977.694220</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6977.694220</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>50339443.0</td>\n",
              "      <td>South America</td>\n",
              "      <td>Colombia</td>\n",
              "      <td>COL</td>\n",
              "      <td>323615000000</td>\n",
              "      <td>POLYGON ((-66.87633 1.25336, -67.06505 1.13011...</td>\n",
              "      <td>CO</td>\n",
              "      <td>124.0</td>\n",
              "      <td>Colombia</td>\n",
              "      <td>CO</td>\n",
              "      <td>...</td>\n",
              "      <td>50882891.0</td>\n",
              "      <td>34809458.0</td>\n",
              "      <td>68.41%</td>\n",
              "      <td>$5,551</td>\n",
              "      <td>South America</td>\n",
              "      <td>Americas</td>\n",
              "      <td>6428.656749</td>\n",
              "      <td>2.463277</td>\n",
              "      <td>6428.656749</td>\n",
              "      <td>2.463277e-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>4246439.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Panama</td>\n",
              "      <td>PAN</td>\n",
              "      <td>66800000000</td>\n",
              "      <td>POLYGON ((-77.35336 8.67050, -77.47472 8.52429...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15730.827642</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>15730.827642</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>5047561.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>61801000000</td>\n",
              "      <td>POLYGON ((-82.54620 9.56613, -82.93289 9.47681...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12243.735143</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>12243.735143</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>6545502.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Nicaragua</td>\n",
              "      <td>NIC</td>\n",
              "      <td>12520000000</td>\n",
              "      <td>POLYGON ((-83.65561 10.93876, -83.89505 10.726...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1912.763910</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1912.763910</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>36 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51d33b58-5ac6-4163-b84b-f90baf55661b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-51d33b58-5ac6-4163-b84b-f90baf55661b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-51d33b58-5ac6-4163-b84b-f90baf55661b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c1164c76-53df-4c74-bb2b-57d3c476e961\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1164c76-53df-4c74-bb2b-57d3c476e961')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c1164c76-53df-4c74-bb2b-57d3c476e961 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ],
      "source": [
        "world[0:36]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "world"
      ],
      "metadata": {
        "id": "9S8qv8DM_BYX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "5ad6bb1d-85a5-4d3e-e4fa-9d53457ab6a4"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         pop_est      continent                      name iso_a3  \\\n",
              "0       889953.0        Oceania                      Fiji    FJI   \n",
              "1     58005463.0         Africa                  Tanzania    TZA   \n",
              "2       603253.0         Africa                 W. Sahara    ESH   \n",
              "3     37589262.0  North America                    Canada    CAN   \n",
              "4    328239523.0  North America  United States of America    USA   \n",
              "..           ...            ...                       ...    ...   \n",
              "172    6944975.0         Europe                    Serbia    SRB   \n",
              "173     622137.0         Europe                Montenegro    MNE   \n",
              "174    1794248.0         Europe                    Kosovo    -99   \n",
              "175    1394973.0  North America       Trinidad and Tobago    TTO   \n",
              "176   11062113.0         Africa                  S. Sudan    SSD   \n",
              "\n",
              "         gdp_md_est                                           geometry  \\\n",
              "0        5496000000  MULTIPOLYGON (((180.00000 -16.06713, 180.00000...   \n",
              "1       63177000000  POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...   \n",
              "2         907000000  POLYGON ((-8.66559 27.65643, -8.66512 27.58948...   \n",
              "3     1736425000000  MULTIPOLYGON (((-122.84000 49.00000, -122.9742...   \n",
              "4    21433226000000  MULTIPOLYGON (((-122.84000 49.00000, -120.0000...   \n",
              "..              ...                                                ...   \n",
              "172     51475000000  POLYGON ((18.82982 45.90887, 18.82984 45.90888...   \n",
              "173      5542000000  POLYGON ((20.07070 42.58863, 19.80161 42.50009...   \n",
              "174      7926000000  POLYGON ((20.59025 41.85541, 20.52295 42.21787...   \n",
              "175     24269000000  POLYGON ((-61.68000 10.76000, -61.10500 10.890...   \n",
              "176     11998000000  POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...   \n",
              "\n",
              "    citizenship  Datasource                   Country ISO-3166 Code  ...  \\\n",
              "0             0         0.0                         0             0  ...   \n",
              "1             0         0.0                         0             0  ...   \n",
              "2             0         0.0                         0             0  ...   \n",
              "3             0         0.0                         0             0  ...   \n",
              "4            US      3636.0  United States of America            US  ...   \n",
              "..          ...         ...                       ...           ...  ...   \n",
              "172           0         0.0                         0             0  ...   \n",
              "173           0         0.0                         0             0  ...   \n",
              "174           0         0.0                         0             0  ...   \n",
              "175           0         0.0                         0             0  ...   \n",
              "176           0         0.0                         0             0  ...   \n",
              "\n",
              "      Population        Users  User %  GDP p.c. (USD)        Sub-Region  \\\n",
              "0            0.0          0.0       0               0                 0   \n",
              "1            0.0          0.0       0               0                 0   \n",
              "2            0.0          0.0       0               0                 0   \n",
              "3            0.0          0.0       0               0                 0   \n",
              "4    331002651.0  250058937.0  75.55%         $56,266  Northern America   \n",
              "..           ...          ...     ...             ...               ...   \n",
              "172          0.0          0.0       0               0                 0   \n",
              "173          0.0          0.0       0               0                 0   \n",
              "174          0.0          0.0       0               0                 0   \n",
              "175          0.0          0.0       0               0                 0   \n",
              "176          0.0          0.0       0               0                 0   \n",
              "\n",
              "       Region          gdpG        pcG           gdp        pc  \n",
              "0           0   6175.607026   0.000000   6175.607026  0.000000  \n",
              "1           0   1089.156033   0.000000   1089.156033  0.000000  \n",
              "2           0   1503.515109   0.000000   1503.515109  0.000000  \n",
              "3           0  46194.708478   0.000000  46194.708478  0.000000  \n",
              "4    Americas  65297.517508  11.077277  65297.517508  0.000011  \n",
              "..        ...           ...        ...           ...       ...  \n",
              "172         0   7411.833736   0.000000   7411.833736  0.000000  \n",
              "173         0   8908.005793   0.000000   8908.005793  0.000000  \n",
              "174         0   4417.449539   0.000000   4417.449539  0.000000  \n",
              "175         0  17397.469342   0.000000  17397.469342  0.000000  \n",
              "176         0   1084.602914   0.000000   1084.602914  0.000000  \n",
              "\n",
              "[176 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-065d89c9-7e5b-488d-8861-f11d1d46e319\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pop_est</th>\n",
              "      <th>continent</th>\n",
              "      <th>name</th>\n",
              "      <th>iso_a3</th>\n",
              "      <th>gdp_md_est</th>\n",
              "      <th>geometry</th>\n",
              "      <th>citizenship</th>\n",
              "      <th>Datasource</th>\n",
              "      <th>Country</th>\n",
              "      <th>ISO-3166 Code</th>\n",
              "      <th>...</th>\n",
              "      <th>Population</th>\n",
              "      <th>Users</th>\n",
              "      <th>User %</th>\n",
              "      <th>GDP p.c. (USD)</th>\n",
              "      <th>Sub-Region</th>\n",
              "      <th>Region</th>\n",
              "      <th>gdpG</th>\n",
              "      <th>pcG</th>\n",
              "      <th>gdp</th>\n",
              "      <th>pc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>889953.0</td>\n",
              "      <td>Oceania</td>\n",
              "      <td>Fiji</td>\n",
              "      <td>FJI</td>\n",
              "      <td>5496000000</td>\n",
              "      <td>MULTIPOLYGON (((180.00000 -16.06713, 180.00000...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6175.607026</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6175.607026</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>58005463.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>Tanzania</td>\n",
              "      <td>TZA</td>\n",
              "      <td>63177000000</td>\n",
              "      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1089.156033</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1089.156033</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>603253.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>W. Sahara</td>\n",
              "      <td>ESH</td>\n",
              "      <td>907000000</td>\n",
              "      <td>POLYGON ((-8.66559 27.65643, -8.66512 27.58948...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1503.515109</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1503.515109</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37589262.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAN</td>\n",
              "      <td>1736425000000</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>46194.708478</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>46194.708478</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>328239523.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>USA</td>\n",
              "      <td>21433226000000</td>\n",
              "      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n",
              "      <td>US</td>\n",
              "      <td>3636.0</td>\n",
              "      <td>United States of America</td>\n",
              "      <td>US</td>\n",
              "      <td>...</td>\n",
              "      <td>331002651.0</td>\n",
              "      <td>250058937.0</td>\n",
              "      <td>75.55%</td>\n",
              "      <td>$56,266</td>\n",
              "      <td>Northern America</td>\n",
              "      <td>Americas</td>\n",
              "      <td>65297.517508</td>\n",
              "      <td>11.077277</td>\n",
              "      <td>65297.517508</td>\n",
              "      <td>0.000011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>6944975.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Serbia</td>\n",
              "      <td>SRB</td>\n",
              "      <td>51475000000</td>\n",
              "      <td>POLYGON ((18.82982 45.90887, 18.82984 45.90888...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7411.833736</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7411.833736</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>622137.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Montenegro</td>\n",
              "      <td>MNE</td>\n",
              "      <td>5542000000</td>\n",
              "      <td>POLYGON ((20.07070 42.58863, 19.80161 42.50009...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8908.005793</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8908.005793</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>1794248.0</td>\n",
              "      <td>Europe</td>\n",
              "      <td>Kosovo</td>\n",
              "      <td>-99</td>\n",
              "      <td>7926000000</td>\n",
              "      <td>POLYGON ((20.59025 41.85541, 20.52295 42.21787...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4417.449539</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4417.449539</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>1394973.0</td>\n",
              "      <td>North America</td>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>24269000000</td>\n",
              "      <td>POLYGON ((-61.68000 10.76000, -61.10500 10.890...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17397.469342</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>17397.469342</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>11062113.0</td>\n",
              "      <td>Africa</td>\n",
              "      <td>S. Sudan</td>\n",
              "      <td>SSD</td>\n",
              "      <td>11998000000</td>\n",
              "      <td>POLYGON ((30.83385 3.50917, 29.95350 4.17370, ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1084.602914</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1084.602914</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>176 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-065d89c9-7e5b-488d-8861-f11d1d46e319')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-065d89c9-7e5b-488d-8861-f11d1d46e319 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-065d89c9-7e5b-488d-8861-f11d1d46e319');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ef865c40-eae2-417c-9b5b-263d54f2968a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef865c40-eae2-417c-9b5b-263d54f2968a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ef865c40-eae2-417c-9b5b-263d54f2968a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_2aa78a2a-cbc5-4f1a-8f71-9e13fcf7179b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('world')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2aa78a2a-cbc5-4f1a-8f71-9e13fcf7179b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('world');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "world"
            }
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "HqADgtd1xULT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a7b696a5-eaf3-45ba-ca5c-b9228664c960"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        pop_est continent        name iso_a3    gdp_md_est  \\\n",
            "99  163046161.0      Asia  Bangladesh    BGD  302571000000   \n",
            "\n",
            "                                             geometry citizenship  Datasource  \\\n",
            "99  POLYGON ((92.67272 22.04124, 92.65226 21.32405...          BD        11.0   \n",
            "\n",
            "       Country ISO-3166 Code  ...   Population       Users  User %  \\\n",
            "99  Bangladesh            BD  ...  164689383.0  33062068.0  20.08%   \n",
            "\n",
            "    GDP p.c. (USD)     Sub-Region Region         gdpG       pcG          gdp  \\\n",
            "99          $1,344  Southern Asia   Asia  1855.738265  0.067466  1855.738265   \n",
            "\n",
            "              pc  \n",
            "99  6.746556e-08  \n",
            "\n",
            "[1 rows x 22 columns]\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# Find the row where 'name' is 'Bangladesh'\n",
        "bangladesh_info = world[world['name'] == 'Bangladesh']\n",
        "\n",
        "\n",
        "# Print all information about Bangladesh\n",
        "print(bangladesh_info)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "FM9bK6Wh3UQ1"
      },
      "outputs": [],
      "source": [
        "lmworldcorrected = smf.ols(formula='pc ~ pop_est + gdp', data=world)\n",
        "\n",
        "#reports = var * population + var *gdp; coeff = number that minimises error"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "metadata": {
        "id": "SNzPO51j4XrK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "outputId": "a354d590-0c62-4124-a0ad-61609c856113"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:                     pc   R-squared:                       0.014\n",
              "Model:                            OLS   Adj. R-squared:                  0.002\n",
              "Method:                 Least Squares   F-statistic:                     1.191\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.306\n",
              "Time:                        05:08:30   Log-Likelihood:                 1633.2\n",
              "No. Observations:                 176   AIC:                            -3260.\n",
              "Df Residuals:                     173   BIC:                            -3251.\n",
              "Df Model:                           2                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "==============================================================================\n",
              "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "Intercept    7.32e-06   2.17e-06      3.374      0.001    3.04e-06    1.16e-05\n",
              "pop_est    -2.707e-15   1.14e-14     -0.238      0.812   -2.51e-14    1.97e-14\n",
              "gdp        -1.222e-10   7.96e-11     -1.535      0.127   -2.79e-10    3.49e-11\n",
              "==============================================================================\n",
              "Omnibus:                      225.470   Durbin-Watson:                   1.495\n",
              "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             8101.849\n",
              "Skew:                           5.437   Prob(JB):                         0.00\n",
              "Kurtosis:                      34.410   Cond. No.                     1.99e+08\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 1.99e+08. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>           <td>pc</td>        <th>  R-squared:         </th> <td>   0.014</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.002</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1.191</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th>  <td> 0.306</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:08:30</td>     <th>  Log-Likelihood:    </th> <td>  1633.2</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>   176</td>      <th>  AIC:               </th> <td>  -3260.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>   173</td>      <th>  BIC:               </th> <td>  -3251.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th> <td>  7.32e-06</td> <td> 2.17e-06</td> <td>    3.374</td> <td> 0.001</td> <td> 3.04e-06</td> <td> 1.16e-05</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>pop_est</th>   <td>-2.707e-15</td> <td> 1.14e-14</td> <td>   -0.238</td> <td> 0.812</td> <td>-2.51e-14</td> <td> 1.97e-14</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>gdp</th>       <td>-1.222e-10</td> <td> 7.96e-11</td> <td>   -1.535</td> <td> 0.127</td> <td>-2.79e-10</td> <td> 3.49e-11</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td>225.470</td> <th>  Durbin-Watson:     </th> <td>   1.495</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>8101.849</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 5.437</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td>34.410</td>  <th>  Cond. No.          </th> <td>1.99e+08</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.99e+08. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &        pc        & \\textbf{  R-squared:         } &     0.014   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.002   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     1.191   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &    0.306    \\\\\n\\textbf{Time:}             &     05:08:30     & \\textbf{  Log-Likelihood:    } &    1633.2   \\\\\n\\textbf{No. Observations:} &         176      & \\textbf{  AIC:               } &    -3260.   \\\\\n\\textbf{Df Residuals:}     &         173      & \\textbf{  BIC:               } &    -3251.   \\\\\n\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                   & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept} &     7.32e-06  &     2.17e-06     &     3.374  &         0.001        &     3.04e-06    &     1.16e-05     \\\\\n\\textbf{pop\\_est}  &   -2.707e-15  &     1.14e-14     &    -0.238  &         0.812        &    -2.51e-14    &     1.97e-14     \\\\\n\\textbf{gdp}       &   -1.222e-10  &     7.96e-11     &    -1.535  &         0.127        &    -2.79e-10    &     3.49e-11     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 225.470 & \\textbf{  Durbin-Watson:     } &    1.495  \\\\\n\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } & 8101.849  \\\\\n\\textbf{Skew:}          &   5.437 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n\\textbf{Kurtosis:}      &  34.410 & \\textbf{  Cond. No.          } & 1.99e+08  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 1.99e+08. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 47
        }
      ],
      "source": [
        "lmworldcorrected.fit().summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "id": "Wq-Q9hE8A-y_"
      },
      "outputs": [],
      "source": [
        "#world.corr()['pc']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "id": "vmcedYjcx2S4"
      },
      "outputs": [],
      "source": [
        "lmworldomitted = smf.ols(formula='pc ~ pop_est + gdp', data=nohigh)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "id": "er11VWejyE2F",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "outputId": "594993d5-3406-42f2-ae20-f8044c9749ef"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:                     pc   R-squared:                       0.006\n",
              "Model:                            OLS   Adj. R-squared:                 -0.007\n",
              "Method:                 Least Squares   F-statistic:                    0.4499\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.638\n",
              "Time:                        05:08:30   Log-Likelihood:                 1745.7\n",
              "No. Observations:                 164   AIC:                            -3485.\n",
              "Df Residuals:                     161   BIC:                            -3476.\n",
              "Df Model:                           2                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "==============================================================================\n",
              "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "Intercept   1.836e-06   5.95e-07      3.089      0.002    6.62e-07    3.01e-06\n",
              "pop_est    -2.391e-16   2.91e-15     -0.082      0.935   -5.98e-15     5.5e-15\n",
              "gdp        -2.635e-11   2.78e-11     -0.947      0.345   -8.13e-11    2.86e-11\n",
              "==============================================================================\n",
              "Omnibus:                      221.815   Durbin-Watson:                   2.071\n",
              "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             9828.462\n",
              "Skew:                           5.703   Prob(JB):                         0.00\n",
              "Kurtosis:                      39.169   Cond. No.                     2.13e+08\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 2.13e+08. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>           <td>pc</td>        <th>  R-squared:         </th> <td>   0.006</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>  -0.007</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>  0.4499</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th>  <td> 0.638</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:08:30</td>     <th>  Log-Likelihood:    </th> <td>  1745.7</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>   164</td>      <th>  AIC:               </th> <td>  -3485.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>   161</td>      <th>  BIC:               </th> <td>  -3476.</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th> <td> 1.836e-06</td> <td> 5.95e-07</td> <td>    3.089</td> <td> 0.002</td> <td> 6.62e-07</td> <td> 3.01e-06</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>pop_est</th>   <td>-2.391e-16</td> <td> 2.91e-15</td> <td>   -0.082</td> <td> 0.935</td> <td>-5.98e-15</td> <td>  5.5e-15</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>gdp</th>       <td>-2.635e-11</td> <td> 2.78e-11</td> <td>   -0.947</td> <td> 0.345</td> <td>-8.13e-11</td> <td> 2.86e-11</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td>221.815</td> <th>  Durbin-Watson:     </th> <td>   2.071</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>9828.462</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 5.703</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td>39.169</td>  <th>  Cond. No.          </th> <td>2.13e+08</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 2.13e+08. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &        pc        & \\textbf{  R-squared:         } &     0.006   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &    -0.007   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &    0.4499   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &    0.638    \\\\\n\\textbf{Time:}             &     05:08:30     & \\textbf{  Log-Likelihood:    } &    1745.7   \\\\\n\\textbf{No. Observations:} &         164      & \\textbf{  AIC:               } &    -3485.   \\\\\n\\textbf{Df Residuals:}     &         161      & \\textbf{  BIC:               } &    -3476.   \\\\\n\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                   & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept} &    1.836e-06  &     5.95e-07     &     3.089  &         0.002        &     6.62e-07    &     3.01e-06     \\\\\n\\textbf{pop\\_est}  &   -2.391e-16  &     2.91e-15     &    -0.082  &         0.935        &    -5.98e-15    &      5.5e-15     \\\\\n\\textbf{gdp}       &   -2.635e-11  &     2.78e-11     &    -0.947  &         0.345        &    -8.13e-11    &     2.86e-11     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 221.815 & \\textbf{  Durbin-Watson:     } &    2.071  \\\\\n\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } & 9828.462  \\\\\n\\textbf{Skew:}          &   5.703 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n\\textbf{Kurtosis:}      &  39.169 & \\textbf{  Cond. No.          } & 2.13e+08  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 2.13e+08. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 50
        }
      ],
      "source": [
        "lmworldomitted.fit().summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 51,
      "metadata": {
        "id": "WGs0UGfZBpZ8"
      },
      "outputs": [],
      "source": [
        "usa=pd.read_csv(\"usa.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 52,
      "metadata": {
        "id": "_3OB6AVQB3s-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cec5cc85-2b96-4c8d-dd10-35c3a7ecab66"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       State   Calls   Ratio\n",
              "0                    Alabama     252   0.50%\n",
              "1                     Alaska      56   0.10%\n",
              "2             American Samoa       2   0.00%\n",
              "3                    Arizona     608   1.20%\n",
              "4                   Arkansas     295   0.60%\n",
              "5                 California   4,970   9.60%\n",
              "6                   Colorado     625   1.20%\n",
              "7                Connecticut     188   0.40%\n",
              "8                   Delaware     127   0.20%\n",
              "9       District of Columbia     185   0.40%\n",
              "10                   Florida   2,539   4.90%\n",
              "11                   Georgia     955   1.80%\n",
              "12                      Guam       2   0.00%\n",
              "13                    Hawaii     108   0.20%\n",
              "14                     Idaho      97   0.20%\n",
              "15                  Illinois     933   1.80%\n",
              "16                   Indiana     514   1.00%\n",
              "17                      Iowa     285   0.50%\n",
              "18                    Kansas     390   0.70%\n",
              "19                  Kentucky     305   0.60%\n",
              "20                 Louisiana     339   0.70%\n",
              "21                     Maine      87   0.20%\n",
              "22                  Maryland     529   1.00%\n",
              "23             Massachusetts     232   0.40%\n",
              "24                  Michigan     845   1.60%\n",
              "25                 Minnesota     356   0.70%\n",
              "26               Mississippi     710   1.40%\n",
              "27                  Missouri     750   1.50%\n",
              "28                   Montana     462   0.90%\n",
              "29                  Nebraska     212   0.40%\n",
              "30                    Nevada     417   0.80%\n",
              "31             New Hampshire      43   0.10%\n",
              "32                New Jersey     615   1.20%\n",
              "33                New Mexico     367   0.70%\n",
              "34                  New York   1,739   3.40%\n",
              "35            North Carolina   1,103   2.10%\n",
              "36              North Dakota      70   0.10%\n",
              "37  Northern Mariana Islands      13   0.00%\n",
              "38                      Ohio   1,087   2.10%\n",
              "39                  Oklahoma     384   0.70%\n",
              "40                    Oregon     539   1.00%\n",
              "41              Pennsylvania     909   1.80%\n",
              "42               Puerto Rico      14   0.00%\n",
              "43              Rhode Island      86   0.20%\n",
              "44            South Carolina     769   1.50%\n",
              "45              South Dakota      58   0.10%\n",
              "46                 Tennessee     419   0.80%\n",
              "47                     Texas   3,559   6.90%\n",
              "48                      Utah     182   0.40%\n",
              "49                   Vermont      31   0.10%\n",
              "50                  Virginia     578   1.10%\n",
              "51                Washington     815   1.60%\n",
              "52             West Virginia      96   0.20%\n",
              "53                 Wisconsin     337   0.70%\n",
              "54                   Wyoming      47   0.10%\n",
              "55             Not Specified  19,075  36.90%\n",
              "56    International Location     357   0.70%"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ad015a8c-1e65-4f08-b4ed-8078734f7018\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Calls</th>\n",
              "      <th>Ratio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>252</td>\n",
              "      <td>0.50%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>56</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>American Samoa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>608</td>\n",
              "      <td>1.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>295</td>\n",
              "      <td>0.60%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>California</td>\n",
              "      <td>4,970</td>\n",
              "      <td>9.60%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>625</td>\n",
              "      <td>1.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>188</td>\n",
              "      <td>0.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>127</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>185</td>\n",
              "      <td>0.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Florida</td>\n",
              "      <td>2,539</td>\n",
              "      <td>4.90%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>955</td>\n",
              "      <td>1.80%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Guam</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>108</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>97</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>933</td>\n",
              "      <td>1.80%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>514</td>\n",
              "      <td>1.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>285</td>\n",
              "      <td>0.50%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>390</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>305</td>\n",
              "      <td>0.60%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>339</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Maine</td>\n",
              "      <td>87</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>529</td>\n",
              "      <td>1.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>232</td>\n",
              "      <td>0.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>845</td>\n",
              "      <td>1.60%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>356</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>710</td>\n",
              "      <td>1.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>750</td>\n",
              "      <td>1.50%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Montana</td>\n",
              "      <td>462</td>\n",
              "      <td>0.90%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>212</td>\n",
              "      <td>0.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>417</td>\n",
              "      <td>0.80%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>43</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>615</td>\n",
              "      <td>1.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>367</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>New York</td>\n",
              "      <td>1,739</td>\n",
              "      <td>3.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>1,103</td>\n",
              "      <td>2.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>70</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Northern Mariana Islands</td>\n",
              "      <td>13</td>\n",
              "      <td>0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>1,087</td>\n",
              "      <td>2.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>384</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>539</td>\n",
              "      <td>1.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>909</td>\n",
              "      <td>1.80%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Puerto Rico</td>\n",
              "      <td>14</td>\n",
              "      <td>0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>86</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>769</td>\n",
              "      <td>1.50%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>58</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>419</td>\n",
              "      <td>0.80%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Texas</td>\n",
              "      <td>3,559</td>\n",
              "      <td>6.90%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Utah</td>\n",
              "      <td>182</td>\n",
              "      <td>0.40%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>31</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>578</td>\n",
              "      <td>1.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Washington</td>\n",
              "      <td>815</td>\n",
              "      <td>1.60%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>96</td>\n",
              "      <td>0.20%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>337</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>47</td>\n",
              "      <td>0.10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Not Specified</td>\n",
              "      <td>19,075</td>\n",
              "      <td>36.90%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>International Location</td>\n",
              "      <td>357</td>\n",
              "      <td>0.70%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad015a8c-1e65-4f08-b4ed-8078734f7018')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ad015a8c-1e65-4f08-b4ed-8078734f7018 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ad015a8c-1e65-4f08-b4ed-8078734f7018');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-99c33bde-2f49-4768-829f-e0d5e3c538f8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99c33bde-2f49-4768-829f-e0d5e3c538f8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-99c33bde-2f49-4768-829f-e0d5e3c538f8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a98c6b9e-2f5d-40cd-a984-704ec3a62f35\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('usa')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a98c6b9e-2f5d-40cd-a984-704ec3a62f35 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('usa');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "usa",
              "summary": "{\n  \"name\": \"usa\",\n  \"rows\": 57,\n  \"fields\": [\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 57,\n        \"samples\": [\n          \"Alabama\",\n          \"California\",\n          \"Nevada\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calls\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 56,\n        \"samples\": [\n          \"252\",\n          \"4,970\",\n          \"1,739\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratio\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"0.50%\",\n          \"1.40%\",\n          \"4.90%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 52
        }
      ],
      "source": [
        "usa"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "id": "XK26qJTqCB08"
      },
      "outputs": [],
      "source": [
        "states=pd.read_csv(\"states.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "id": "xke1-d-5CN8Z",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "4471361d-410e-4a80-ac8b-f7af4373d585"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Name  Pop. 1990  Pop. 2000  Pop. 2010  Pop. 2020\n",
              "0          United States  248790925  281424600  308745538  331449281\n",
              "1                Alabama    4040389    4447207    4779736    5024279\n",
              "2                 Alaska     550043     626933     710231     733391\n",
              "3                Arizona    3665339    5130247    6392017    7151502\n",
              "4               Arkansas    2350624    2673293    2915918    3011524\n",
              "5             California   29811427   33871653   37253956   39538223\n",
              "6               Colorado    3294473    4302086    5029196    5773714\n",
              "7            Connecticut    3287116    3405650    3574097    3605944\n",
              "8               Delaware     666168     783559     897934     989948\n",
              "9   District of Columbia     606900     572086     601723     689545\n",
              "10               Florida   12938071   15982571   18801310   21538187\n",
              "11               Georgia    6478149    8186653    9687653   10711908\n",
              "12                Hawaii    1108229    1211497    1360301    1455271\n",
              "13                 Idaho    1006734    1293957    1567582    1839106\n",
              "14              Illinois   11430602   12419927   12830632   12812508\n",
              "15               Indiana    5544156    6080827    6483802    6785528\n",
              "16                  Iowa    2776831    2926538    3046355    3190369\n",
              "17                Kansas    2477588    2688925    2853118    2937880\n",
              "18              Kentucky    3686892    4042193    4339367    4505836\n",
              "19             Louisiana    4221826    4469035    4533372    4657757\n",
              "20                 Maine    1227928    1274779    1328361    1362359\n",
              "21              Maryland    4780753    5296647    5773552    6177224\n",
              "22         Massachusetts    6016425    6349364    6547629    7029917\n",
              "23              Michigan    9295287    9938823    9883640   10077331\n",
              "24             Minnesota    4375665    4919631    5303925    5706494\n",
              "25           Mississippi    2575475    2844754    2967297    2961279\n",
              "26              Missouri    5116901    5596564    5988927    6154913\n",
              "27               Montana     799065     902200     989415    1084225\n",
              "28              Nebraska    1578417    1711230    1826341    1961504\n",
              "29                Nevada    1201675    1998250    2700551    3104614\n",
              "30         New Hampshire    1109252    1235807    1316470    1377529\n",
              "31            New Jersey    7747750    8414764    8791894    9288994\n",
              "32            New Mexico    1515069    1819017    2059179    2117522\n",
              "33              New York   17990778   18977026   19378102   20201249\n",
              "34        North Carolina    6632448    8046346    9535483   10439388\n",
              "35          North Dakota     638800     642237     672591     779094\n",
              "36                  Ohio   10847115   11353336   11536504   11799448\n",
              "37              Oklahoma    3145576    3450451    3751351    3959353\n",
              "38                Oregon    2842337    3421524    3831074    4237256\n",
              "39          Pennsylvania   11882842   12280548   12702379   13002700\n",
              "40          Rhode Island    1003464    1048259    1052567    1097379\n",
              "41        South Carolina    3486310    4012023    4625364    5118425\n",
              "42          South Dakota     696004     754858     814180     886667\n",
              "43             Tennessee    4877203    5689427    6346105    6910840\n",
              "44                 Texas   16986335   20851028   25145561   29145505\n",
              "45                  Utah    1722850    2233183    2763885    3271616\n",
              "46               Vermont     562758     608613     625741     643077\n",
              "47              Virginia    6189197    7079057    8001024    8631393\n",
              "48            Washington    4866669    5894281    6724540    7705281\n",
              "49         West Virginia    1793477    1808193    1852994    1793716\n",
              "50             Wisconsin    4891954    5363757    5686986    5893718\n",
              "51               Wyoming     453589     493786     563626     576851\n",
              "52           Puerto Rico    3522037    3808605    3725789    3285874"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e04e16fa-a27f-448b-a20d-bafd2bb0ffae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Pop. 1990</th>\n",
              "      <th>Pop. 2000</th>\n",
              "      <th>Pop. 2010</th>\n",
              "      <th>Pop. 2020</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>United States</td>\n",
              "      <td>248790925</td>\n",
              "      <td>281424600</td>\n",
              "      <td>308745538</td>\n",
              "      <td>331449281</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>4040389</td>\n",
              "      <td>4447207</td>\n",
              "      <td>4779736</td>\n",
              "      <td>5024279</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>550043</td>\n",
              "      <td>626933</td>\n",
              "      <td>710231</td>\n",
              "      <td>733391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>3665339</td>\n",
              "      <td>5130247</td>\n",
              "      <td>6392017</td>\n",
              "      <td>7151502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>2350624</td>\n",
              "      <td>2673293</td>\n",
              "      <td>2915918</td>\n",
              "      <td>3011524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>California</td>\n",
              "      <td>29811427</td>\n",
              "      <td>33871653</td>\n",
              "      <td>37253956</td>\n",
              "      <td>39538223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>3294473</td>\n",
              "      <td>4302086</td>\n",
              "      <td>5029196</td>\n",
              "      <td>5773714</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>3287116</td>\n",
              "      <td>3405650</td>\n",
              "      <td>3574097</td>\n",
              "      <td>3605944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>666168</td>\n",
              "      <td>783559</td>\n",
              "      <td>897934</td>\n",
              "      <td>989948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>606900</td>\n",
              "      <td>572086</td>\n",
              "      <td>601723</td>\n",
              "      <td>689545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Florida</td>\n",
              "      <td>12938071</td>\n",
              "      <td>15982571</td>\n",
              "      <td>18801310</td>\n",
              "      <td>21538187</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>6478149</td>\n",
              "      <td>8186653</td>\n",
              "      <td>9687653</td>\n",
              "      <td>10711908</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1108229</td>\n",
              "      <td>1211497</td>\n",
              "      <td>1360301</td>\n",
              "      <td>1455271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>1006734</td>\n",
              "      <td>1293957</td>\n",
              "      <td>1567582</td>\n",
              "      <td>1839106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>11430602</td>\n",
              "      <td>12419927</td>\n",
              "      <td>12830632</td>\n",
              "      <td>12812508</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>5544156</td>\n",
              "      <td>6080827</td>\n",
              "      <td>6483802</td>\n",
              "      <td>6785528</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>2776831</td>\n",
              "      <td>2926538</td>\n",
              "      <td>3046355</td>\n",
              "      <td>3190369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>2477588</td>\n",
              "      <td>2688925</td>\n",
              "      <td>2853118</td>\n",
              "      <td>2937880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>3686892</td>\n",
              "      <td>4042193</td>\n",
              "      <td>4339367</td>\n",
              "      <td>4505836</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4221826</td>\n",
              "      <td>4469035</td>\n",
              "      <td>4533372</td>\n",
              "      <td>4657757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Maine</td>\n",
              "      <td>1227928</td>\n",
              "      <td>1274779</td>\n",
              "      <td>1328361</td>\n",
              "      <td>1362359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>4780753</td>\n",
              "      <td>5296647</td>\n",
              "      <td>5773552</td>\n",
              "      <td>6177224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>6016425</td>\n",
              "      <td>6349364</td>\n",
              "      <td>6547629</td>\n",
              "      <td>7029917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>9295287</td>\n",
              "      <td>9938823</td>\n",
              "      <td>9883640</td>\n",
              "      <td>10077331</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>4375665</td>\n",
              "      <td>4919631</td>\n",
              "      <td>5303925</td>\n",
              "      <td>5706494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>2575475</td>\n",
              "      <td>2844754</td>\n",
              "      <td>2967297</td>\n",
              "      <td>2961279</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>5116901</td>\n",
              "      <td>5596564</td>\n",
              "      <td>5988927</td>\n",
              "      <td>6154913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Montana</td>\n",
              "      <td>799065</td>\n",
              "      <td>902200</td>\n",
              "      <td>989415</td>\n",
              "      <td>1084225</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>1578417</td>\n",
              "      <td>1711230</td>\n",
              "      <td>1826341</td>\n",
              "      <td>1961504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>1201675</td>\n",
              "      <td>1998250</td>\n",
              "      <td>2700551</td>\n",
              "      <td>3104614</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>1109252</td>\n",
              "      <td>1235807</td>\n",
              "      <td>1316470</td>\n",
              "      <td>1377529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7747750</td>\n",
              "      <td>8414764</td>\n",
              "      <td>8791894</td>\n",
              "      <td>9288994</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>1515069</td>\n",
              "      <td>1819017</td>\n",
              "      <td>2059179</td>\n",
              "      <td>2117522</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>New York</td>\n",
              "      <td>17990778</td>\n",
              "      <td>18977026</td>\n",
              "      <td>19378102</td>\n",
              "      <td>20201249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>6632448</td>\n",
              "      <td>8046346</td>\n",
              "      <td>9535483</td>\n",
              "      <td>10439388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>638800</td>\n",
              "      <td>642237</td>\n",
              "      <td>672591</td>\n",
              "      <td>779094</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>10847115</td>\n",
              "      <td>11353336</td>\n",
              "      <td>11536504</td>\n",
              "      <td>11799448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>3145576</td>\n",
              "      <td>3450451</td>\n",
              "      <td>3751351</td>\n",
              "      <td>3959353</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>2842337</td>\n",
              "      <td>3421524</td>\n",
              "      <td>3831074</td>\n",
              "      <td>4237256</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>11882842</td>\n",
              "      <td>12280548</td>\n",
              "      <td>12702379</td>\n",
              "      <td>13002700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>1003464</td>\n",
              "      <td>1048259</td>\n",
              "      <td>1052567</td>\n",
              "      <td>1097379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>3486310</td>\n",
              "      <td>4012023</td>\n",
              "      <td>4625364</td>\n",
              "      <td>5118425</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>696004</td>\n",
              "      <td>754858</td>\n",
              "      <td>814180</td>\n",
              "      <td>886667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>4877203</td>\n",
              "      <td>5689427</td>\n",
              "      <td>6346105</td>\n",
              "      <td>6910840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Texas</td>\n",
              "      <td>16986335</td>\n",
              "      <td>20851028</td>\n",
              "      <td>25145561</td>\n",
              "      <td>29145505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Utah</td>\n",
              "      <td>1722850</td>\n",
              "      <td>2233183</td>\n",
              "      <td>2763885</td>\n",
              "      <td>3271616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>562758</td>\n",
              "      <td>608613</td>\n",
              "      <td>625741</td>\n",
              "      <td>643077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>6189197</td>\n",
              "      <td>7079057</td>\n",
              "      <td>8001024</td>\n",
              "      <td>8631393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Washington</td>\n",
              "      <td>4866669</td>\n",
              "      <td>5894281</td>\n",
              "      <td>6724540</td>\n",
              "      <td>7705281</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>1793477</td>\n",
              "      <td>1808193</td>\n",
              "      <td>1852994</td>\n",
              "      <td>1793716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>4891954</td>\n",
              "      <td>5363757</td>\n",
              "      <td>5686986</td>\n",
              "      <td>5893718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>453589</td>\n",
              "      <td>493786</td>\n",
              "      <td>563626</td>\n",
              "      <td>576851</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Puerto Rico</td>\n",
              "      <td>3522037</td>\n",
              "      <td>3808605</td>\n",
              "      <td>3725789</td>\n",
              "      <td>3285874</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e04e16fa-a27f-448b-a20d-bafd2bb0ffae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e04e16fa-a27f-448b-a20d-bafd2bb0ffae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e04e16fa-a27f-448b-a20d-bafd2bb0ffae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f74df6e5-843a-40cc-a959-a422e6fa6456\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f74df6e5-843a-40cc-a959-a422e6fa6456')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f74df6e5-843a-40cc-a959-a422e6fa6456 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b2ec73e6-688c-478e-9000-c1d1c30054a9\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('states')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b2ec73e6-688c-478e-9000-c1d1c30054a9 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('states');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "states",
              "summary": "{\n  \"name\": \"states\",\n  \"rows\": 53,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 53,\n        \"samples\": [\n          \"Louisiana\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 1990\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33930667,\n        \"min\": 453589,\n        \"max\": 248790925,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          4221826,\n          3486310,\n          6189197\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2000\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38382811,\n        \"min\": 493786,\n        \"max\": 281424600,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          4469035,\n          4012023,\n          7079057\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2010\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42120201,\n        \"min\": 563626,\n        \"max\": 308745538,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          4533372,\n          4625364,\n          8001024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45233121,\n        \"min\": 576851,\n        \"max\": 331449281,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          4657757,\n          5118425,\n          8631393\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 54
        }
      ],
      "source": [
        "states"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "id": "cXrtlpHLCSub"
      },
      "outputs": [],
      "source": [
        "usa=usa.merge(states,left_on=\"State\",right_on=\"Name\",how=\"left\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 56,
      "metadata": {
        "id": "jOBhi_qdDGGt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "65bb6630-6a85-4fe0-a05a-25be4f758da0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   State  Calls  Ratio                  Name   Pop. 1990  \\\n",
              "0                Alabama    252  0.50%               Alabama   4040389.0   \n",
              "1                 Alaska     56  0.10%                Alaska    550043.0   \n",
              "3                Arizona    608  1.20%               Arizona   3665339.0   \n",
              "4               Arkansas    295  0.60%              Arkansas   2350624.0   \n",
              "5             California  4,970  9.60%            California  29811427.0   \n",
              "6               Colorado    625  1.20%              Colorado   3294473.0   \n",
              "7            Connecticut    188  0.40%           Connecticut   3287116.0   \n",
              "8               Delaware    127  0.20%              Delaware    666168.0   \n",
              "9   District of Columbia    185  0.40%  District of Columbia    606900.0   \n",
              "10               Florida  2,539  4.90%               Florida  12938071.0   \n",
              "11               Georgia    955  1.80%               Georgia   6478149.0   \n",
              "13                Hawaii    108  0.20%                Hawaii   1108229.0   \n",
              "14                 Idaho     97  0.20%                 Idaho   1006734.0   \n",
              "15              Illinois    933  1.80%              Illinois  11430602.0   \n",
              "16               Indiana    514  1.00%               Indiana   5544156.0   \n",
              "17                  Iowa    285  0.50%                  Iowa   2776831.0   \n",
              "18                Kansas    390  0.70%                Kansas   2477588.0   \n",
              "19              Kentucky    305  0.60%              Kentucky   3686892.0   \n",
              "20             Louisiana    339  0.70%             Louisiana   4221826.0   \n",
              "21                 Maine     87  0.20%                 Maine   1227928.0   \n",
              "22              Maryland    529  1.00%              Maryland   4780753.0   \n",
              "23         Massachusetts    232  0.40%         Massachusetts   6016425.0   \n",
              "24              Michigan    845  1.60%              Michigan   9295287.0   \n",
              "25             Minnesota    356  0.70%             Minnesota   4375665.0   \n",
              "26           Mississippi    710  1.40%           Mississippi   2575475.0   \n",
              "27              Missouri    750  1.50%              Missouri   5116901.0   \n",
              "28               Montana    462  0.90%               Montana    799065.0   \n",
              "29              Nebraska    212  0.40%              Nebraska   1578417.0   \n",
              "30                Nevada    417  0.80%                Nevada   1201675.0   \n",
              "31         New Hampshire     43  0.10%         New Hampshire   1109252.0   \n",
              "32            New Jersey    615  1.20%            New Jersey   7747750.0   \n",
              "33            New Mexico    367  0.70%            New Mexico   1515069.0   \n",
              "34              New York  1,739  3.40%              New York  17990778.0   \n",
              "35        North Carolina  1,103  2.10%        North Carolina   6632448.0   \n",
              "36          North Dakota     70  0.10%          North Dakota    638800.0   \n",
              "38                  Ohio  1,087  2.10%                  Ohio  10847115.0   \n",
              "39              Oklahoma    384  0.70%              Oklahoma   3145576.0   \n",
              "40                Oregon    539  1.00%                Oregon   2842337.0   \n",
              "41          Pennsylvania    909  1.80%          Pennsylvania  11882842.0   \n",
              "42           Puerto Rico     14  0.00%           Puerto Rico   3522037.0   \n",
              "43          Rhode Island     86  0.20%          Rhode Island   1003464.0   \n",
              "44        South Carolina    769  1.50%        South Carolina   3486310.0   \n",
              "45          South Dakota     58  0.10%          South Dakota    696004.0   \n",
              "46             Tennessee    419  0.80%             Tennessee   4877203.0   \n",
              "47                 Texas  3,559  6.90%                 Texas  16986335.0   \n",
              "48                  Utah    182  0.40%                  Utah   1722850.0   \n",
              "49               Vermont     31  0.10%               Vermont    562758.0   \n",
              "50              Virginia    578  1.10%              Virginia   6189197.0   \n",
              "51            Washington    815  1.60%            Washington   4866669.0   \n",
              "52         West Virginia     96  0.20%         West Virginia   1793477.0   \n",
              "53             Wisconsin    337  0.70%             Wisconsin   4891954.0   \n",
              "54               Wyoming     47  0.10%               Wyoming    453589.0   \n",
              "\n",
              "     Pop. 2000   Pop. 2010   Pop. 2020  \n",
              "0    4447207.0   4779736.0   5024279.0  \n",
              "1     626933.0    710231.0    733391.0  \n",
              "3    5130247.0   6392017.0   7151502.0  \n",
              "4    2673293.0   2915918.0   3011524.0  \n",
              "5   33871653.0  37253956.0  39538223.0  \n",
              "6    4302086.0   5029196.0   5773714.0  \n",
              "7    3405650.0   3574097.0   3605944.0  \n",
              "8     783559.0    897934.0    989948.0  \n",
              "9     572086.0    601723.0    689545.0  \n",
              "10  15982571.0  18801310.0  21538187.0  \n",
              "11   8186653.0   9687653.0  10711908.0  \n",
              "13   1211497.0   1360301.0   1455271.0  \n",
              "14   1293957.0   1567582.0   1839106.0  \n",
              "15  12419927.0  12830632.0  12812508.0  \n",
              "16   6080827.0   6483802.0   6785528.0  \n",
              "17   2926538.0   3046355.0   3190369.0  \n",
              "18   2688925.0   2853118.0   2937880.0  \n",
              "19   4042193.0   4339367.0   4505836.0  \n",
              "20   4469035.0   4533372.0   4657757.0  \n",
              "21   1274779.0   1328361.0   1362359.0  \n",
              "22   5296647.0   5773552.0   6177224.0  \n",
              "23   6349364.0   6547629.0   7029917.0  \n",
              "24   9938823.0   9883640.0  10077331.0  \n",
              "25   4919631.0   5303925.0   5706494.0  \n",
              "26   2844754.0   2967297.0   2961279.0  \n",
              "27   5596564.0   5988927.0   6154913.0  \n",
              "28    902200.0    989415.0   1084225.0  \n",
              "29   1711230.0   1826341.0   1961504.0  \n",
              "30   1998250.0   2700551.0   3104614.0  \n",
              "31   1235807.0   1316470.0   1377529.0  \n",
              "32   8414764.0   8791894.0   9288994.0  \n",
              "33   1819017.0   2059179.0   2117522.0  \n",
              "34  18977026.0  19378102.0  20201249.0  \n",
              "35   8046346.0   9535483.0  10439388.0  \n",
              "36    642237.0    672591.0    779094.0  \n",
              "38  11353336.0  11536504.0  11799448.0  \n",
              "39   3450451.0   3751351.0   3959353.0  \n",
              "40   3421524.0   3831074.0   4237256.0  \n",
              "41  12280548.0  12702379.0  13002700.0  \n",
              "42   3808605.0   3725789.0   3285874.0  \n",
              "43   1048259.0   1052567.0   1097379.0  \n",
              "44   4012023.0   4625364.0   5118425.0  \n",
              "45    754858.0    814180.0    886667.0  \n",
              "46   5689427.0   6346105.0   6910840.0  \n",
              "47  20851028.0  25145561.0  29145505.0  \n",
              "48   2233183.0   2763885.0   3271616.0  \n",
              "49    608613.0    625741.0    643077.0  \n",
              "50   7079057.0   8001024.0   8631393.0  \n",
              "51   5894281.0   6724540.0   7705281.0  \n",
              "52   1808193.0   1852994.0   1793716.0  \n",
              "53   5363757.0   5686986.0   5893718.0  \n",
              "54    493786.0    563626.0    576851.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2a4a9242-b997-4b72-abaa-8ea753398e8d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Calls</th>\n",
              "      <th>Ratio</th>\n",
              "      <th>Name</th>\n",
              "      <th>Pop. 1990</th>\n",
              "      <th>Pop. 2000</th>\n",
              "      <th>Pop. 2010</th>\n",
              "      <th>Pop. 2020</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>252</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>4040389.0</td>\n",
              "      <td>4447207.0</td>\n",
              "      <td>4779736.0</td>\n",
              "      <td>5024279.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>56</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>550043.0</td>\n",
              "      <td>626933.0</td>\n",
              "      <td>710231.0</td>\n",
              "      <td>733391.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>608</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>3665339.0</td>\n",
              "      <td>5130247.0</td>\n",
              "      <td>6392017.0</td>\n",
              "      <td>7151502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>295</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>2350624.0</td>\n",
              "      <td>2673293.0</td>\n",
              "      <td>2915918.0</td>\n",
              "      <td>3011524.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>California</td>\n",
              "      <td>4,970</td>\n",
              "      <td>9.60%</td>\n",
              "      <td>California</td>\n",
              "      <td>29811427.0</td>\n",
              "      <td>33871653.0</td>\n",
              "      <td>37253956.0</td>\n",
              "      <td>39538223.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>625</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>3294473.0</td>\n",
              "      <td>4302086.0</td>\n",
              "      <td>5029196.0</td>\n",
              "      <td>5773714.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>188</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>3287116.0</td>\n",
              "      <td>3405650.0</td>\n",
              "      <td>3574097.0</td>\n",
              "      <td>3605944.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>127</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>666168.0</td>\n",
              "      <td>783559.0</td>\n",
              "      <td>897934.0</td>\n",
              "      <td>989948.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>185</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>606900.0</td>\n",
              "      <td>572086.0</td>\n",
              "      <td>601723.0</td>\n",
              "      <td>689545.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Florida</td>\n",
              "      <td>2,539</td>\n",
              "      <td>4.90%</td>\n",
              "      <td>Florida</td>\n",
              "      <td>12938071.0</td>\n",
              "      <td>15982571.0</td>\n",
              "      <td>18801310.0</td>\n",
              "      <td>21538187.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>955</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>6478149.0</td>\n",
              "      <td>8186653.0</td>\n",
              "      <td>9687653.0</td>\n",
              "      <td>10711908.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>108</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1108229.0</td>\n",
              "      <td>1211497.0</td>\n",
              "      <td>1360301.0</td>\n",
              "      <td>1455271.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>97</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>1006734.0</td>\n",
              "      <td>1293957.0</td>\n",
              "      <td>1567582.0</td>\n",
              "      <td>1839106.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>933</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>11430602.0</td>\n",
              "      <td>12419927.0</td>\n",
              "      <td>12830632.0</td>\n",
              "      <td>12812508.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>514</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>5544156.0</td>\n",
              "      <td>6080827.0</td>\n",
              "      <td>6483802.0</td>\n",
              "      <td>6785528.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>285</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>2776831.0</td>\n",
              "      <td>2926538.0</td>\n",
              "      <td>3046355.0</td>\n",
              "      <td>3190369.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>390</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>2477588.0</td>\n",
              "      <td>2688925.0</td>\n",
              "      <td>2853118.0</td>\n",
              "      <td>2937880.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>305</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>3686892.0</td>\n",
              "      <td>4042193.0</td>\n",
              "      <td>4339367.0</td>\n",
              "      <td>4505836.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>339</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4221826.0</td>\n",
              "      <td>4469035.0</td>\n",
              "      <td>4533372.0</td>\n",
              "      <td>4657757.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Maine</td>\n",
              "      <td>87</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Maine</td>\n",
              "      <td>1227928.0</td>\n",
              "      <td>1274779.0</td>\n",
              "      <td>1328361.0</td>\n",
              "      <td>1362359.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>529</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>4780753.0</td>\n",
              "      <td>5296647.0</td>\n",
              "      <td>5773552.0</td>\n",
              "      <td>6177224.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>232</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>6016425.0</td>\n",
              "      <td>6349364.0</td>\n",
              "      <td>6547629.0</td>\n",
              "      <td>7029917.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>845</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>9295287.0</td>\n",
              "      <td>9938823.0</td>\n",
              "      <td>9883640.0</td>\n",
              "      <td>10077331.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>356</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>4375665.0</td>\n",
              "      <td>4919631.0</td>\n",
              "      <td>5303925.0</td>\n",
              "      <td>5706494.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>710</td>\n",
              "      <td>1.40%</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>2575475.0</td>\n",
              "      <td>2844754.0</td>\n",
              "      <td>2967297.0</td>\n",
              "      <td>2961279.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>750</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>5116901.0</td>\n",
              "      <td>5596564.0</td>\n",
              "      <td>5988927.0</td>\n",
              "      <td>6154913.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Montana</td>\n",
              "      <td>462</td>\n",
              "      <td>0.90%</td>\n",
              "      <td>Montana</td>\n",
              "      <td>799065.0</td>\n",
              "      <td>902200.0</td>\n",
              "      <td>989415.0</td>\n",
              "      <td>1084225.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>212</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>1578417.0</td>\n",
              "      <td>1711230.0</td>\n",
              "      <td>1826341.0</td>\n",
              "      <td>1961504.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>417</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>1201675.0</td>\n",
              "      <td>1998250.0</td>\n",
              "      <td>2700551.0</td>\n",
              "      <td>3104614.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>43</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>1109252.0</td>\n",
              "      <td>1235807.0</td>\n",
              "      <td>1316470.0</td>\n",
              "      <td>1377529.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>615</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7747750.0</td>\n",
              "      <td>8414764.0</td>\n",
              "      <td>8791894.0</td>\n",
              "      <td>9288994.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>367</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>1515069.0</td>\n",
              "      <td>1819017.0</td>\n",
              "      <td>2059179.0</td>\n",
              "      <td>2117522.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>New York</td>\n",
              "      <td>1,739</td>\n",
              "      <td>3.40%</td>\n",
              "      <td>New York</td>\n",
              "      <td>17990778.0</td>\n",
              "      <td>18977026.0</td>\n",
              "      <td>19378102.0</td>\n",
              "      <td>20201249.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>1,103</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>6632448.0</td>\n",
              "      <td>8046346.0</td>\n",
              "      <td>9535483.0</td>\n",
              "      <td>10439388.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>70</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>638800.0</td>\n",
              "      <td>642237.0</td>\n",
              "      <td>672591.0</td>\n",
              "      <td>779094.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>1,087</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>10847115.0</td>\n",
              "      <td>11353336.0</td>\n",
              "      <td>11536504.0</td>\n",
              "      <td>11799448.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>384</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>3145576.0</td>\n",
              "      <td>3450451.0</td>\n",
              "      <td>3751351.0</td>\n",
              "      <td>3959353.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>539</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>2842337.0</td>\n",
              "      <td>3421524.0</td>\n",
              "      <td>3831074.0</td>\n",
              "      <td>4237256.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>909</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>11882842.0</td>\n",
              "      <td>12280548.0</td>\n",
              "      <td>12702379.0</td>\n",
              "      <td>13002700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Puerto Rico</td>\n",
              "      <td>14</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>Puerto Rico</td>\n",
              "      <td>3522037.0</td>\n",
              "      <td>3808605.0</td>\n",
              "      <td>3725789.0</td>\n",
              "      <td>3285874.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>86</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>1003464.0</td>\n",
              "      <td>1048259.0</td>\n",
              "      <td>1052567.0</td>\n",
              "      <td>1097379.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>769</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>3486310.0</td>\n",
              "      <td>4012023.0</td>\n",
              "      <td>4625364.0</td>\n",
              "      <td>5118425.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>58</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>696004.0</td>\n",
              "      <td>754858.0</td>\n",
              "      <td>814180.0</td>\n",
              "      <td>886667.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>419</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>4877203.0</td>\n",
              "      <td>5689427.0</td>\n",
              "      <td>6346105.0</td>\n",
              "      <td>6910840.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Texas</td>\n",
              "      <td>3,559</td>\n",
              "      <td>6.90%</td>\n",
              "      <td>Texas</td>\n",
              "      <td>16986335.0</td>\n",
              "      <td>20851028.0</td>\n",
              "      <td>25145561.0</td>\n",
              "      <td>29145505.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Utah</td>\n",
              "      <td>182</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Utah</td>\n",
              "      <td>1722850.0</td>\n",
              "      <td>2233183.0</td>\n",
              "      <td>2763885.0</td>\n",
              "      <td>3271616.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>31</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>562758.0</td>\n",
              "      <td>608613.0</td>\n",
              "      <td>625741.0</td>\n",
              "      <td>643077.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>578</td>\n",
              "      <td>1.10%</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>6189197.0</td>\n",
              "      <td>7079057.0</td>\n",
              "      <td>8001024.0</td>\n",
              "      <td>8631393.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Washington</td>\n",
              "      <td>815</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Washington</td>\n",
              "      <td>4866669.0</td>\n",
              "      <td>5894281.0</td>\n",
              "      <td>6724540.0</td>\n",
              "      <td>7705281.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>96</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>1793477.0</td>\n",
              "      <td>1808193.0</td>\n",
              "      <td>1852994.0</td>\n",
              "      <td>1793716.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>337</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>4891954.0</td>\n",
              "      <td>5363757.0</td>\n",
              "      <td>5686986.0</td>\n",
              "      <td>5893718.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>47</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>453589.0</td>\n",
              "      <td>493786.0</td>\n",
              "      <td>563626.0</td>\n",
              "      <td>576851.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a4a9242-b997-4b72-abaa-8ea753398e8d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2a4a9242-b997-4b72-abaa-8ea753398e8d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2a4a9242-b997-4b72-abaa-8ea753398e8d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-aec5b93e-a443-4efa-ad61-1b941a294e31\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aec5b93e-a443-4efa-ad61-1b941a294e31')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-aec5b93e-a443-4efa-ad61-1b941a294e31 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"usa\",\n  \"rows\": 52,\n  \"fields\": [\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"Maine\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calls\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"87\",\n          \"769\",\n          \"578\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratio\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"0.50%\",\n          \"2.10%\",\n          \"0.80%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"Maine\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 1990\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5393775.659208077,\n        \"min\": 453589.0,\n        \"max\": 29811427.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          1227928.0,\n          3486310.0,\n          6189197.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2000\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6107884.215686862,\n        \"min\": 493786.0,\n        \"max\": 33871653.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          1274779.0,\n          4012023.0,\n          7079057.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2010\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6764459.6524833,\n        \"min\": 563626.0,\n        \"max\": 37253956.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          1328361.0,\n          4625364.0,\n          8001024.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7348556.712705373,\n        \"min\": 576851.0,\n        \"max\": 39538223.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          1362359.0,\n          5118425.0,\n          8631393.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 56
        }
      ],
      "source": [
        "usa.dropna()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 57,
      "metadata": {
        "id": "CFPl3QqlDQx2"
      },
      "outputs": [],
      "source": [
        "usa=usa.dropna()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 58,
      "metadata": {
        "id": "hmSIWJYeEKMm"
      },
      "outputs": [],
      "source": [
        "import re\n",
        "def cleannumber(population):\n",
        "  return re.sub(r'[,\\$]',\"\",population)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 59,
      "metadata": {
        "id": "VTy5R2bQ3pMX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "747adae3-23e3-4665-e66a-8217d873aff1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-59-eaa82c6f8135>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  usa['Calls'] = usa['Calls'].str.replace(',', '')\n"
          ]
        }
      ],
      "source": [
        "usa['Calls'] = usa['Calls'].str.replace(',', '')\n",
        "\n",
        "# Print the updated DataFrame\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "id": "r2Z9ZSAUD215",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f46467fb-7341-480a-88d1-52c0202a2d6d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-60-9834dcf0d5eb>:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  usa[\"Calls\"] = usa[\"Calls\"].astype(float)\n"
          ]
        }
      ],
      "source": [
        "usa[\"Calls\"]\n",
        "usa[\"Calls\"] = usa[\"Calls\"].astype(float)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "id": "nKbh-5svDZcR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "17ff77a0-dc9c-4d8b-de48-644cfec435af"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-61-08887594cf73>:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  usa[\"percapitaG\"]= usa[\"Calls\"]/(usa[\"Pop. 2020\"]/1000000) #trafficking reports per MILLION people\n",
            "<ipython-input-61-08887594cf73>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  usa[\"percapita\"]= usa[\"Calls\"]/usa[\"Pop. 2020\"]\n"
          ]
        }
      ],
      "source": [
        "#FOR GRAPH\n",
        "usa[\"percapitaG\"]= usa[\"Calls\"]/(usa[\"Pop. 2020\"]/1000000) #trafficking reports per MILLION people\n",
        "#GDP ALREADY PROPER\n",
        "#FOR REST\n",
        "usa[\"percapita\"]= usa[\"Calls\"]/usa[\"Pop. 2020\"]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "id": "ueNwd14UZ24r",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2a0de685-92b3-4bbc-d7dd-08efec1ae025"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (0.14.4)\n",
            "Requirement already satisfied: fiona>=1.8.21 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.9.6)\n",
            "Requirement already satisfied: numpy>=1.22 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.26.4)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from geopandas) (24.1)\n",
            "Requirement already satisfied: pandas>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.1.4)\n",
            "Requirement already satisfied: pyproj>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (3.6.1)\n",
            "Requirement already satisfied: shapely>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.0.6)\n",
            "Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (24.2.0)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (2024.8.30)\n",
            "Requirement already satisfied: click~=8.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (8.1.7)\n",
            "Requirement already satisfied: click-plugins>=1.0 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (1.1.1)\n",
            "Requirement already satisfied: cligj>=0.5 in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (0.7.2)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fiona>=1.8.21->geopandas) (1.16.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.1)\n"
          ]
        }
      ],
      "source": [
        "!pip install geopandas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "id": "Bg80FQK0rbi5"
      },
      "outputs": [],
      "source": [
        "import geopandas\n",
        "from shapely.geometry import Point, Polygon\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 64,
      "metadata": {
        "id": "vTETRBInZ94f"
      },
      "outputs": [],
      "source": [
        "usamap = geopandas.read_file('21_basic/states.shp')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 65,
      "metadata": {
        "id": "vWNkJ1M7bwHw"
      },
      "outputs": [],
      "source": [
        "usamap = usamap.merge(usa, left_on=\"STATE_NAME\", right_on=\"State\", how=\"left\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "id": "HjTZ05mHcYo5"
      },
      "outputs": [],
      "source": [
        "#usamap.corr()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "metadata": {
        "id": "yYzhD0Mz3VPz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ea224c71-8e07-4dde-eafb-56d9d6f03d16"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              STATE_NAME  DRAWSEQ STATE_FIPS          SUB_REGION STATE_ABBR  \\\n",
              "0                 Hawaii        1         15             Pacific         HI   \n",
              "1             Washington        2         53             Pacific         WA   \n",
              "2                Montana        3         30            Mountain         MT   \n",
              "3                  Maine        4         23         New England         ME   \n",
              "4           North Dakota        5         38  West North Central         ND   \n",
              "5           South Dakota        6         46  West North Central         SD   \n",
              "6                Wyoming        7         56            Mountain         WY   \n",
              "7              Wisconsin        8         55  East North Central         WI   \n",
              "8                  Idaho        9         16            Mountain         ID   \n",
              "9                Vermont       10         50         New England         VT   \n",
              "10             Minnesota       11         27  West North Central         MN   \n",
              "11                Oregon       12         41             Pacific         OR   \n",
              "12         New Hampshire       13         33         New England         NH   \n",
              "13                  Iowa       14         19  West North Central         IA   \n",
              "14         Massachusetts       15         25         New England         MA   \n",
              "15              Nebraska       16         31  West North Central         NE   \n",
              "16              New York       17         36     Middle Atlantic         NY   \n",
              "17          Pennsylvania       18         42     Middle Atlantic         PA   \n",
              "18           Connecticut       19         09         New England         CT   \n",
              "19          Rhode Island       20         44         New England         RI   \n",
              "20            New Jersey       21         34     Middle Atlantic         NJ   \n",
              "21               Indiana       22         18  East North Central         IN   \n",
              "22                Nevada       23         32            Mountain         NV   \n",
              "23                  Utah       24         49            Mountain         UT   \n",
              "24            California       25         06             Pacific         CA   \n",
              "25                  Ohio       26         39  East North Central         OH   \n",
              "26              Illinois       27         17  East North Central         IL   \n",
              "27  District of Columbia       28         11      South Atlantic         DC   \n",
              "28              Delaware       29         10      South Atlantic         DE   \n",
              "29         West Virginia       30         54      South Atlantic         WV   \n",
              "30              Maryland       31         24      South Atlantic         MD   \n",
              "31              Colorado       32         08            Mountain         CO   \n",
              "32              Kentucky       33         21  East South Central         KY   \n",
              "33                Kansas       34         20  West North Central         KS   \n",
              "34              Virginia       35         51      South Atlantic         VA   \n",
              "35              Missouri       36         29  West North Central         MO   \n",
              "36               Arizona       37         04            Mountain         AZ   \n",
              "37              Oklahoma       38         40  West South Central         OK   \n",
              "38        North Carolina       39         37      South Atlantic         NC   \n",
              "39             Tennessee       40         47  East South Central         TN   \n",
              "40                 Texas       41         48  West South Central         TX   \n",
              "41            New Mexico       42         35            Mountain         NM   \n",
              "42               Alabama       43         01  East South Central         AL   \n",
              "43           Mississippi       44         28  East South Central         MS   \n",
              "44               Georgia       45         13      South Atlantic         GA   \n",
              "45        South Carolina       46         45      South Atlantic         SC   \n",
              "46              Arkansas       47         05  West South Central         AR   \n",
              "47             Louisiana       48         22  West South Central         LA   \n",
              "48               Florida       49         12      South Atlantic         FL   \n",
              "49              Michigan       50         26  East North Central         MI   \n",
              "50                Alaska       51         02             Pacific         AK   \n",
              "\n",
              "                                             geometry                 State  \\\n",
              "0   MULTIPOLYGON (((-160.07380 22.00418, -160.0497...                Hawaii   \n",
              "1   MULTIPOLYGON (((-122.40202 48.22522, -122.4628...            Washington   \n",
              "2   POLYGON ((-111.47543 44.70216, -111.48080 44.6...               Montana   \n",
              "3   MULTIPOLYGON (((-69.77728 44.07415, -69.85993 ...                 Maine   \n",
              "4   POLYGON ((-98.73044 45.93827, -99.00683 45.939...          North Dakota   \n",
              "5   POLYGON ((-102.78838 42.99530, -103.00588 42.9...          South Dakota   \n",
              "6   POLYGON ((-104.05362 41.69822, -104.05550 41.5...               Wyoming   \n",
              "7   MULTIPOLYGON (((-87.74856 44.96162, -87.83999 ...             Wisconsin   \n",
              "8   POLYGON ((-117.02630 43.67903, -117.02379 43.7...                 Idaho   \n",
              "9   POLYGON ((-73.25806 42.74606, -73.26928 42.747...               Vermont   \n",
              "10  POLYGON ((-91.73037 43.49957, -92.07753 43.499...             Minnesota   \n",
              "11  POLYGON ((-121.44151 41.99433, -122.28471 42.0...                Oregon   \n",
              "12  POLYGON ((-72.27992 42.72047, -72.45577 42.725...         New Hampshire   \n",
              "13  POLYGON ((-91.12013 40.70544, -91.12930 40.682...                  Iowa   \n",
              "14  MULTIPOLYGON (((-71.31933 41.77220, -71.33980 ...         Massachusetts   \n",
              "15  POLYGON ((-101.40739 40.00100, -102.05154 39.9...              Nebraska   \n",
              "16  MULTIPOLYGON (((-79.76324 42.26733, -79.44402 ...              New York   \n",
              "17  POLYGON ((-77.47579 39.71962, -78.09595 39.725...          Pennsylvania   \n",
              "18  POLYGON ((-73.53039 41.52275, -73.51715 41.665...           Connecticut   \n",
              "19  MULTIPOLYGON (((-71.79019 41.60131, -71.79261 ...          Rhode Island   \n",
              "20  POLYGON ((-75.48928 39.71486, -75.47597 39.720...            New Jersey   \n",
              "21  POLYGON ((-86.34161 38.17729, -86.36435 38.193...               Indiana   \n",
              "22  POLYGON ((-119.15245 38.41180, -119.31883 38.5...                Nevada   \n",
              "23  POLYGON ((-114.04727 38.13765, -114.04509 38.5...                  Utah   \n",
              "24  MULTIPOLYGON (((-121.66522 38.16929, -121.7823...            California   \n",
              "25  POLYGON ((-83.27276 38.60926, -83.29004 38.596...                  Ohio   \n",
              "26  POLYGON ((-88.07159 37.51104, -88.08791 37.476...              Illinois   \n",
              "27  POLYGON ((-77.00793 38.96667, -76.91090 38.890...  District of Columbia   \n",
              "28  POLYGON ((-75.70707 38.55759, -75.71071 38.649...              Delaware   \n",
              "29  POLYGON ((-79.23166 38.48050, -79.27236 38.437...         West Virginia   \n",
              "30  MULTIPOLYGON (((-75.71071 38.64967, -75.70707 ...              Maryland   \n",
              "31  POLYGON ((-102.04446 37.64147, -102.04201 37.3...              Colorado   \n",
              "32  MULTIPOLYGON (((-86.51067 36.65507, -86.77054 ...              Kentucky   \n",
              "33  POLYGON ((-95.07193 37.00148, -95.40662 37.000...                Kansas   \n",
              "34  MULTIPOLYGON (((-79.14406 36.54620, -79.21680 ...              Virginia   \n",
              "35  POLYGON ((-89.10503 36.95392, -89.12965 36.866...              Missouri   \n",
              "36  POLYGON ((-114.52063 33.02771, -114.55909 33.0...               Arizona   \n",
              "37  POLYGON ((-94.43932 34.92915, -94.44596 34.735...              Oklahoma   \n",
              "38  MULTIPOLYGON (((-83.98845 34.98915, -84.11815 ...        North Carolina   \n",
              "39  POLYGON ((-83.95461 35.45554, -84.01256 35.407...             Tennessee   \n",
              "40  MULTIPOLYGON (((-105.99889 31.39394, -106.2132...                 Texas   \n",
              "41  POLYGON ((-109.04950 32.44204, -109.05135 32.7...            New Mexico   \n",
              "42  POLYGON ((-85.07007 31.98070, -85.11515 31.907...               Alabama   \n",
              "43  POLYGON ((-88.45080 31.43562, -88.43456 31.120...           Mississippi   \n",
              "44  MULTIPOLYGON (((-85.13017 31.77885, -85.13156 ...               Georgia   \n",
              "45  MULTIPOLYGON (((-81.75959 33.19538, -81.76988 ...        South Carolina   \n",
              "46  POLYGON ((-94.46169 34.19677, -94.45262 34.508...              Arkansas   \n",
              "47  MULTIPOLYGON (((-93.70752 30.23958, -93.69938 ...             Louisiana   \n",
              "48  MULTIPOLYGON (((-80.78566 28.78519, -80.76242 ...               Florida   \n",
              "49  MULTIPOLYGON (((-88.49753 48.17380, -88.62533 ...              Michigan   \n",
              "50  MULTIPOLYGON (((-161.33379 58.73325, -161.3824...                Alaska   \n",
              "\n",
              "     Calls  Ratio                  Name   Pop. 1990   Pop. 2000   Pop. 2010  \\\n",
              "0    108.0  0.20%                Hawaii   1108229.0   1211497.0   1360301.0   \n",
              "1    815.0  1.60%            Washington   4866669.0   5894281.0   6724540.0   \n",
              "2    462.0  0.90%               Montana    799065.0    902200.0    989415.0   \n",
              "3     87.0  0.20%                 Maine   1227928.0   1274779.0   1328361.0   \n",
              "4     70.0  0.10%          North Dakota    638800.0    642237.0    672591.0   \n",
              "5     58.0  0.10%          South Dakota    696004.0    754858.0    814180.0   \n",
              "6     47.0  0.10%               Wyoming    453589.0    493786.0    563626.0   \n",
              "7    337.0  0.70%             Wisconsin   4891954.0   5363757.0   5686986.0   \n",
              "8     97.0  0.20%                 Idaho   1006734.0   1293957.0   1567582.0   \n",
              "9     31.0  0.10%               Vermont    562758.0    608613.0    625741.0   \n",
              "10   356.0  0.70%             Minnesota   4375665.0   4919631.0   5303925.0   \n",
              "11   539.0  1.00%                Oregon   2842337.0   3421524.0   3831074.0   \n",
              "12    43.0  0.10%         New Hampshire   1109252.0   1235807.0   1316470.0   \n",
              "13   285.0  0.50%                  Iowa   2776831.0   2926538.0   3046355.0   \n",
              "14   232.0  0.40%         Massachusetts   6016425.0   6349364.0   6547629.0   \n",
              "15   212.0  0.40%              Nebraska   1578417.0   1711230.0   1826341.0   \n",
              "16  1739.0  3.40%              New York  17990778.0  18977026.0  19378102.0   \n",
              "17   909.0  1.80%          Pennsylvania  11882842.0  12280548.0  12702379.0   \n",
              "18   188.0  0.40%           Connecticut   3287116.0   3405650.0   3574097.0   \n",
              "19    86.0  0.20%          Rhode Island   1003464.0   1048259.0   1052567.0   \n",
              "20   615.0  1.20%            New Jersey   7747750.0   8414764.0   8791894.0   \n",
              "21   514.0  1.00%               Indiana   5544156.0   6080827.0   6483802.0   \n",
              "22   417.0  0.80%                Nevada   1201675.0   1998250.0   2700551.0   \n",
              "23   182.0  0.40%                  Utah   1722850.0   2233183.0   2763885.0   \n",
              "24  4970.0  9.60%            California  29811427.0  33871653.0  37253956.0   \n",
              "25  1087.0  2.10%                  Ohio  10847115.0  11353336.0  11536504.0   \n",
              "26   933.0  1.80%              Illinois  11430602.0  12419927.0  12830632.0   \n",
              "27   185.0  0.40%  District of Columbia    606900.0    572086.0    601723.0   \n",
              "28   127.0  0.20%              Delaware    666168.0    783559.0    897934.0   \n",
              "29    96.0  0.20%         West Virginia   1793477.0   1808193.0   1852994.0   \n",
              "30   529.0  1.00%              Maryland   4780753.0   5296647.0   5773552.0   \n",
              "31   625.0  1.20%              Colorado   3294473.0   4302086.0   5029196.0   \n",
              "32   305.0  0.60%              Kentucky   3686892.0   4042193.0   4339367.0   \n",
              "33   390.0  0.70%                Kansas   2477588.0   2688925.0   2853118.0   \n",
              "34   578.0  1.10%              Virginia   6189197.0   7079057.0   8001024.0   \n",
              "35   750.0  1.50%              Missouri   5116901.0   5596564.0   5988927.0   \n",
              "36   608.0  1.20%               Arizona   3665339.0   5130247.0   6392017.0   \n",
              "37   384.0  0.70%              Oklahoma   3145576.0   3450451.0   3751351.0   \n",
              "38  1103.0  2.10%        North Carolina   6632448.0   8046346.0   9535483.0   \n",
              "39   419.0  0.80%             Tennessee   4877203.0   5689427.0   6346105.0   \n",
              "40  3559.0  6.90%                 Texas  16986335.0  20851028.0  25145561.0   \n",
              "41   367.0  0.70%            New Mexico   1515069.0   1819017.0   2059179.0   \n",
              "42   252.0  0.50%               Alabama   4040389.0   4447207.0   4779736.0   \n",
              "43   710.0  1.40%           Mississippi   2575475.0   2844754.0   2967297.0   \n",
              "44   955.0  1.80%               Georgia   6478149.0   8186653.0   9687653.0   \n",
              "45   769.0  1.50%        South Carolina   3486310.0   4012023.0   4625364.0   \n",
              "46   295.0  0.60%              Arkansas   2350624.0   2673293.0   2915918.0   \n",
              "47   339.0  0.70%             Louisiana   4221826.0   4469035.0   4533372.0   \n",
              "48  2539.0  4.90%               Florida  12938071.0  15982571.0  18801310.0   \n",
              "49   845.0  1.60%              Michigan   9295287.0   9938823.0   9883640.0   \n",
              "50    56.0  0.10%                Alaska    550043.0    626933.0    710231.0   \n",
              "\n",
              "     Pop. 2020  percapitaG  percapita  \n",
              "0    1455271.0   74.212982   0.000074  \n",
              "1    7705281.0  105.771613   0.000106  \n",
              "2    1084225.0  426.110816   0.000426  \n",
              "3    1362359.0   63.859820   0.000064  \n",
              "4     779094.0   89.847952   0.000090  \n",
              "5     886667.0   65.413509   0.000065  \n",
              "6     576851.0   81.476846   0.000081  \n",
              "7    5893718.0   57.179526   0.000057  \n",
              "8    1839106.0   52.743018   0.000053  \n",
              "9     643077.0   48.205736   0.000048  \n",
              "10   5706494.0   62.385065   0.000062  \n",
              "11   4237256.0  127.204965   0.000127  \n",
              "12   1377529.0   31.215314   0.000031  \n",
              "13   3190369.0   89.331359   0.000089  \n",
              "14   7029917.0   33.001812   0.000033  \n",
              "15   1961504.0  108.080330   0.000108  \n",
              "16  20201249.0   86.083786   0.000086  \n",
              "17  13002700.0   69.908557   0.000070  \n",
              "18   3605944.0   52.136140   0.000052  \n",
              "19   1097379.0   78.368549   0.000078  \n",
              "20   9288994.0   66.207385   0.000066  \n",
              "21   6785528.0   75.749448   0.000076  \n",
              "22   3104614.0  134.316215   0.000134  \n",
              "23   3271616.0   55.630001   0.000056  \n",
              "24  39538223.0  125.701147   0.000126  \n",
              "25  11799448.0   92.122954   0.000092  \n",
              "26  12812508.0   72.819467   0.000073  \n",
              "27    689545.0  268.292860   0.000268  \n",
              "28    989948.0  128.289567   0.000128  \n",
              "29   1793716.0   53.520178   0.000054  \n",
              "30   6177224.0   85.637173   0.000086  \n",
              "31   5773714.0  108.249214   0.000108  \n",
              "32   4505836.0   67.689991   0.000068  \n",
              "33   2937880.0  132.748785   0.000133  \n",
              "34   8631393.0   66.964857   0.000067  \n",
              "35   6154913.0  121.853875   0.000122  \n",
              "36   7151502.0   85.017105   0.000085  \n",
              "37   3959353.0   96.985543   0.000097  \n",
              "38  10439388.0  105.657535   0.000106  \n",
              "39   6910840.0   60.629388   0.000061  \n",
              "40  29145505.0  122.111454   0.000122  \n",
              "41   2117522.0  173.315791   0.000173  \n",
              "42   5024279.0   50.156450   0.000050  \n",
              "43   2961279.0  239.761265   0.000240  \n",
              "44  10711908.0   89.153118   0.000089  \n",
              "45   5118425.0  150.241529   0.000150  \n",
              "46   3011524.0   97.957048   0.000098  \n",
              "47   4657757.0   72.781813   0.000073  \n",
              "48  21538187.0  117.883645   0.000118  \n",
              "49  10077331.0   83.851567   0.000084  \n",
              "50    733391.0   76.357632   0.000076  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b57117c1-21b7-4e25-b776-2214d859ff19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STATE_NAME</th>\n",
              "      <th>DRAWSEQ</th>\n",
              "      <th>STATE_FIPS</th>\n",
              "      <th>SUB_REGION</th>\n",
              "      <th>STATE_ABBR</th>\n",
              "      <th>geometry</th>\n",
              "      <th>State</th>\n",
              "      <th>Calls</th>\n",
              "      <th>Ratio</th>\n",
              "      <th>Name</th>\n",
              "      <th>Pop. 1990</th>\n",
              "      <th>Pop. 2000</th>\n",
              "      <th>Pop. 2010</th>\n",
              "      <th>Pop. 2020</th>\n",
              "      <th>percapitaG</th>\n",
              "      <th>percapita</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>HI</td>\n",
              "      <td>MULTIPOLYGON (((-160.07380 22.00418, -160.0497...</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>108.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1108229.0</td>\n",
              "      <td>1211497.0</td>\n",
              "      <td>1360301.0</td>\n",
              "      <td>1455271.0</td>\n",
              "      <td>74.212982</td>\n",
              "      <td>0.000074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Washington</td>\n",
              "      <td>2</td>\n",
              "      <td>53</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>WA</td>\n",
              "      <td>MULTIPOLYGON (((-122.40202 48.22522, -122.4628...</td>\n",
              "      <td>Washington</td>\n",
              "      <td>815.0</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Washington</td>\n",
              "      <td>4866669.0</td>\n",
              "      <td>5894281.0</td>\n",
              "      <td>6724540.0</td>\n",
              "      <td>7705281.0</td>\n",
              "      <td>105.771613</td>\n",
              "      <td>0.000106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Montana</td>\n",
              "      <td>3</td>\n",
              "      <td>30</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>MT</td>\n",
              "      <td>POLYGON ((-111.47543 44.70216, -111.48080 44.6...</td>\n",
              "      <td>Montana</td>\n",
              "      <td>462.0</td>\n",
              "      <td>0.90%</td>\n",
              "      <td>Montana</td>\n",
              "      <td>799065.0</td>\n",
              "      <td>902200.0</td>\n",
              "      <td>989415.0</td>\n",
              "      <td>1084225.0</td>\n",
              "      <td>426.110816</td>\n",
              "      <td>0.000426</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Maine</td>\n",
              "      <td>4</td>\n",
              "      <td>23</td>\n",
              "      <td>New England</td>\n",
              "      <td>ME</td>\n",
              "      <td>MULTIPOLYGON (((-69.77728 44.07415, -69.85993 ...</td>\n",
              "      <td>Maine</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Maine</td>\n",
              "      <td>1227928.0</td>\n",
              "      <td>1274779.0</td>\n",
              "      <td>1328361.0</td>\n",
              "      <td>1362359.0</td>\n",
              "      <td>63.859820</td>\n",
              "      <td>0.000064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>ND</td>\n",
              "      <td>POLYGON ((-98.73044 45.93827, -99.00683 45.939...</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>70.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>638800.0</td>\n",
              "      <td>642237.0</td>\n",
              "      <td>672591.0</td>\n",
              "      <td>779094.0</td>\n",
              "      <td>89.847952</td>\n",
              "      <td>0.000090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>6</td>\n",
              "      <td>46</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>SD</td>\n",
              "      <td>POLYGON ((-102.78838 42.99530, -103.00588 42.9...</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>58.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>696004.0</td>\n",
              "      <td>754858.0</td>\n",
              "      <td>814180.0</td>\n",
              "      <td>886667.0</td>\n",
              "      <td>65.413509</td>\n",
              "      <td>0.000065</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>7</td>\n",
              "      <td>56</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>WY</td>\n",
              "      <td>POLYGON ((-104.05362 41.69822, -104.05550 41.5...</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>453589.0</td>\n",
              "      <td>493786.0</td>\n",
              "      <td>563626.0</td>\n",
              "      <td>576851.0</td>\n",
              "      <td>81.476846</td>\n",
              "      <td>0.000081</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>8</td>\n",
              "      <td>55</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>WI</td>\n",
              "      <td>MULTIPOLYGON (((-87.74856 44.96162, -87.83999 ...</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>337.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>4891954.0</td>\n",
              "      <td>5363757.0</td>\n",
              "      <td>5686986.0</td>\n",
              "      <td>5893718.0</td>\n",
              "      <td>57.179526</td>\n",
              "      <td>0.000057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>9</td>\n",
              "      <td>16</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>ID</td>\n",
              "      <td>POLYGON ((-117.02630 43.67903, -117.02379 43.7...</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>1006734.0</td>\n",
              "      <td>1293957.0</td>\n",
              "      <td>1567582.0</td>\n",
              "      <td>1839106.0</td>\n",
              "      <td>52.743018</td>\n",
              "      <td>0.000053</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>10</td>\n",
              "      <td>50</td>\n",
              "      <td>New England</td>\n",
              "      <td>VT</td>\n",
              "      <td>POLYGON ((-73.25806 42.74606, -73.26928 42.747...</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>31.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>562758.0</td>\n",
              "      <td>608613.0</td>\n",
              "      <td>625741.0</td>\n",
              "      <td>643077.0</td>\n",
              "      <td>48.205736</td>\n",
              "      <td>0.000048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>11</td>\n",
              "      <td>27</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>MN</td>\n",
              "      <td>POLYGON ((-91.73037 43.49957, -92.07753 43.499...</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>356.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>4375665.0</td>\n",
              "      <td>4919631.0</td>\n",
              "      <td>5303925.0</td>\n",
              "      <td>5706494.0</td>\n",
              "      <td>62.385065</td>\n",
              "      <td>0.000062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>OR</td>\n",
              "      <td>POLYGON ((-121.44151 41.99433, -122.28471 42.0...</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>539.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>2842337.0</td>\n",
              "      <td>3421524.0</td>\n",
              "      <td>3831074.0</td>\n",
              "      <td>4237256.0</td>\n",
              "      <td>127.204965</td>\n",
              "      <td>0.000127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>13</td>\n",
              "      <td>33</td>\n",
              "      <td>New England</td>\n",
              "      <td>NH</td>\n",
              "      <td>POLYGON ((-72.27992 42.72047, -72.45577 42.725...</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>43.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>1109252.0</td>\n",
              "      <td>1235807.0</td>\n",
              "      <td>1316470.0</td>\n",
              "      <td>1377529.0</td>\n",
              "      <td>31.215314</td>\n",
              "      <td>0.000031</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>IA</td>\n",
              "      <td>POLYGON ((-91.12013 40.70544, -91.12930 40.682...</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>285.0</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>2776831.0</td>\n",
              "      <td>2926538.0</td>\n",
              "      <td>3046355.0</td>\n",
              "      <td>3190369.0</td>\n",
              "      <td>89.331359</td>\n",
              "      <td>0.000089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>15</td>\n",
              "      <td>25</td>\n",
              "      <td>New England</td>\n",
              "      <td>MA</td>\n",
              "      <td>MULTIPOLYGON (((-71.31933 41.77220, -71.33980 ...</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>232.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>6016425.0</td>\n",
              "      <td>6349364.0</td>\n",
              "      <td>6547629.0</td>\n",
              "      <td>7029917.0</td>\n",
              "      <td>33.001812</td>\n",
              "      <td>0.000033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>16</td>\n",
              "      <td>31</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>NE</td>\n",
              "      <td>POLYGON ((-101.40739 40.00100, -102.05154 39.9...</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>212.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>1578417.0</td>\n",
              "      <td>1711230.0</td>\n",
              "      <td>1826341.0</td>\n",
              "      <td>1961504.0</td>\n",
              "      <td>108.080330</td>\n",
              "      <td>0.000108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>New York</td>\n",
              "      <td>17</td>\n",
              "      <td>36</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>NY</td>\n",
              "      <td>MULTIPOLYGON (((-79.76324 42.26733, -79.44402 ...</td>\n",
              "      <td>New York</td>\n",
              "      <td>1739.0</td>\n",
              "      <td>3.40%</td>\n",
              "      <td>New York</td>\n",
              "      <td>17990778.0</td>\n",
              "      <td>18977026.0</td>\n",
              "      <td>19378102.0</td>\n",
              "      <td>20201249.0</td>\n",
              "      <td>86.083786</td>\n",
              "      <td>0.000086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>18</td>\n",
              "      <td>42</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>PA</td>\n",
              "      <td>POLYGON ((-77.47579 39.71962, -78.09595 39.725...</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>909.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>11882842.0</td>\n",
              "      <td>12280548.0</td>\n",
              "      <td>12702379.0</td>\n",
              "      <td>13002700.0</td>\n",
              "      <td>69.908557</td>\n",
              "      <td>0.000070</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>19</td>\n",
              "      <td>09</td>\n",
              "      <td>New England</td>\n",
              "      <td>CT</td>\n",
              "      <td>POLYGON ((-73.53039 41.52275, -73.51715 41.665...</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>188.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>3287116.0</td>\n",
              "      <td>3405650.0</td>\n",
              "      <td>3574097.0</td>\n",
              "      <td>3605944.0</td>\n",
              "      <td>52.136140</td>\n",
              "      <td>0.000052</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>20</td>\n",
              "      <td>44</td>\n",
              "      <td>New England</td>\n",
              "      <td>RI</td>\n",
              "      <td>MULTIPOLYGON (((-71.79019 41.60131, -71.79261 ...</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>86.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>1003464.0</td>\n",
              "      <td>1048259.0</td>\n",
              "      <td>1052567.0</td>\n",
              "      <td>1097379.0</td>\n",
              "      <td>78.368549</td>\n",
              "      <td>0.000078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>21</td>\n",
              "      <td>34</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>NJ</td>\n",
              "      <td>POLYGON ((-75.48928 39.71486, -75.47597 39.720...</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>615.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7747750.0</td>\n",
              "      <td>8414764.0</td>\n",
              "      <td>8791894.0</td>\n",
              "      <td>9288994.0</td>\n",
              "      <td>66.207385</td>\n",
              "      <td>0.000066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>22</td>\n",
              "      <td>18</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>IN</td>\n",
              "      <td>POLYGON ((-86.34161 38.17729, -86.36435 38.193...</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>514.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>5544156.0</td>\n",
              "      <td>6080827.0</td>\n",
              "      <td>6483802.0</td>\n",
              "      <td>6785528.0</td>\n",
              "      <td>75.749448</td>\n",
              "      <td>0.000076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>23</td>\n",
              "      <td>32</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>NV</td>\n",
              "      <td>POLYGON ((-119.15245 38.41180, -119.31883 38.5...</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>417.0</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>1201675.0</td>\n",
              "      <td>1998250.0</td>\n",
              "      <td>2700551.0</td>\n",
              "      <td>3104614.0</td>\n",
              "      <td>134.316215</td>\n",
              "      <td>0.000134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Utah</td>\n",
              "      <td>24</td>\n",
              "      <td>49</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>UT</td>\n",
              "      <td>POLYGON ((-114.04727 38.13765, -114.04509 38.5...</td>\n",
              "      <td>Utah</td>\n",
              "      <td>182.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Utah</td>\n",
              "      <td>1722850.0</td>\n",
              "      <td>2233183.0</td>\n",
              "      <td>2763885.0</td>\n",
              "      <td>3271616.0</td>\n",
              "      <td>55.630001</td>\n",
              "      <td>0.000056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>California</td>\n",
              "      <td>25</td>\n",
              "      <td>06</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>CA</td>\n",
              "      <td>MULTIPOLYGON (((-121.66522 38.16929, -121.7823...</td>\n",
              "      <td>California</td>\n",
              "      <td>4970.0</td>\n",
              "      <td>9.60%</td>\n",
              "      <td>California</td>\n",
              "      <td>29811427.0</td>\n",
              "      <td>33871653.0</td>\n",
              "      <td>37253956.0</td>\n",
              "      <td>39538223.0</td>\n",
              "      <td>125.701147</td>\n",
              "      <td>0.000126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>26</td>\n",
              "      <td>39</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>OH</td>\n",
              "      <td>POLYGON ((-83.27276 38.60926, -83.29004 38.596...</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>1087.0</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>10847115.0</td>\n",
              "      <td>11353336.0</td>\n",
              "      <td>11536504.0</td>\n",
              "      <td>11799448.0</td>\n",
              "      <td>92.122954</td>\n",
              "      <td>0.000092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>27</td>\n",
              "      <td>17</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>IL</td>\n",
              "      <td>POLYGON ((-88.07159 37.51104, -88.08791 37.476...</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>933.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>11430602.0</td>\n",
              "      <td>12419927.0</td>\n",
              "      <td>12830632.0</td>\n",
              "      <td>12812508.0</td>\n",
              "      <td>72.819467</td>\n",
              "      <td>0.000073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>28</td>\n",
              "      <td>11</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>DC</td>\n",
              "      <td>POLYGON ((-77.00793 38.96667, -76.91090 38.890...</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>185.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>606900.0</td>\n",
              "      <td>572086.0</td>\n",
              "      <td>601723.0</td>\n",
              "      <td>689545.0</td>\n",
              "      <td>268.292860</td>\n",
              "      <td>0.000268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>29</td>\n",
              "      <td>10</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>DE</td>\n",
              "      <td>POLYGON ((-75.70707 38.55759, -75.71071 38.649...</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>127.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>666168.0</td>\n",
              "      <td>783559.0</td>\n",
              "      <td>897934.0</td>\n",
              "      <td>989948.0</td>\n",
              "      <td>128.289567</td>\n",
              "      <td>0.000128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>30</td>\n",
              "      <td>54</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>WV</td>\n",
              "      <td>POLYGON ((-79.23166 38.48050, -79.27236 38.437...</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>96.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>1793477.0</td>\n",
              "      <td>1808193.0</td>\n",
              "      <td>1852994.0</td>\n",
              "      <td>1793716.0</td>\n",
              "      <td>53.520178</td>\n",
              "      <td>0.000054</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>31</td>\n",
              "      <td>24</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>MD</td>\n",
              "      <td>MULTIPOLYGON (((-75.71071 38.64967, -75.70707 ...</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>529.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>4780753.0</td>\n",
              "      <td>5296647.0</td>\n",
              "      <td>5773552.0</td>\n",
              "      <td>6177224.0</td>\n",
              "      <td>85.637173</td>\n",
              "      <td>0.000086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>32</td>\n",
              "      <td>08</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>CO</td>\n",
              "      <td>POLYGON ((-102.04446 37.64147, -102.04201 37.3...</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>625.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>3294473.0</td>\n",
              "      <td>4302086.0</td>\n",
              "      <td>5029196.0</td>\n",
              "      <td>5773714.0</td>\n",
              "      <td>108.249214</td>\n",
              "      <td>0.000108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>33</td>\n",
              "      <td>21</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>KY</td>\n",
              "      <td>MULTIPOLYGON (((-86.51067 36.65507, -86.77054 ...</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>305.0</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>3686892.0</td>\n",
              "      <td>4042193.0</td>\n",
              "      <td>4339367.0</td>\n",
              "      <td>4505836.0</td>\n",
              "      <td>67.689991</td>\n",
              "      <td>0.000068</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>34</td>\n",
              "      <td>20</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>KS</td>\n",
              "      <td>POLYGON ((-95.07193 37.00148, -95.40662 37.000...</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>390.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>2477588.0</td>\n",
              "      <td>2688925.0</td>\n",
              "      <td>2853118.0</td>\n",
              "      <td>2937880.0</td>\n",
              "      <td>132.748785</td>\n",
              "      <td>0.000133</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>35</td>\n",
              "      <td>51</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>VA</td>\n",
              "      <td>MULTIPOLYGON (((-79.14406 36.54620, -79.21680 ...</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>578.0</td>\n",
              "      <td>1.10%</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>6189197.0</td>\n",
              "      <td>7079057.0</td>\n",
              "      <td>8001024.0</td>\n",
              "      <td>8631393.0</td>\n",
              "      <td>66.964857</td>\n",
              "      <td>0.000067</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>36</td>\n",
              "      <td>29</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>MO</td>\n",
              "      <td>POLYGON ((-89.10503 36.95392, -89.12965 36.866...</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>750.0</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>5116901.0</td>\n",
              "      <td>5596564.0</td>\n",
              "      <td>5988927.0</td>\n",
              "      <td>6154913.0</td>\n",
              "      <td>121.853875</td>\n",
              "      <td>0.000122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>37</td>\n",
              "      <td>04</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>AZ</td>\n",
              "      <td>POLYGON ((-114.52063 33.02771, -114.55909 33.0...</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>608.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>3665339.0</td>\n",
              "      <td>5130247.0</td>\n",
              "      <td>6392017.0</td>\n",
              "      <td>7151502.0</td>\n",
              "      <td>85.017105</td>\n",
              "      <td>0.000085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>38</td>\n",
              "      <td>40</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>OK</td>\n",
              "      <td>POLYGON ((-94.43932 34.92915, -94.44596 34.735...</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>384.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>3145576.0</td>\n",
              "      <td>3450451.0</td>\n",
              "      <td>3751351.0</td>\n",
              "      <td>3959353.0</td>\n",
              "      <td>96.985543</td>\n",
              "      <td>0.000097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>39</td>\n",
              "      <td>37</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>NC</td>\n",
              "      <td>MULTIPOLYGON (((-83.98845 34.98915, -84.11815 ...</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>1103.0</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>6632448.0</td>\n",
              "      <td>8046346.0</td>\n",
              "      <td>9535483.0</td>\n",
              "      <td>10439388.0</td>\n",
              "      <td>105.657535</td>\n",
              "      <td>0.000106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>40</td>\n",
              "      <td>47</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>TN</td>\n",
              "      <td>POLYGON ((-83.95461 35.45554, -84.01256 35.407...</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>419.0</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>4877203.0</td>\n",
              "      <td>5689427.0</td>\n",
              "      <td>6346105.0</td>\n",
              "      <td>6910840.0</td>\n",
              "      <td>60.629388</td>\n",
              "      <td>0.000061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Texas</td>\n",
              "      <td>41</td>\n",
              "      <td>48</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>TX</td>\n",
              "      <td>MULTIPOLYGON (((-105.99889 31.39394, -106.2132...</td>\n",
              "      <td>Texas</td>\n",
              "      <td>3559.0</td>\n",
              "      <td>6.90%</td>\n",
              "      <td>Texas</td>\n",
              "      <td>16986335.0</td>\n",
              "      <td>20851028.0</td>\n",
              "      <td>25145561.0</td>\n",
              "      <td>29145505.0</td>\n",
              "      <td>122.111454</td>\n",
              "      <td>0.000122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>42</td>\n",
              "      <td>35</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>NM</td>\n",
              "      <td>POLYGON ((-109.04950 32.44204, -109.05135 32.7...</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>367.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>1515069.0</td>\n",
              "      <td>1819017.0</td>\n",
              "      <td>2059179.0</td>\n",
              "      <td>2117522.0</td>\n",
              "      <td>173.315791</td>\n",
              "      <td>0.000173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>43</td>\n",
              "      <td>01</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>AL</td>\n",
              "      <td>POLYGON ((-85.07007 31.98070, -85.11515 31.907...</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>252.0</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>4040389.0</td>\n",
              "      <td>4447207.0</td>\n",
              "      <td>4779736.0</td>\n",
              "      <td>5024279.0</td>\n",
              "      <td>50.156450</td>\n",
              "      <td>0.000050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>44</td>\n",
              "      <td>28</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>MS</td>\n",
              "      <td>POLYGON ((-88.45080 31.43562, -88.43456 31.120...</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>710.0</td>\n",
              "      <td>1.40%</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>2575475.0</td>\n",
              "      <td>2844754.0</td>\n",
              "      <td>2967297.0</td>\n",
              "      <td>2961279.0</td>\n",
              "      <td>239.761265</td>\n",
              "      <td>0.000240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>45</td>\n",
              "      <td>13</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>GA</td>\n",
              "      <td>MULTIPOLYGON (((-85.13017 31.77885, -85.13156 ...</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>955.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>6478149.0</td>\n",
              "      <td>8186653.0</td>\n",
              "      <td>9687653.0</td>\n",
              "      <td>10711908.0</td>\n",
              "      <td>89.153118</td>\n",
              "      <td>0.000089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>46</td>\n",
              "      <td>45</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>SC</td>\n",
              "      <td>MULTIPOLYGON (((-81.75959 33.19538, -81.76988 ...</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>769.0</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>3486310.0</td>\n",
              "      <td>4012023.0</td>\n",
              "      <td>4625364.0</td>\n",
              "      <td>5118425.0</td>\n",
              "      <td>150.241529</td>\n",
              "      <td>0.000150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>47</td>\n",
              "      <td>05</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>AR</td>\n",
              "      <td>POLYGON ((-94.46169 34.19677, -94.45262 34.508...</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>295.0</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>2350624.0</td>\n",
              "      <td>2673293.0</td>\n",
              "      <td>2915918.0</td>\n",
              "      <td>3011524.0</td>\n",
              "      <td>97.957048</td>\n",
              "      <td>0.000098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>48</td>\n",
              "      <td>22</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>LA</td>\n",
              "      <td>MULTIPOLYGON (((-93.70752 30.23958, -93.69938 ...</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>339.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4221826.0</td>\n",
              "      <td>4469035.0</td>\n",
              "      <td>4533372.0</td>\n",
              "      <td>4657757.0</td>\n",
              "      <td>72.781813</td>\n",
              "      <td>0.000073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Florida</td>\n",
              "      <td>49</td>\n",
              "      <td>12</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>FL</td>\n",
              "      <td>MULTIPOLYGON (((-80.78566 28.78519, -80.76242 ...</td>\n",
              "      <td>Florida</td>\n",
              "      <td>2539.0</td>\n",
              "      <td>4.90%</td>\n",
              "      <td>Florida</td>\n",
              "      <td>12938071.0</td>\n",
              "      <td>15982571.0</td>\n",
              "      <td>18801310.0</td>\n",
              "      <td>21538187.0</td>\n",
              "      <td>117.883645</td>\n",
              "      <td>0.000118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>MI</td>\n",
              "      <td>MULTIPOLYGON (((-88.49753 48.17380, -88.62533 ...</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>845.0</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>9295287.0</td>\n",
              "      <td>9938823.0</td>\n",
              "      <td>9883640.0</td>\n",
              "      <td>10077331.0</td>\n",
              "      <td>83.851567</td>\n",
              "      <td>0.000084</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>51</td>\n",
              "      <td>02</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>AK</td>\n",
              "      <td>MULTIPOLYGON (((-161.33379 58.73325, -161.3824...</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>56.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>550043.0</td>\n",
              "      <td>626933.0</td>\n",
              "      <td>710231.0</td>\n",
              "      <td>733391.0</td>\n",
              "      <td>76.357632</td>\n",
              "      <td>0.000076</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b57117c1-21b7-4e25-b776-2214d859ff19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b57117c1-21b7-4e25-b776-2214d859ff19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b57117c1-21b7-4e25-b776-2214d859ff19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cb260459-c486-4b2b-b2c4-4ffe526f68a6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb260459-c486-4b2b-b2c4-4ffe526f68a6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cb260459-c486-4b2b-b2c4-4ffe526f68a6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_c65670ae-1bcb-486f-8f77-a06d1fb65c96\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('usamap')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_c65670ae-1bcb-486f-8f77-a06d1fb65c96 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('usamap');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "usamap",
              "summary": "{\n  \"name\": \"usamap\",\n  \"rows\": 51,\n  \"fields\": [\n    {\n      \"column\": \"STATE_NAME\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DRAWSEQ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 51,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          44,\n          41,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"STATE_FIPS\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"28\",\n          \"48\",\n          \"05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SUB_REGION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"East South Central\",\n          \"Mountain\",\n          \"Middle Atlantic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"STATE_ABBR\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"MS\",\n          \"TX\",\n          \"AR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geometry\",\n      \"properties\": {\n        \"dtype\": \"geometry\",\n        \"num_unique_values\": 51,\n        \"samples\": [\nnn          \"POLYGON ((-94.46169128436209 34.19676535931296, -94.45262428435365 34.508432359603226, -94.44596128434745 34.7356083598148, -94.43932228434126 34.929151359995046, -94.42855228433123 35.40054636043407, -94.46848528436841 35.64108836065809, -94.48593528438467 35.760310360769125, -94.54241728443728 36.10683536109185, -94.55311328444724 36.16452536114558, -94.60745328449784 36.478790361438264, -94.61725728450698 36.489414361448155, -94.0810522840076 36.49102436144966, -93.85752028379942 36.48978636144851, -93.59644928355627 36.489958361448664, -93.32834628330659 36.490261361448944, -93.29732428327769 36.49068136144933, -92.8522752828632 36.489884361448595, -92.7776352827937 36.48998336144869, -92.5230502825566 36.490921361449566, -92.14631928220574 36.49166036145025, -92.12764228218833 36.491435361450044, -91.68856028177942 36.49101836144965, -91.45298928156002 36.49043836144911, -91.41179628152166 36.49110136144973, -91.1339562812629 36.488015361446855, -90.804434280956 36.48926536144802, -90.5817322807486 36.49102236144965, -90.22447328041588 36.49281136145132, -90.15025928034676 36.491873361450445, -90.13737228033476 36.457476361418415, -90.11732228031609 36.45395536141513, -90.12392928032223 36.42262636138595, -90.11692528031571 36.40497636136952, -90.08027228028158 36.39745036136251, -90.05215728025539 36.3826153613487, -90.05029528025366 36.362668361330115, -90.06772928026989 36.325395361295406, -90.04984528025324 36.30053636127225, -90.06618728026845 36.272338361245986, -90.11001228030928 36.2580593612327, -90.13131328032911 36.21213536118992, -90.16140528035714 36.19700636117583, -90.21932128041108 36.17263136115313, -90.23232228042319 36.1612133611425, -90.23493928042562 36.137155361120094, -90.2638012804525 36.118829361103025, -90.28485128047211 36.11597236110036, -90.3153392805005 36.09172336107778, -90.37906228055985 35.98965636098272, -90.2835542804709 35.99122836098418, -89.96329128017263 35.99690836098948, -89.72183627994775 35.99995136099231, -89.71321527993973 35.96639736096106, -89.66427127989415 35.937894360934514, -89.64547927987664 35.91387336091215, -89.64941627988031 35.89436236089397, -89.66472827989458 35.885721360885924, -89.71476327994117 35.91150136090994, -89.73805627996286 35.915087360913276, -89.76299027998608 35.89688736089633, -89.76635527998921 35.884177360884486, -89.75779427998124 35.87149336087268, -89.70151827992883 35.84211336084531, -89.70090827992827 35.827590360831785, -89.73601927996097 35.80711436081272, -89.75987727998319 35.81749736082239, -89.79046428001168 35.805630360811335, -89.79998628002053 35.774300360782156, -89.82712428004581 35.7583473607673, -89.85995528007639 35.74826936075792, -89.90986828012288 35.754914360764104, -89.95112128016129 35.734345360744946, -89.95212128016223 35.712564360724656, -89.92982728014147 35.676344360690926, -89.89348728010762 35.656050360672026, -89.86526528008133 35.673384360688175, -89.85733028007394 35.67114136068608, -89.84928128006645 35.64530136066202, -89.86392228008009 35.6298253606476, -89.87752628009275 35.633414360650946, -89.9571332801669 35.60318336062279, -89.95811828016781 35.57867436059996, -89.92174728013394 35.546140360569666, -89.93126128014279 35.529313360554, -89.94763428015804 35.52698236055183, -89.96236028017177 35.532373360556846, -89.9896742801972 35.56175636058421, -90.03314028023767 35.552495360575584, -90.040991280245 35.54292836056668, -90.04190628024584 35.51252136053836, -89.99965328020649 35.44553736047597, -90.04687328025047 35.41718736044957, -90.06038528026305 35.41349436044613, -90.07402728027576 35.42659036045833, -90.0749352802766 35.47242636050102, -90.08232028028348 35.47828936050647, -90.10205128030186 35.47365136050216, -90.13736828033475 35.44260736047325, -90.17277028036771 35.42380136045573, -90.1679102803632 35.38433936041898, -90.14026028033744 35.38313036041785, -90.13256228033028 35.40768536044072, -90.11233528031144 35.41777436045011, -90.08525028028622 35.418365360450665, -90.0755682802772 35.40661336043972, -90.08722628028805 35.38159336041642, -90.10571328030527 35.366067360401956, -90.09879328029882 35.34567836038297, -90.10643828030595 35.31477236035418, -90.1570832803531 35.30633136034633, -90.169840280365 35.282653360324275, -90.15221628034858 35.26414536030704, -90.10603428030556 35.263935360306846, -90.09019528029081 35.254486360298046, -90.06905328027112 35.21282636025924, -90.07339428027517 35.19192236023977, -90.06252228026504 35.167005360216564, -90.064628280267 35.14747436019838, -90.08301628028413 35.12514036017758, -90.14382328034077 35.136626360188274, -90.16456828036009 35.12970336018183, -90.178439280373 35.108738360162306, -90.16917628036437 35.0779193601336, -90.19580428038917 35.04099036009921, -90.29190628047867 35.048551360106245, -90.30544828049129 35.00078836006176, -90.29960428048584 34.97857636004108, -90.24826428043804 34.94985636001434, -90.2419932804322 34.93900036000422, -90.24293928043308 34.9208273599873, -90.2668042804553 34.896608359964745, -90.29636928048284 34.88278735995187, -90.29954328048579 34.865057359935356, -90.30164928048775 34.85187435992308, -90.32292028050756 34.85036335992167, -90.34152128052489 34.860674359931274, -90.4040302805831 34.84113535991308, -90.42241028060022 34.83236535990491, -90.43364828061068 34.835451359907786, -90.42794128060537 34.872739359942514, -90.43818828061491 34.886277359955116, -90.47062928064513 34.88102035995023, -90.47481828064903 34.85782335992862, -90.45200528062777 34.82531535989835, -90.46680728064156 34.799761359874545, -90.44896928062495 34.7608493598383, -90.45153228062733 34.7412993598201, -90.48602628065946 34.72693335980672, -90.50452028067669 34.72995435980953, -90.51707128068837 34.748470359826776, -90.4988362806714 34.765884359843, -90.50138428067376 34.78993135986539, -90.51614728068752 34.80570035988008, -90.52736328069795 34.80742135988168, -90.54784928071705 34.790434359865856, -90.53338328070357 34.71335235979407, -90.51366828068521 34.702168359783656, -90.47008028064461 34.70435435978569, -90.46632628064111 34.67214035975569, -90.50891428068078 34.638166359724046, -90.53906728070886 34.63699535972296, -90.54765028071685 34.65190635973684, -90.53916628070895 34.686047359768644, -90.56116228072943 34.700386359781994, -90.57940528074643 34.645711359731074, -90.58809528075453 34.627916359714504, -90.57771928074486 34.604845359693016, -90.53072028070109 34.555751359647296, -90.53725128070717 34.54343035963582, -90.56578628073375 34.53261135962575, -90.5804502807474 34.5203243596143, -90.59015528075645 34.49660935959221, -90.57450528074186 34.45404935955258, -90.57922828074626 34.43310335953307, -90.60389428076924 34.40470335950662, -90.65734628081901 34.36601435947059, -90.65791828081954 34.330111359437154, -90.6794402808396 34.318079359425944, -90.68948128084895 34.32024935942796, -90.68124228084127 34.36350435946825, -90.68759028084719 34.37797635948173, -90.75541828091035 34.37226935947641, -90.76196428091644 34.36401835946873, -90.74786328090332 34.3178233594257, -90.7583602809131 34.27908135938962, -90.79263328094501 34.30006135940916, -90.80652628095795 34.29945135940859, -90.82394428097417 34.2774443593881, -90.83146628098118 34.22963935934358, -90.86351828101103 34.21926735933392, -90.92854528107159 34.250298359362816, -90.9338172810765 34.23478035934836, -90.92159428106511 34.20493535932057, -90.82302728097332 34.19065035930727, -90.80761528095897 34.16627835928457, -90.82897028097885 34.14876535926826, -90.84671628099538 34.14765135926722, -90.92902528107204 34.185754359302706, -90.95345528109479 34.15590835927491, -90.94235428108445 34.1260483592471, -90.90641828105099 34.1028553592255, -90.86643828101376 34.101059359223825, -90.88645028103238 34.04081835916772, -90.95057728109211 34.03139535915895, -90.97347328111343 34.01110435914005, -90.9753812811152 33.99471335912479, -90.96123528110203 33.978981359110136, -90.96489728110545 33.9675683590995, -90.98692428112597 33.960923359093314, -91.00036828113848 33.96847935910036, -91.00965328114712 33.99063435912099, -91.03116928116717 33.98580535911649, -91.06980528120314 34.00620135913549, -91.088963281221 33.99457335912466, -91.07581728120876 33.97474935910619, -91.01857228115544 33.93641335907049, -91.0614802811954 33.86718835900602, -91.0549262811893 33.84363335898408, -91.02896228116511 33.816695358958995, -90.99047828112927 33.79900735894252, -90.98414628112337 33.78545035892989, -90.99548328113393 33.77166035891705, -91.01854028115541 33.76408335891, -91.04351228117866 33.76966435891519, -91.06650028120008 33.786635358931, -91.10552628123642 33.7765483589216, -91.13709728126582 33.780195358925, -91.14300228127132 33.7719283589173, -91.13811128126676 33.723334358872044, -91.12905528125833 33.712550358862, -91.10467828123562 33.70834335885809, -91.05632228119059 33.71946735886844, -91.0389332811744 33.70560135885553, -91.03794128117347 33.68332735883479, -91.08387928121626 33.66269735881557, -91.12115828125097 33.67763935882949, -91.16341128129032 33.71842435886747, -91.21179128133538 33.709074358858764, -91.21525528133861 33.690832358841774, -91.20542028132945 33.670054358822426, -91.15451528128204 33.63714235879177, -91.15076128127855 33.616272358772335, -91.16813328129473 33.57735635873609, -91.18791728131315 33.5747923587337, -91.2268432813494 33.59059235874842, -91.22774328135024 33.55646235871663, -91.21359828133707 33.539388358700734, -91.20421328132832 33.53861835870001, -91.18295728130853 33.5234633586859, -91.18051628130625 33.512126358675346, -91.20775328133162 33.47351035863938, -91.2272622813498 33.459567358626394, -91.2329622813551 33.443557358611486, -91.18188128130753 33.447502358615154, -91.17184028129817 33.466758358633086, -91.17429028130046 33.50448135866822, -91.16508828129189 33.511893358675124, -91.12890828125819 33.49330435865781, -91.11906628124903 33.46978735863591, -91.11982128124973 33.452946358620224, -91.1306252812598 33.44323835861118, -91.19894128132341 33.422226358591615, -91.20427428132838 33.41441435858434, -91.18509328131051 33.391946358563416, -91.13774328126642 33.388994358560666, -91.09923728123056 33.4150133585849, -91.08590828121815 33.46297135862956, -91.07386828120694 33.466320358632686, -91.06108828119503 33.46012535862691, -91.06162228119553 33.43191235860064, -91.07879728121152 33.410295358580505, -91.10704928123783 33.39352235856488, -91.1305332812597 33.359518358533215, -91.14185528127025 33.32250135849874, -91.12261328125233 33.268623358448565, -91.10301328123408 33.24932935843059, -91.07643128120932 33.29247635847078, -91.05393928118838 33.29369335847191, -91.0405342811759 33.28204035846106, -91.05464928118903 33.2459003584274, -91.09211028122392 33.22581635840869, -91.08642628121864 33.16172335834901, -91.09596328122751 33.14520535833362, -91.12143828125124 33.131190358320566, -91.17773728130366 33.15040835833847, -91.19561328132032 33.14058535832932, -91.1906462813157 33.113345358303945, -91.14689828127494 33.09077435828293, -91.11789828124795 33.065693358259566, -91.1240932812537 33.047395358242525, -91.15679428128416 33.040555358236155, -91.16078428128787 33.02183335821872, -91.16224128128924 33.01316235821065, -91.25472728137537 33.013601358211055, -91.42764428153642 33.013545358211005, -91.4544702815614 33.01399935821142, -92.06344128212855 33.01015135820784, -92.71723628273745 33.01683935821407, -92.97898928298122 33.01827435821541, -93.23254328321735 33.019375358216436, -93.47907028344696 33.02152835821843, -93.51191528347755 33.02128735821822, -93.80993128375509 33.02272935821956, -94.03893128396837 33.0234223582202, -94.03669128396628 33.27045335845027, -94.03611628396574 33.55603435871623, -94.0616222839895 33.57733535873607, -94.08684628401299 33.58407535874235, -94.09889328402421 33.57312035873215, -94.15536028407679 33.56720635872664, -94.15971028408084 33.5938943587515, -94.20554128412353 33.5852003587434, -94.21108028412868 33.558108358718165, -94.2355642841515 33.56165635872147, -94.22323428414 33.585840358743994, -94.23743328415324 33.592543358750234, -94.27474228418798 33.56185735872166, -94.27227828418569 33.584726358742955, -94.27918228419212 33.58945235874736, -94.29901928421059 33.57997235873853, -94.30258228421391 33.55705435871718, -94.32895028423846 33.57325435873227, -94.37095928427759 33.547802358708566, -94.39546528430041 33.56042135872032, -94.37250828427904 33.57278035873183, -94.37082928427746 33.590160358748015, -94.37931428428537 33.59344435875107, -94.3936192842987 33.57507735873397, -94.40677228431095 33.573604358732595, -94.42867028433133 33.59725835875463, -94.44353228434518 33.596621358754035, -94.45175728435284 33.60446435876134, -94.43653628433866 33.616961358772976, -94.43611728433827 33.63656135879123, -94.47669128437606 33.63208135878706, -94.46858528436852 33.93931135907319, -94.46169128436209 34.19676535931296))\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 881.0167152495005,\n        \"min\": 31.0,\n        \"max\": 4970.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          710.0,\n          3559.0,\n          295.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratio\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"0.20%\",\n          \"6.90%\",\n          \"1.10%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 1990\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5444133.829256475,\n        \"min\": 453589.0,\n        \"max\": 29811427.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2575475.0,\n          16986335.0,\n          2350624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2000\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6164012.421965483,\n        \"min\": 493786.0,\n        \"max\": 33871653.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2844754.0,\n          20851028.0,\n          2673293.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2010\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6823984.2713947,\n        \"min\": 563626.0,\n        \"max\": 37253956.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2967297.0,\n          25145561.0,\n          2915918.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7408022.546174849,\n        \"min\": 576851.0,\n        \"max\": 39538223.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2961279.0,\n          29145505.0,\n          3011524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"percapitaG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64.49082889794252,\n        \"min\": 31.21531379738648,\n        \"max\": 426.1108164818188,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          239.76126531812773,\n          122.11145423625358,\n          97.95704766091852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"percapita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.449082889794251e-05,\n        \"min\": 3.121531379738648e-05,\n        \"max\": 0.0004261108164818188,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          0.00023976126531812775,\n          0.0001221114542362536,\n          9.795704766091853e-05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 67
        }
      ],
      "source": [
        "usamap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "id": "54KprCJWVLFC"
      },
      "outputs": [],
      "source": [
        "#NEW\n",
        "#usamap.corr()[\"Calls\"]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "id": "Ptm7JxTXbWky",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 859
        },
        "outputId": "0de38b8b-70cf-4622-c42e-ef4197a59b7e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1850x1050 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig, ax = plt.subplots(1, 1)\n",
        "fig.set_size_inches(18.5, 10.5)\n",
        "usamap.plot(column='percapitaG', legend=False, ax=ax, vmin=0);\n",
        "scalarmappable = ax.collections[0]\n",
        "\n",
        "# Increase the size of the axis numbers (tick labels)\n",
        "ax.tick_params(axis='both', which='major', labelsize=17)\n",
        "\n",
        "# Create a colorbar using the ScalarMappable object\n",
        "cax = fig.add_axes([0.87, 0.11, 0.03, 0.77])  # Position of the colorbar (adjust as needed)\n",
        "cbar = fig.colorbar(scalarmappable, cax=cax)\n",
        "\n",
        "# Set font size for the colorbar labels\n",
        "cbar.ax.tick_params(labelsize=23)\n",
        "ax.set_axis_off();\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "id": "795ftiK2eKof"
      },
      "outputs": [],
      "source": [
        "stategdps = pd.read_csv(\"StateGDPs.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 71,
      "metadata": {
        "id": "Hmdk7c6xgFHX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5fdc8105-53ab-4766-b3e8-426349729d0c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-71-b892ea5069c3>:1: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n",
            "  stategdps = stategdps.applymap(cleannumber)\n"
          ]
        }
      ],
      "source": [
        "stategdps = stategdps.applymap(cleannumber)\n",
        "stategdps['GDP'] = stategdps['GDP'].astype(float)\n",
        "stategdps['PerCapitaGDP'] = stategdps['PerCapitaGDP'].astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "id": "s_TN6XpagrTA"
      },
      "outputs": [],
      "source": [
        "usamap = usamap.merge(stategdps, left_on=\"STATE_NAME\", right_on=\"State\", how=\"left\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 73,
      "metadata": {
        "id": "amFhj1HGg2RB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 824
        },
        "outputId": "090f1e72-5a72-4dc6-ee3f-0afbe0781989"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 5550x3150 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Set the figure size and resolution (dpi)\n",
        "fig, ax = plt.subplots(1, 1, figsize=(18.5, 10.5), dpi=300)  # Increase dpi for higher resolution\n",
        "usamap.plot(column='PerCapitaGDP', legend=False, ax=ax, vmin=0)\n",
        "\n",
        "scalarmappable = ax.collections[0]\n",
        "\n",
        "# Increase the size of the axis numbers (tick labels)\n",
        "ax.tick_params(axis='both', which='major', labelsize=17)\n",
        "\n",
        "# Create a colorbar using the ScalarMappable object\n",
        "cax = fig.add_axes([0.87, 0.11, 0.03, 0.77])  # Position of the colorbar (adjust as needed)\n",
        "cbar = fig.colorbar(scalarmappable, cax=cax)\n",
        "\n",
        "# Set font size for the colorbar labels\n",
        "cbar.ax.tick_params(labelsize=23)\n",
        "ax.set_axis_off()\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 74,
      "metadata": {
        "id": "o9iJ5Pr5hx3n"
      },
      "outputs": [],
      "source": [
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as smf"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 75,
      "metadata": {
        "id": "W621AAvjh9vD"
      },
      "outputs": [],
      "source": [
        "usamap[\"Pop\"] = usamap[\"Pop. 2020\"]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#usamap['GDP']=usamap['GDP']*1000000000\n",
        "#usamap['NewGDP']=usamap['GDP']/usamap['Pop']"
      ],
      "metadata": {
        "id": "v8uEkFLK5P1w"
      },
      "execution_count": 76,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "id": "x_f2T2_W0zM0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 640
        },
        "outputId": "38dd475e-577b-48d2-86ac-cb4d7bfc620c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([  0.,  50., 100., 150., 200., 250., 300., 350., 400., 450.]),\n",
              " [Text(0, 0.0, '0'),\n",
              "  Text(0, 50.0, '50'),\n",
              "  Text(0, 100.0, '100'),\n",
              "  Text(0, 150.0, '150'),\n",
              "  Text(0, 200.0, '200'),\n",
              "  Text(0, 250.0, '250'),\n",
              "  Text(0, 300.0, '300'),\n",
              "  Text(0, 350.0, '350'),\n",
              "  Text(0, 400.0, '400'),\n",
              "  Text(0, 450.0, '450')])"
            ]
          },
          "metadata": {},
          "execution_count": 77
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "from matplotlib.pyplot import figure\n",
        "plt.scatter(usamap[\"PerCapitaGDP\"],usamap[\"percapitaG\"])\n",
        "#plt.scatter(usamap[\"NewGDP\"],usamap[\"percapitaG\"])\n",
        "\n",
        "plt.xlabel(\"GDP per Capita\")\n",
        "plt.ylabel(\"Trafficking Calls per million individuals\")\n",
        "#plt.title(\"US Trafficking Calls per million individuals vs. GDP per Capita\");\n",
        "#plt.xlim([0,225000])\n",
        "#plt.xticks([0, 25000, 50000, 75000, 100000, 125000, 150000, 175000, 200000, 225000], fontsize=8)\n",
        "plt.yticks(fontsize=8)\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from scipy.stats import chi2\n",
        "from matplotlib import patches\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "#SEPT 4 'TEXTBOOK' MAHALANOBIS\n",
        "#inspired by: https://towardsdatascience.com/multivariate-outlier-detection-in-python-e946cfc843b3\n",
        "new_df=usamap[['PerCapitaGDP', 'percapita']]\n",
        "new_df=new_df.to_numpy()\n",
        "covariance  = np.cov(new_df , rowvar=False)\n",
        "\n",
        "# Covariance matrix power of -1\n",
        "covariance_pm1 = np.linalg.matrix_power(covariance, -1)\n",
        "\n",
        "# Center point\n",
        "centerpoint = np.mean(new_df , axis=0)\n",
        "distances = []\n",
        "for i, val in enumerate(new_df):\n",
        "      p1 = val\n",
        "      p2 = centerpoint\n",
        "      distance = (p1-p2).T.dot(covariance_pm1).dot(p1-p2)\n",
        "      distances.append(distance)\n",
        "distances = np.array(distances)\n",
        "\n",
        "# Cutoff (threshold) value from Chi-Sqaure Distribution for detecting outliers\n",
        "cutoff = chi2.ppf(0.95, new_df.shape[1])\n",
        "\n",
        "outlierIndexes = np.where(distances > cutoff )\n",
        "\n",
        "print('--- Index of Outliers ----')\n",
        "print(outlierIndexes)\n",
        "\n",
        "print('--- Observations found as outlier -----')\n",
        "print(new_df[ distances > cutoff , :])\n",
        "pearson = covariance[0, 1]/np.sqrt(covariance[0, 0] * covariance[1, 1])\n",
        "ell_radius_x = np.sqrt(1 + pearson)\n",
        "ell_radius_y = np.sqrt(1 - pearson)\n",
        "lambda_, v = np.linalg.eig(covariance)\n",
        "lambda_ = np.sqrt(lambda_)\n",
        "\n",
        "ellipse = patches.Ellipse(xy=(centerpoint[0], centerpoint[1]),\n",
        "                  width=lambda_[0]*np.sqrt(cutoff)*2, height=lambda_[1]*np.sqrt(cutoff)*2,\n",
        "                  angle=np.rad2deg(np.arccos(v[0, 0])), edgecolor='#fab1a0')\n",
        "ellipse.set_facecolor('#0984e3')\n",
        "ellipse.set_alpha(0.5)\n",
        "fig = plt.figure()\n",
        "ax = plt.subplot()\n",
        "ax.add_artist(ellipse)\n",
        "plt.scatter(new_df[: , 0], new_df[ : , 1])\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 534
        },
        "id": "wy6IcpPu2H8m",
        "outputId": "22b2a8af-a5ba-4e16-db4c-fd29ee46d50f"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--- Index of Outliers ----\n",
            "(array([ 2, 27, 43]),)\n",
            "--- Observations found as outlier -----\n",
            "[[4.74210000e+04 4.26110816e-04]\n",
            " [2.09471000e+05 2.68292860e-04]\n",
            " [3.85020000e+04 2.39761265e-04]]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from scipy.stats import chi2\n",
        "from matplotlib import patches\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "new_df = usamap[['STATE_NAME', 'PerCapitaGDP', 'percapita']]\n",
        "\n",
        "data = new_df[['PerCapitaGDP', 'percapita']].to_numpy()\n",
        "covariance = np.cov(data, rowvar=False)\n",
        "\n",
        "covariance_pm1 = np.linalg.matrix_power(covariance, -1)\n",
        "\n",
        "centerpoint = np.mean(data, axis=0)\n",
        "distances = []\n",
        "for val in data:\n",
        "    p1 = val\n",
        "    p2 = centerpoint\n",
        "    distance = (p1 - p2).T.dot(covariance_pm1).dot(p1 - p2)\n",
        "    distances.append(distance)\n",
        "\n",
        "distances = np.array(distances)\n",
        "\n",
        "cutoff = chi2.ppf(0.95, data.shape[1])\n",
        "print(\"the cutoff is\")\n",
        "print(cutoff)\n",
        "outlier_indexes = np.where(distances > cutoff)[0]\n",
        "\n",
        "print('--- Index of Outliers ----')\n",
        "print(outlier_indexes)\n",
        "\n",
        "outlier_countries = new_df['STATE_NAME'].to_numpy()[outlier_indexes]\n",
        "\n",
        "print('--- Observations found as outliers -----')\n",
        "for idx in outlier_indexes:\n",
        "    print(f\"STATE_NAME: {new_df['STATE_NAME'].iloc[idx]}, Values: {data[idx]}\")\n",
        "\n",
        "print('--- Distances exceeding the cutoff -----')\n",
        "for idx in outlier_indexes:\n",
        "    print(f\"STATE_NAME: {new_df['STATE_NAME'].iloc[idx]}, Distance: {distances[idx]}\")\n",
        "\n",
        "pearson = covariance[0, 1] / np.sqrt(covariance[0, 0] * covariance[1, 1])\n",
        "lambda_, v = np.linalg.eig(covariance)\n",
        "lambda_ = np.sqrt(lambda_)\n",
        "\n",
        "ellipse = patches.Ellipse(xy=(centerpoint[0], centerpoint[1]),\n",
        "                           width=lambda_[0] * np.sqrt(cutoff) * 2,\n",
        "                           height=lambda_[1] * np.sqrt(cutoff) * 2,\n",
        "                           angle=np.rad2deg(np.arccos(v[0, 0])), edgecolor='#fab1a0')\n",
        "ellipse.set_facecolor('#0984e3')\n",
        "ellipse.set_alpha(0.5)\n",
        "\n",
        "fig = plt.figure()\n",
        "ax = plt.subplot()\n",
        "ax.add_artist(ellipse)\n",
        "plt.scatter(data[:, 0], data[:, 1])\n",
        "\n",
        "for idx in outlier_indexes:\n",
        "    plt.annotate(new_df['STATE_NAME'].iloc[idx], (data[idx, 0], data[idx, 1]), fontsize=8, ha='right')\n",
        "\n",
        "plt.xlabel('Per Capita GDP')\n",
        "plt.ylabel('Per Capita')\n",
        "plt.title('Mahalanobis Distance Outliers')\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 680
        },
        "id": "Qllx0Pef99TB",
        "outputId": "660d5ef6-9825-4ff2-b7bb-7dd9ecf4dd53"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "the cutoff is\n",
            "5.991464547107979\n",
            "--- Index of Outliers ----\n",
            "[ 2 27 43]\n",
            "--- Observations found as outliers -----\n",
            "STATE_NAME: Montana, Values: [4.74210000e+04 4.26110816e-04]\n",
            "STATE_NAME: District of Columbia, Values: [2.0947100e+05 2.6829286e-04]\n",
            "STATE_NAME: Mississippi, Values: [3.85020000e+04 2.39761265e-04]\n",
            "--- Distances exceeding the cutoff -----\n",
            "STATE_NAME: Montana, Distance: 28.95081594812892\n",
            "STATE_NAME: District of Columbia, Distance: 40.49761625325204\n",
            "STATE_NAME: Mississippi, Distance: 7.053909322862236\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from scipy.stats import chi2\n",
        "from matplotlib import patches\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "new_df = world[['Country', 'gdpG', 'pcG']]\n",
        "covariance = new_df[['gdpG', 'pcG']].cov()\n",
        "covariance_inv = np.linalg.inv(covariance)\n",
        "\n",
        "centerpoint = new_df[['gdpG', 'pcG']].mean().values\n",
        "distances = []\n",
        "\n",
        "for idx, row in new_df.iterrows():\n",
        "    p1 = row[['gdpG', 'pcG']].values\n",
        "    distance = (p1 - centerpoint).dot(covariance_inv).dot(p1 - centerpoint)\n",
        "    distances.append(distance)\n",
        "\n",
        "new_df['Mahalanobis_Distance'] = distances\n",
        "\n",
        "cutoff = chi2.ppf(0.95, df=2)\n",
        "print(\"The cutoff is:\", cutoff)\n",
        "\n",
        "outliers_df = new_df[new_df['Mahalanobis_Distance'] > cutoff]\n",
        "\n",
        "sorted_outliers = outliers_df.sort_values(by='gdpG', ascending=False)\n",
        "\n",
        "print('--- Observations found as outliers (sorted by GDP) -----')\n",
        "for idx, row in sorted_outliers.iterrows():\n",
        "    print(f\"Country: {row['Country']}, GDP: {row['gdpG']}, Values: {[row['gdpG'], row['pcG']]}, Distance: {row['Mahalanobis_Distance']}\")\n",
        "\n",
        "lambda_, v = np.linalg.eig(covariance.values)\n",
        "lambda_ = np.sqrt(lambda_)\n",
        "\n",
        "ellipse = patches.Ellipse(xy=(centerpoint[0], centerpoint[1]),\n",
        "                           width=lambda_[0] * np.sqrt(cutoff) * 2,\n",
        "                           height=lambda_[1] * np.sqrt(cutoff) * 2,\n",
        "                           angle=np.rad2deg(np.arccos(v[0, 0])), edgecolor='#fab1a0')\n",
        "ellipse.set_facecolor('#0984e3')\n",
        "ellipse.set_alpha(0.5)\n",
        "\n",
        "fig = plt.figure()\n",
        "ax = plt.subplot()\n",
        "ax.add_artist(ellipse)\n",
        "plt.scatter(new_df['gdpG'], new_df['pcG'])\n",
        "\n",
        "for idx, row in sorted_outliers.iterrows():\n",
        "    plt.annotate(row['Country'], (row['gdpG'], row['pcG']), fontsize=8, ha='right')\n",
        "\n",
        "plt.xlabel('Per Capita GDP')\n",
        "plt.ylabel('Per Capita')\n",
        "plt.title('Mahalanobis Distance Outliers')\n",
        "plt.grid()\n",
        "plt.xlim(left=0)\n",
        "plt.ylim(bottom=0)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 819
        },
        "id": "XSu4YqNL_DqJ",
        "outputId": "09344123-4aeb-4840-f917-5e9d6f48a9d4"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-80-449732640111>:19: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  new_df['Mahalanobis_Distance'] = distances\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The cutoff is: 5.991464547107979\n",
            "--- Observations found as outliers (sorted by GDP) -----\n",
            "Country: 0, GDP: 114703.11148966923, Values: [114703.11148966923, 0.0], Distance: 21.225530449503005\n",
            "Country: 0, GDP: 114285.71428571429, Values: [114285.71428571429, 0.0], Distance: 21.047336709126142\n",
            "Country: 0, GDP: 82989.99411418481, Values: [82989.99411418481, 0.0], Distance: 9.831803393825902\n",
            "Country: 0, GDP: 81993.67637756634, Values: [81993.67637756634, 0.0], Distance: 9.544288241362391\n",
            "Country: 0, GDP: 78660.81250743709, Values: [78660.81250743709, 0.0], Distance: 8.613683268367366\n",
            "Country: 0, GDP: 75419.56687265422, Values: [75419.56687265422, 0.0], Distance: 7.7547151005494905\n",
            "Country: Belarus, GDP: 6663.247016749806, Values: [6663.247016749806, 154.539162737872], Distance: 42.933177364041434\n",
            "Country: Philippines, GDP: 3485.079513449436, Values: [3485.079513449436, 105.11797839767736], Distance: 19.141927053122192\n",
            "Country: Ukraine, GDP: 3464.6944456992433, Values: [3464.6944456992433, 174.85575976922917], Distance: 55.353203476362815\n",
            "Country: Cambodia, GDP: 1643.0977460282454, Values: [1643.0977460282454, 120.03730072685951], Distance: 25.29538540744019\n",
            "Country: Kyrgyzstan, GDP: 1309.2970310830274, Values: [1309.2970310830274, 67.67953661974012], Distance: 7.577323401754791\n",
            "Country: Guinea-Bissau, GDP: 697.0610987848544, Values: [697.0610987848544, 75.48458500657496], Distance: 9.558282389795586\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 81,
      "metadata": {
        "id": "HM29TpQ6N3lb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 303
        },
        "outputId": "7b09216c-62a4-4a82-bafe-29edc76a5ffc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "27    District of Columbia\n",
              "16                New York\n",
              "14           Massachusetts\n",
              "1               Washington\n",
              "18             Connecticut\n",
              "28                Delaware\n",
              "24              California\n",
              "Name: STATE_NAME, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STATE_NAME</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>District of Columbia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>New York</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Massachusetts</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Washington</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Connecticut</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Delaware</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>California</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ],
      "source": [
        "usamap.sort_values(by=\"PerCapitaGDP\",ascending=False)[\"STATE_NAME\"][:7]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 82,
      "metadata": {
        "id": "Yh9P09I1Oh4u",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "f3d8a1e0-ff3b-4746-e110-c075a0515f20"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2                  Montana\n",
              "27    District of Columbia\n",
              "43             Mississippi\n",
              "41              New Mexico\n",
              "45          South Carolina\n",
              "Name: STATE_NAME, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STATE_NAME</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Montana</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>District of Columbia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Mississippi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>New Mexico</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Carolina</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ],
      "source": [
        "usamap.sort_values(by=\"percapita\",ascending=False)[\"STATE_NAME\"][:5]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 83,
      "metadata": {
        "id": "98R1gJd-GJIh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 536
        },
        "outputId": "d09a046f-1074-4526-a5cb-4cb0eed4ed31"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n",
            "/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py:1459: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  result = super().__getitem__(key)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.0, 446.0)"
            ]
          },
          "metadata": {},
          "execution_count": 83
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "nodc=usamap[usamap[\"STATE_NAME\"]!=\"Montana\"][usamap[\"STATE_NAME\"]!=\"District of Columbia\"][usamap[\"STATE_NAME\"]!=\"Mississippi\"]\n",
        "#nodc=usamap[usamap[\"STATE_NAME\"]!=\"District of Columbia\"][usamap[\"STATE_NAME\"]!=\"Texas\"]\n",
        "plt.scatter(nodc[\"PerCapitaGDP\"],nodc[\"percapitaG\"])\n",
        "plt.xlabel(\"GDP per Capita\")\n",
        "plt.ylabel(\"Trafficking Reports per million individuals\")\n",
        "plt.xlim([0,218019.45])\n",
        "plt.ylim([0,446])\n",
        "#plt.title(\"World Trafficking Reports Per Capita vs. \\n GDP Per Capita with Omitted Data\");\n",
        "#plt.ylim([-215.95000000000002,5216.95])\n",
        "#plt.xlim([0,218019.45])\n",
        "#plt.ylim([1.1470538663164863e-07, 4.458555916160404e-06])\n",
        "\n",
        "#X-axis limits (xlim): (29953.55, 218019.45)\n",
        "#Y-axis limits (ylim): (-215.95000000000002, 5216.95)\n",
        "#plt.scatter(usamap[\"PerCapitaGDP\"],usamap[\"Calls\"])\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 84,
      "metadata": {
        "id": "lkEgLwpw2W6j",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bd24830c-28d9-45ee-e46c-ccff2cb2748e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Spearman's Rank Correlation Coefficient: 0.036365610073816765\n",
            "P-value: 0.8061558933984263\n"
          ]
        }
      ],
      "source": [
        "from scipy.stats import spearmanr\n",
        "\n",
        "\n",
        "spearman_corr, spearman_p_value = spearmanr(nodc[\"PerCapitaGDP\"], nodc[\"percapita\"])\n",
        "\n",
        "print(\"Spearman's Rank Correlation Coefficient:\", spearman_corr)\n",
        "print(\"P-value:\", spearman_p_value)\n",
        "\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 85,
      "metadata": {
        "id": "aJpbWYi-C1ES",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f26fd353-8587-422f-c470-5373f7cbd369"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pearson's Correlation Coefficient: -0.05740598331005875\n",
            "P-value: 0.6983443396003239\n"
          ]
        }
      ],
      "source": [
        "from scipy.stats import pearsonr\n",
        "\n",
        "pearson_corr, pearson_p_value = pearsonr(nodc[\"PerCapitaGDP\"], nodc[\"percapita\"])\n",
        "\n",
        "\n",
        "print(\"Pearson's Correlation Coefficient:\", pearson_corr)\n",
        "print(\"P-value:\", pearson_p_value)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 86,
      "metadata": {
        "id": "CM_hcY6kMBoH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "073284ab-05bc-4596-9629-eb9fed3a8896"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pearson's Correlation Coefficient: -0.24682388121529583\n",
            "P-value: 0.08398602771912136\n"
          ]
        }
      ],
      "source": [
        "nodc2=usamap[usamap[\"STATE_NAME\"]!=\"District of Columbia\"]\n",
        "from scipy.stats import pearsonr\n",
        "\n",
        "pearson_corr, pearson_p_value = pearsonr(nodc2[\"PerCapitaGDP\"], nodc2[\"percapita\"])\n",
        "\n",
        "print(\"Pearson's Correlation Coefficient:\", pearson_corr)\n",
        "print(\"P-value:\", pearson_p_value)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 88,
      "metadata": {
        "id": "UWDtW-J51JXz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "11d43f34-23f4-4c97-8461-33f68adb40fd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "27    District of Columbia\n",
              "16                New York\n",
              "14           Massachusetts\n",
              "1               Washington\n",
              "18             Connecticut\n",
              "28                Delaware\n",
              "24              California\n",
              "4             North Dakota\n",
              "15                Nebraska\n",
              "50                  Alaska\n",
              "26                Illinois\n",
              "20              New Jersey\n",
              "30                Maryland\n",
              "31                Colorado\n",
              "10               Minnesota\n",
              "34                Virginia\n",
              "12           New Hampshire\n",
              "6                  Wyoming\n",
              "5             South Dakota\n",
              "13                    Iowa\n",
              "40                   Texas\n",
              "23                    Utah\n",
              "33                  Kansas\n",
              "17            Pennsylvania\n",
              "44                 Georgia\n",
              "11                  Oregon\n",
              "25                    Ohio\n",
              "7                Wisconsin\n",
              "0                   Hawaii\n",
              "38          North Carolina\n",
              "21                 Indiana\n",
              "19            Rhode Island\n",
              "22                  Nevada\n",
              "35                Missouri\n",
              "39               Tennessee\n",
              "36                 Arizona\n",
              "9                  Vermont\n",
              "48                 Florida\n",
              "49                Michigan\n",
              "3                    Maine\n",
              "47               Louisiana\n",
              "45          South Carolina\n",
              "37                Oklahoma\n",
              "2                  Montana\n",
              "32                Kentucky\n",
              "41              New Mexico\n",
              "8                    Idaho\n",
              "42                 Alabama\n",
              "46                Arkansas\n",
              "29           West Virginia\n",
              "43             Mississippi\n",
              "Name: STATE_NAME, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STATE_NAME</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>District of Columbia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>New York</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Massachusetts</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Washington</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Connecticut</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Delaware</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>California</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>North Dakota</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nebraska</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Alaska</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Illinois</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>New Jersey</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Maryland</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Colorado</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Minnesota</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Virginia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>New Hampshire</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Wyoming</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>South Dakota</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Iowa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Texas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Utah</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Kansas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Pennsylvania</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Georgia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Oregon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Ohio</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Wisconsin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Hawaii</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>North Carolina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Indiana</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Rhode Island</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Nevada</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Missouri</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Tennessee</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Arizona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Vermont</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Florida</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Michigan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Maine</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Louisiana</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Carolina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Oklahoma</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Montana</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Kentucky</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>New Mexico</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Idaho</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Alabama</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Arkansas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>West Virginia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Mississippi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ],
      "source": [
        "usamap.sort_values(by=\"PerCapitaGDP\", ascending=False)[\"STATE_NAME\"]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 89,
      "metadata": {
        "id": "lQ4fAUPvn68y"
      },
      "outputs": [],
      "source": [
        "lmusa = smf.ols(formula='percapita ~ Pop + PerCapitaGDP', data=usamap)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lmnodc = smf.ols(formula='percapita ~ Pop + PerCapitaGDP', data=nodc)"
      ],
      "metadata": {
        "id": "zzAs7C8_KkKX"
      },
      "execution_count": 90,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 91,
      "metadata": {
        "id": "9ZuJIx_B0wC3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ef07dd86-5251-4421-bcf3-39af707dfec7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              STATE_NAME  DRAWSEQ STATE_FIPS          SUB_REGION STATE_ABBR  \\\n",
              "0                 Hawaii        1         15             Pacific         HI   \n",
              "1             Washington        2         53             Pacific         WA   \n",
              "2                Montana        3         30            Mountain         MT   \n",
              "3                  Maine        4         23         New England         ME   \n",
              "4           North Dakota        5         38  West North Central         ND   \n",
              "5           South Dakota        6         46  West North Central         SD   \n",
              "6                Wyoming        7         56            Mountain         WY   \n",
              "7              Wisconsin        8         55  East North Central         WI   \n",
              "8                  Idaho        9         16            Mountain         ID   \n",
              "9                Vermont       10         50         New England         VT   \n",
              "10             Minnesota       11         27  West North Central         MN   \n",
              "11                Oregon       12         41             Pacific         OR   \n",
              "12         New Hampshire       13         33         New England         NH   \n",
              "13                  Iowa       14         19  West North Central         IA   \n",
              "14         Massachusetts       15         25         New England         MA   \n",
              "15              Nebraska       16         31  West North Central         NE   \n",
              "16              New York       17         36     Middle Atlantic         NY   \n",
              "17          Pennsylvania       18         42     Middle Atlantic         PA   \n",
              "18           Connecticut       19         09         New England         CT   \n",
              "19          Rhode Island       20         44         New England         RI   \n",
              "20            New Jersey       21         34     Middle Atlantic         NJ   \n",
              "21               Indiana       22         18  East North Central         IN   \n",
              "22                Nevada       23         32            Mountain         NV   \n",
              "23                  Utah       24         49            Mountain         UT   \n",
              "24            California       25         06             Pacific         CA   \n",
              "25                  Ohio       26         39  East North Central         OH   \n",
              "26              Illinois       27         17  East North Central         IL   \n",
              "27  District of Columbia       28         11      South Atlantic         DC   \n",
              "28              Delaware       29         10      South Atlantic         DE   \n",
              "29         West Virginia       30         54      South Atlantic         WV   \n",
              "30              Maryland       31         24      South Atlantic         MD   \n",
              "31              Colorado       32         08            Mountain         CO   \n",
              "32              Kentucky       33         21  East South Central         KY   \n",
              "33                Kansas       34         20  West North Central         KS   \n",
              "34              Virginia       35         51      South Atlantic         VA   \n",
              "35              Missouri       36         29  West North Central         MO   \n",
              "36               Arizona       37         04            Mountain         AZ   \n",
              "37              Oklahoma       38         40  West South Central         OK   \n",
              "38        North Carolina       39         37      South Atlantic         NC   \n",
              "39             Tennessee       40         47  East South Central         TN   \n",
              "40                 Texas       41         48  West South Central         TX   \n",
              "41            New Mexico       42         35            Mountain         NM   \n",
              "42               Alabama       43         01  East South Central         AL   \n",
              "43           Mississippi       44         28  East South Central         MS   \n",
              "44               Georgia       45         13      South Atlantic         GA   \n",
              "45        South Carolina       46         45      South Atlantic         SC   \n",
              "46              Arkansas       47         05  West South Central         AR   \n",
              "47             Louisiana       48         22  West South Central         LA   \n",
              "48               Florida       49         12      South Atlantic         FL   \n",
              "49              Michigan       50         26  East North Central         MI   \n",
              "50                Alaska       51         02             Pacific         AK   \n",
              "\n",
              "                                             geometry               State_x  \\\n",
              "0   MULTIPOLYGON (((-160.07380 22.00418, -160.0497...                Hawaii   \n",
              "1   MULTIPOLYGON (((-122.40202 48.22522, -122.4628...            Washington   \n",
              "2   POLYGON ((-111.47543 44.70216, -111.48080 44.6...               Montana   \n",
              "3   MULTIPOLYGON (((-69.77728 44.07415, -69.85993 ...                 Maine   \n",
              "4   POLYGON ((-98.73044 45.93827, -99.00683 45.939...          North Dakota   \n",
              "5   POLYGON ((-102.78838 42.99530, -103.00588 42.9...          South Dakota   \n",
              "6   POLYGON ((-104.05362 41.69822, -104.05550 41.5...               Wyoming   \n",
              "7   MULTIPOLYGON (((-87.74856 44.96162, -87.83999 ...             Wisconsin   \n",
              "8   POLYGON ((-117.02630 43.67903, -117.02379 43.7...                 Idaho   \n",
              "9   POLYGON ((-73.25806 42.74606, -73.26928 42.747...               Vermont   \n",
              "10  POLYGON ((-91.73037 43.49957, -92.07753 43.499...             Minnesota   \n",
              "11  POLYGON ((-121.44151 41.99433, -122.28471 42.0...                Oregon   \n",
              "12  POLYGON ((-72.27992 42.72047, -72.45577 42.725...         New Hampshire   \n",
              "13  POLYGON ((-91.12013 40.70544, -91.12930 40.682...                  Iowa   \n",
              "14  MULTIPOLYGON (((-71.31933 41.77220, -71.33980 ...         Massachusetts   \n",
              "15  POLYGON ((-101.40739 40.00100, -102.05154 39.9...              Nebraska   \n",
              "16  MULTIPOLYGON (((-79.76324 42.26733, -79.44402 ...              New York   \n",
              "17  POLYGON ((-77.47579 39.71962, -78.09595 39.725...          Pennsylvania   \n",
              "18  POLYGON ((-73.53039 41.52275, -73.51715 41.665...           Connecticut   \n",
              "19  MULTIPOLYGON (((-71.79019 41.60131, -71.79261 ...          Rhode Island   \n",
              "20  POLYGON ((-75.48928 39.71486, -75.47597 39.720...            New Jersey   \n",
              "21  POLYGON ((-86.34161 38.17729, -86.36435 38.193...               Indiana   \n",
              "22  POLYGON ((-119.15245 38.41180, -119.31883 38.5...                Nevada   \n",
              "23  POLYGON ((-114.04727 38.13765, -114.04509 38.5...                  Utah   \n",
              "24  MULTIPOLYGON (((-121.66522 38.16929, -121.7823...            California   \n",
              "25  POLYGON ((-83.27276 38.60926, -83.29004 38.596...                  Ohio   \n",
              "26  POLYGON ((-88.07159 37.51104, -88.08791 37.476...              Illinois   \n",
              "27  POLYGON ((-77.00793 38.96667, -76.91090 38.890...  District of Columbia   \n",
              "28  POLYGON ((-75.70707 38.55759, -75.71071 38.649...              Delaware   \n",
              "29  POLYGON ((-79.23166 38.48050, -79.27236 38.437...         West Virginia   \n",
              "30  MULTIPOLYGON (((-75.71071 38.64967, -75.70707 ...              Maryland   \n",
              "31  POLYGON ((-102.04446 37.64147, -102.04201 37.3...              Colorado   \n",
              "32  MULTIPOLYGON (((-86.51067 36.65507, -86.77054 ...              Kentucky   \n",
              "33  POLYGON ((-95.07193 37.00148, -95.40662 37.000...                Kansas   \n",
              "34  MULTIPOLYGON (((-79.14406 36.54620, -79.21680 ...              Virginia   \n",
              "35  POLYGON ((-89.10503 36.95392, -89.12965 36.866...              Missouri   \n",
              "36  POLYGON ((-114.52063 33.02771, -114.55909 33.0...               Arizona   \n",
              "37  POLYGON ((-94.43932 34.92915, -94.44596 34.735...              Oklahoma   \n",
              "38  MULTIPOLYGON (((-83.98845 34.98915, -84.11815 ...        North Carolina   \n",
              "39  POLYGON ((-83.95461 35.45554, -84.01256 35.407...             Tennessee   \n",
              "40  MULTIPOLYGON (((-105.99889 31.39394, -106.2132...                 Texas   \n",
              "41  POLYGON ((-109.04950 32.44204, -109.05135 32.7...            New Mexico   \n",
              "42  POLYGON ((-85.07007 31.98070, -85.11515 31.907...               Alabama   \n",
              "43  POLYGON ((-88.45080 31.43562, -88.43456 31.120...           Mississippi   \n",
              "44  MULTIPOLYGON (((-85.13017 31.77885, -85.13156 ...               Georgia   \n",
              "45  MULTIPOLYGON (((-81.75959 33.19538, -81.76988 ...        South Carolina   \n",
              "46  POLYGON ((-94.46169 34.19677, -94.45262 34.508...              Arkansas   \n",
              "47  MULTIPOLYGON (((-93.70752 30.23958, -93.69938 ...             Louisiana   \n",
              "48  MULTIPOLYGON (((-80.78566 28.78519, -80.76242 ...               Florida   \n",
              "49  MULTIPOLYGON (((-88.49753 48.17380, -88.62533 ...              Michigan   \n",
              "50  MULTIPOLYGON (((-161.33379 58.73325, -161.3824...                Alaska   \n",
              "\n",
              "     Calls  Ratio                  Name   Pop. 1990   Pop. 2000   Pop. 2010  \\\n",
              "0    108.0  0.20%                Hawaii   1108229.0   1211497.0   1360301.0   \n",
              "1    815.0  1.60%            Washington   4866669.0   5894281.0   6724540.0   \n",
              "2    462.0  0.90%               Montana    799065.0    902200.0    989415.0   \n",
              "3     87.0  0.20%                 Maine   1227928.0   1274779.0   1328361.0   \n",
              "4     70.0  0.10%          North Dakota    638800.0    642237.0    672591.0   \n",
              "5     58.0  0.10%          South Dakota    696004.0    754858.0    814180.0   \n",
              "6     47.0  0.10%               Wyoming    453589.0    493786.0    563626.0   \n",
              "7    337.0  0.70%             Wisconsin   4891954.0   5363757.0   5686986.0   \n",
              "8     97.0  0.20%                 Idaho   1006734.0   1293957.0   1567582.0   \n",
              "9     31.0  0.10%               Vermont    562758.0    608613.0    625741.0   \n",
              "10   356.0  0.70%             Minnesota   4375665.0   4919631.0   5303925.0   \n",
              "11   539.0  1.00%                Oregon   2842337.0   3421524.0   3831074.0   \n",
              "12    43.0  0.10%         New Hampshire   1109252.0   1235807.0   1316470.0   \n",
              "13   285.0  0.50%                  Iowa   2776831.0   2926538.0   3046355.0   \n",
              "14   232.0  0.40%         Massachusetts   6016425.0   6349364.0   6547629.0   \n",
              "15   212.0  0.40%              Nebraska   1578417.0   1711230.0   1826341.0   \n",
              "16  1739.0  3.40%              New York  17990778.0  18977026.0  19378102.0   \n",
              "17   909.0  1.80%          Pennsylvania  11882842.0  12280548.0  12702379.0   \n",
              "18   188.0  0.40%           Connecticut   3287116.0   3405650.0   3574097.0   \n",
              "19    86.0  0.20%          Rhode Island   1003464.0   1048259.0   1052567.0   \n",
              "20   615.0  1.20%            New Jersey   7747750.0   8414764.0   8791894.0   \n",
              "21   514.0  1.00%               Indiana   5544156.0   6080827.0   6483802.0   \n",
              "22   417.0  0.80%                Nevada   1201675.0   1998250.0   2700551.0   \n",
              "23   182.0  0.40%                  Utah   1722850.0   2233183.0   2763885.0   \n",
              "24  4970.0  9.60%            California  29811427.0  33871653.0  37253956.0   \n",
              "25  1087.0  2.10%                  Ohio  10847115.0  11353336.0  11536504.0   \n",
              "26   933.0  1.80%              Illinois  11430602.0  12419927.0  12830632.0   \n",
              "27   185.0  0.40%  District of Columbia    606900.0    572086.0    601723.0   \n",
              "28   127.0  0.20%              Delaware    666168.0    783559.0    897934.0   \n",
              "29    96.0  0.20%         West Virginia   1793477.0   1808193.0   1852994.0   \n",
              "30   529.0  1.00%              Maryland   4780753.0   5296647.0   5773552.0   \n",
              "31   625.0  1.20%              Colorado   3294473.0   4302086.0   5029196.0   \n",
              "32   305.0  0.60%              Kentucky   3686892.0   4042193.0   4339367.0   \n",
              "33   390.0  0.70%                Kansas   2477588.0   2688925.0   2853118.0   \n",
              "34   578.0  1.10%              Virginia   6189197.0   7079057.0   8001024.0   \n",
              "35   750.0  1.50%              Missouri   5116901.0   5596564.0   5988927.0   \n",
              "36   608.0  1.20%               Arizona   3665339.0   5130247.0   6392017.0   \n",
              "37   384.0  0.70%              Oklahoma   3145576.0   3450451.0   3751351.0   \n",
              "38  1103.0  2.10%        North Carolina   6632448.0   8046346.0   9535483.0   \n",
              "39   419.0  0.80%             Tennessee   4877203.0   5689427.0   6346105.0   \n",
              "40  3559.0  6.90%                 Texas  16986335.0  20851028.0  25145561.0   \n",
              "41   367.0  0.70%            New Mexico   1515069.0   1819017.0   2059179.0   \n",
              "42   252.0  0.50%               Alabama   4040389.0   4447207.0   4779736.0   \n",
              "43   710.0  1.40%           Mississippi   2575475.0   2844754.0   2967297.0   \n",
              "44   955.0  1.80%               Georgia   6478149.0   8186653.0   9687653.0   \n",
              "45   769.0  1.50%        South Carolina   3486310.0   4012023.0   4625364.0   \n",
              "46   295.0  0.60%              Arkansas   2350624.0   2673293.0   2915918.0   \n",
              "47   339.0  0.70%             Louisiana   4221826.0   4469035.0   4533372.0   \n",
              "48  2539.0  4.90%               Florida  12938071.0  15982571.0  18801310.0   \n",
              "49   845.0  1.60%              Michigan   9295287.0   9938823.0   9883640.0   \n",
              "50    56.0  0.10%                Alaska    550043.0    626933.0    710231.0   \n",
              "\n",
              "     Pop. 2020  percapitaG  percapita               State_y        GDP  \\\n",
              "0    1455271.0   74.212982   0.000074                Hawaii    82884.6   \n",
              "1    7705281.0  105.771613   0.000106            Washington   604253.8   \n",
              "2    1084225.0  426.110816   0.000426               Montana    51508.8   \n",
              "3    1362359.0   63.859820   0.000064                 Maine    69271.8   \n",
              "4     779094.0   89.847952   0.000090          North Dakota    54854.2   \n",
              "5     886667.0   65.413509   0.000065          South Dakota    54789.4   \n",
              "6     576851.0   81.476846   0.000081               Wyoming    36323.5   \n",
              "7    5893718.0   57.179526   0.000057             Wisconsin   337714.0   \n",
              "8    1839106.0   52.743018   0.000053                 Idaho    83821.6   \n",
              "9     643077.0   48.205736   0.000048               Vermont    33435.0   \n",
              "10   5706494.0   62.385065   0.000062             Minnesota   373739.3   \n",
              "11   4237256.0  127.204965   0.000127                Oregon   243776.8   \n",
              "12   1377529.0   31.215314   0.000031         New Hampshire    87621.0   \n",
              "13   3190369.0   89.331359   0.000089                  Iowa   194267.6   \n",
              "14   7029917.0   33.001812   0.000033         Massachusetts   582476.8   \n",
              "15   1961504.0  108.080330   0.000108              Nebraska   133439.0   \n",
              "16  20201249.0   86.083786   0.000086              New York  1724759.1   \n",
              "17  13002700.0   69.908557   0.000070          Pennsylvania   771897.9   \n",
              "18   3605944.0   52.136140   0.000052           Connecticut   276422.9   \n",
              "19   1097379.0   78.368549   0.000078          Rhode Island    60556.3   \n",
              "20   9288994.0   66.207385   0.000066            New Jersey   618579.3   \n",
              "21   6785528.0   75.749448   0.000076               Indiana   375336.7   \n",
              "22   3104614.0  134.316215   0.000134                Nevada   170943.8   \n",
              "23   3271616.0   55.630001   0.000056                  Utah   197561.9   \n",
              "24  39538223.0  125.701147   0.000126            California  3007187.7   \n",
              "25  11799448.0   92.122954   0.000092                  Ohio   677561.2   \n",
              "26  12812508.0   72.819467   0.000073              Illinois   858366.9   \n",
              "27    689545.0  268.292860   0.000268  District of Columbia   144554.8   \n",
              "28    989948.0  128.289567   0.000128              Delaware    75786.5   \n",
              "29   1793716.0   53.520178   0.000054         West Virginia    75855.0   \n",
              "30   6177224.0   85.637173   0.000086              Maryland   410674.7   \n",
              "31   5773714.0  108.249214   0.000108              Colorado   382584.7   \n",
              "32   4505836.0   67.689991   0.000068              Kentucky   212539.6   \n",
              "33   2937880.0  132.748785   0.000133                Kansas   175141.8   \n",
              "34   8631393.0   66.964857   0.000067              Virginia   549535.8   \n",
              "35   6154913.0  121.853875   0.000122              Missouri   329367.2   \n",
              "36   7151502.0   85.017105   0.000085               Arizona   373719.0   \n",
              "37   3959353.0   96.985543   0.000097              Oklahoma   188056.6   \n",
              "38  10439388.0  105.657535   0.000106        North Carolina   589829.0   \n",
              "39   6910840.0   60.629388   0.000061             Tennessee   369574.3   \n",
              "40  29145505.0  122.111454   0.000122                 Texas  1775587.8   \n",
              "41   2117522.0  173.315791   0.000173            New Mexico    98472.1   \n",
              "42   5024279.0   50.156450   0.000050               Alabama   226896.5   \n",
              "43   2961279.0  239.761265   0.000240           Mississippi   113845.7   \n",
              "44  10711908.0   89.153118   0.000089               Georgia   622627.8   \n",
              "45   5118425.0  150.241529   0.000150        South Carolina   244881.7   \n",
              "46   3011524.0   97.957048   0.000098              Arkansas   130750.7   \n",
              "47   4657757.0   72.781813   0.000073             Louisiana   235437.4   \n",
              "48  21538187.0  117.883645   0.000118               Florida  1106035.5   \n",
              "49  10077331.0   83.851567   0.000084              Michigan   515119.9   \n",
              "50    733391.0   76.357632   0.000076                Alaska    49820.0   \n",
              "\n",
              "    PerCapitaGDP         Pop  \n",
              "0          57087   1455271.0  \n",
              "1          78284   7705281.0  \n",
              "2          47421   1084225.0  \n",
              "3          50850   1362359.0  \n",
              "4          70420    779094.0  \n",
              "5          61762    886667.0  \n",
              "6          62923    576851.0  \n",
              "7          57314   5893718.0  \n",
              "8          45364   1839106.0  \n",
              "9          52039    643077.0  \n",
              "10         65486   5706494.0  \n",
              "11         57474   4237256.0  \n",
              "12         63593   1377529.0  \n",
              "13         60924   3190369.0  \n",
              "14         82948   7029917.0  \n",
              "15         68031   1961504.0  \n",
              "16         85575  20201249.0  \n",
              "17         59424  13002700.0  \n",
              "18         76779   3605944.0  \n",
              "19         55241   1097379.0  \n",
              "20         66659   9288994.0  \n",
              "21         55313   6785528.0  \n",
              "22         54894   3104614.0  \n",
              "23         60201   3271616.0  \n",
              "24         76132  39538223.0  \n",
              "25         57466  11799448.0  \n",
              "26         67137  12812508.0  \n",
              "27        209471    689545.0  \n",
              "28         76406    989948.0  \n",
              "29         42382   1793716.0  \n",
              "30         66531   6177224.0  \n",
              "31         66142   5773714.0  \n",
              "32         47190   4505836.0  \n",
              "33         59656   2937880.0  \n",
              "34         63662   8631393.0  \n",
              "35         53517   6154913.0  \n",
              "36         52065   7151502.0  \n",
              "37         47465   3959353.0  \n",
              "38         56404  10439388.0  \n",
              "39         53406   6910840.0  \n",
              "40         60771  29145505.0  \n",
              "41         46502   2117522.0  \n",
              "42         45155   5024279.0  \n",
              "43         38502   2961279.0  \n",
              "44         58050  10711908.0  \n",
              "45         47728   5118425.0  \n",
              "46         43407   3011524.0  \n",
              "47         50619   4657757.0  \n",
              "48         51277  21538187.0  \n",
              "49         51166  10077331.0  \n",
              "50         68019    733391.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6329ba94-586e-4706-978b-2fbd7f0bc1e2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STATE_NAME</th>\n",
              "      <th>DRAWSEQ</th>\n",
              "      <th>STATE_FIPS</th>\n",
              "      <th>SUB_REGION</th>\n",
              "      <th>STATE_ABBR</th>\n",
              "      <th>geometry</th>\n",
              "      <th>State_x</th>\n",
              "      <th>Calls</th>\n",
              "      <th>Ratio</th>\n",
              "      <th>Name</th>\n",
              "      <th>Pop. 1990</th>\n",
              "      <th>Pop. 2000</th>\n",
              "      <th>Pop. 2010</th>\n",
              "      <th>Pop. 2020</th>\n",
              "      <th>percapitaG</th>\n",
              "      <th>percapita</th>\n",
              "      <th>State_y</th>\n",
              "      <th>GDP</th>\n",
              "      <th>PerCapitaGDP</th>\n",
              "      <th>Pop</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>HI</td>\n",
              "      <td>MULTIPOLYGON (((-160.07380 22.00418, -160.0497...</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>108.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>1108229.0</td>\n",
              "      <td>1211497.0</td>\n",
              "      <td>1360301.0</td>\n",
              "      <td>1455271.0</td>\n",
              "      <td>74.212982</td>\n",
              "      <td>0.000074</td>\n",
              "      <td>Hawaii</td>\n",
              "      <td>82884.6</td>\n",
              "      <td>57087</td>\n",
              "      <td>1455271.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Washington</td>\n",
              "      <td>2</td>\n",
              "      <td>53</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>WA</td>\n",
              "      <td>MULTIPOLYGON (((-122.40202 48.22522, -122.4628...</td>\n",
              "      <td>Washington</td>\n",
              "      <td>815.0</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Washington</td>\n",
              "      <td>4866669.0</td>\n",
              "      <td>5894281.0</td>\n",
              "      <td>6724540.0</td>\n",
              "      <td>7705281.0</td>\n",
              "      <td>105.771613</td>\n",
              "      <td>0.000106</td>\n",
              "      <td>Washington</td>\n",
              "      <td>604253.8</td>\n",
              "      <td>78284</td>\n",
              "      <td>7705281.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Montana</td>\n",
              "      <td>3</td>\n",
              "      <td>30</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>MT</td>\n",
              "      <td>POLYGON ((-111.47543 44.70216, -111.48080 44.6...</td>\n",
              "      <td>Montana</td>\n",
              "      <td>462.0</td>\n",
              "      <td>0.90%</td>\n",
              "      <td>Montana</td>\n",
              "      <td>799065.0</td>\n",
              "      <td>902200.0</td>\n",
              "      <td>989415.0</td>\n",
              "      <td>1084225.0</td>\n",
              "      <td>426.110816</td>\n",
              "      <td>0.000426</td>\n",
              "      <td>Montana</td>\n",
              "      <td>51508.8</td>\n",
              "      <td>47421</td>\n",
              "      <td>1084225.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Maine</td>\n",
              "      <td>4</td>\n",
              "      <td>23</td>\n",
              "      <td>New England</td>\n",
              "      <td>ME</td>\n",
              "      <td>MULTIPOLYGON (((-69.77728 44.07415, -69.85993 ...</td>\n",
              "      <td>Maine</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Maine</td>\n",
              "      <td>1227928.0</td>\n",
              "      <td>1274779.0</td>\n",
              "      <td>1328361.0</td>\n",
              "      <td>1362359.0</td>\n",
              "      <td>63.859820</td>\n",
              "      <td>0.000064</td>\n",
              "      <td>Maine</td>\n",
              "      <td>69271.8</td>\n",
              "      <td>50850</td>\n",
              "      <td>1362359.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>ND</td>\n",
              "      <td>POLYGON ((-98.73044 45.93827, -99.00683 45.939...</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>70.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>638800.0</td>\n",
              "      <td>642237.0</td>\n",
              "      <td>672591.0</td>\n",
              "      <td>779094.0</td>\n",
              "      <td>89.847952</td>\n",
              "      <td>0.000090</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>54854.2</td>\n",
              "      <td>70420</td>\n",
              "      <td>779094.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>6</td>\n",
              "      <td>46</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>SD</td>\n",
              "      <td>POLYGON ((-102.78838 42.99530, -103.00588 42.9...</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>58.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>696004.0</td>\n",
              "      <td>754858.0</td>\n",
              "      <td>814180.0</td>\n",
              "      <td>886667.0</td>\n",
              "      <td>65.413509</td>\n",
              "      <td>0.000065</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>54789.4</td>\n",
              "      <td>61762</td>\n",
              "      <td>886667.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>7</td>\n",
              "      <td>56</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>WY</td>\n",
              "      <td>POLYGON ((-104.05362 41.69822, -104.05550 41.5...</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>453589.0</td>\n",
              "      <td>493786.0</td>\n",
              "      <td>563626.0</td>\n",
              "      <td>576851.0</td>\n",
              "      <td>81.476846</td>\n",
              "      <td>0.000081</td>\n",
              "      <td>Wyoming</td>\n",
              "      <td>36323.5</td>\n",
              "      <td>62923</td>\n",
              "      <td>576851.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>8</td>\n",
              "      <td>55</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>WI</td>\n",
              "      <td>MULTIPOLYGON (((-87.74856 44.96162, -87.83999 ...</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>337.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>4891954.0</td>\n",
              "      <td>5363757.0</td>\n",
              "      <td>5686986.0</td>\n",
              "      <td>5893718.0</td>\n",
              "      <td>57.179526</td>\n",
              "      <td>0.000057</td>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>337714.0</td>\n",
              "      <td>57314</td>\n",
              "      <td>5893718.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>9</td>\n",
              "      <td>16</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>ID</td>\n",
              "      <td>POLYGON ((-117.02630 43.67903, -117.02379 43.7...</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>1006734.0</td>\n",
              "      <td>1293957.0</td>\n",
              "      <td>1567582.0</td>\n",
              "      <td>1839106.0</td>\n",
              "      <td>52.743018</td>\n",
              "      <td>0.000053</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>83821.6</td>\n",
              "      <td>45364</td>\n",
              "      <td>1839106.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>10</td>\n",
              "      <td>50</td>\n",
              "      <td>New England</td>\n",
              "      <td>VT</td>\n",
              "      <td>POLYGON ((-73.25806 42.74606, -73.26928 42.747...</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>31.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>562758.0</td>\n",
              "      <td>608613.0</td>\n",
              "      <td>625741.0</td>\n",
              "      <td>643077.0</td>\n",
              "      <td>48.205736</td>\n",
              "      <td>0.000048</td>\n",
              "      <td>Vermont</td>\n",
              "      <td>33435.0</td>\n",
              "      <td>52039</td>\n",
              "      <td>643077.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>11</td>\n",
              "      <td>27</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>MN</td>\n",
              "      <td>POLYGON ((-91.73037 43.49957, -92.07753 43.499...</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>356.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>4375665.0</td>\n",
              "      <td>4919631.0</td>\n",
              "      <td>5303925.0</td>\n",
              "      <td>5706494.0</td>\n",
              "      <td>62.385065</td>\n",
              "      <td>0.000062</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>373739.3</td>\n",
              "      <td>65486</td>\n",
              "      <td>5706494.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>OR</td>\n",
              "      <td>POLYGON ((-121.44151 41.99433, -122.28471 42.0...</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>539.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>2842337.0</td>\n",
              "      <td>3421524.0</td>\n",
              "      <td>3831074.0</td>\n",
              "      <td>4237256.0</td>\n",
              "      <td>127.204965</td>\n",
              "      <td>0.000127</td>\n",
              "      <td>Oregon</td>\n",
              "      <td>243776.8</td>\n",
              "      <td>57474</td>\n",
              "      <td>4237256.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>13</td>\n",
              "      <td>33</td>\n",
              "      <td>New England</td>\n",
              "      <td>NH</td>\n",
              "      <td>POLYGON ((-72.27992 42.72047, -72.45577 42.725...</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>43.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>1109252.0</td>\n",
              "      <td>1235807.0</td>\n",
              "      <td>1316470.0</td>\n",
              "      <td>1377529.0</td>\n",
              "      <td>31.215314</td>\n",
              "      <td>0.000031</td>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>87621.0</td>\n",
              "      <td>63593</td>\n",
              "      <td>1377529.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>IA</td>\n",
              "      <td>POLYGON ((-91.12013 40.70544, -91.12930 40.682...</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>285.0</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>2776831.0</td>\n",
              "      <td>2926538.0</td>\n",
              "      <td>3046355.0</td>\n",
              "      <td>3190369.0</td>\n",
              "      <td>89.331359</td>\n",
              "      <td>0.000089</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>194267.6</td>\n",
              "      <td>60924</td>\n",
              "      <td>3190369.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>15</td>\n",
              "      <td>25</td>\n",
              "      <td>New England</td>\n",
              "      <td>MA</td>\n",
              "      <td>MULTIPOLYGON (((-71.31933 41.77220, -71.33980 ...</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>232.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>6016425.0</td>\n",
              "      <td>6349364.0</td>\n",
              "      <td>6547629.0</td>\n",
              "      <td>7029917.0</td>\n",
              "      <td>33.001812</td>\n",
              "      <td>0.000033</td>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>582476.8</td>\n",
              "      <td>82948</td>\n",
              "      <td>7029917.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>16</td>\n",
              "      <td>31</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>NE</td>\n",
              "      <td>POLYGON ((-101.40739 40.00100, -102.05154 39.9...</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>212.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>1578417.0</td>\n",
              "      <td>1711230.0</td>\n",
              "      <td>1826341.0</td>\n",
              "      <td>1961504.0</td>\n",
              "      <td>108.080330</td>\n",
              "      <td>0.000108</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>133439.0</td>\n",
              "      <td>68031</td>\n",
              "      <td>1961504.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>New York</td>\n",
              "      <td>17</td>\n",
              "      <td>36</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>NY</td>\n",
              "      <td>MULTIPOLYGON (((-79.76324 42.26733, -79.44402 ...</td>\n",
              "      <td>New York</td>\n",
              "      <td>1739.0</td>\n",
              "      <td>3.40%</td>\n",
              "      <td>New York</td>\n",
              "      <td>17990778.0</td>\n",
              "      <td>18977026.0</td>\n",
              "      <td>19378102.0</td>\n",
              "      <td>20201249.0</td>\n",
              "      <td>86.083786</td>\n",
              "      <td>0.000086</td>\n",
              "      <td>New York</td>\n",
              "      <td>1724759.1</td>\n",
              "      <td>85575</td>\n",
              "      <td>20201249.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>18</td>\n",
              "      <td>42</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>PA</td>\n",
              "      <td>POLYGON ((-77.47579 39.71962, -78.09595 39.725...</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>909.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>11882842.0</td>\n",
              "      <td>12280548.0</td>\n",
              "      <td>12702379.0</td>\n",
              "      <td>13002700.0</td>\n",
              "      <td>69.908557</td>\n",
              "      <td>0.000070</td>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>771897.9</td>\n",
              "      <td>59424</td>\n",
              "      <td>13002700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>19</td>\n",
              "      <td>09</td>\n",
              "      <td>New England</td>\n",
              "      <td>CT</td>\n",
              "      <td>POLYGON ((-73.53039 41.52275, -73.51715 41.665...</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>188.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>3287116.0</td>\n",
              "      <td>3405650.0</td>\n",
              "      <td>3574097.0</td>\n",
              "      <td>3605944.0</td>\n",
              "      <td>52.136140</td>\n",
              "      <td>0.000052</td>\n",
              "      <td>Connecticut</td>\n",
              "      <td>276422.9</td>\n",
              "      <td>76779</td>\n",
              "      <td>3605944.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>20</td>\n",
              "      <td>44</td>\n",
              "      <td>New England</td>\n",
              "      <td>RI</td>\n",
              "      <td>MULTIPOLYGON (((-71.79019 41.60131, -71.79261 ...</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>86.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>1003464.0</td>\n",
              "      <td>1048259.0</td>\n",
              "      <td>1052567.0</td>\n",
              "      <td>1097379.0</td>\n",
              "      <td>78.368549</td>\n",
              "      <td>0.000078</td>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>60556.3</td>\n",
              "      <td>55241</td>\n",
              "      <td>1097379.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>21</td>\n",
              "      <td>34</td>\n",
              "      <td>Middle Atlantic</td>\n",
              "      <td>NJ</td>\n",
              "      <td>POLYGON ((-75.48928 39.71486, -75.47597 39.720...</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>615.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7747750.0</td>\n",
              "      <td>8414764.0</td>\n",
              "      <td>8791894.0</td>\n",
              "      <td>9288994.0</td>\n",
              "      <td>66.207385</td>\n",
              "      <td>0.000066</td>\n",
              "      <td>New Jersey</td>\n",
              "      <td>618579.3</td>\n",
              "      <td>66659</td>\n",
              "      <td>9288994.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>22</td>\n",
              "      <td>18</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>IN</td>\n",
              "      <td>POLYGON ((-86.34161 38.17729, -86.36435 38.193...</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>514.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>5544156.0</td>\n",
              "      <td>6080827.0</td>\n",
              "      <td>6483802.0</td>\n",
              "      <td>6785528.0</td>\n",
              "      <td>75.749448</td>\n",
              "      <td>0.000076</td>\n",
              "      <td>Indiana</td>\n",
              "      <td>375336.7</td>\n",
              "      <td>55313</td>\n",
              "      <td>6785528.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>23</td>\n",
              "      <td>32</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>NV</td>\n",
              "      <td>POLYGON ((-119.15245 38.41180, -119.31883 38.5...</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>417.0</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>1201675.0</td>\n",
              "      <td>1998250.0</td>\n",
              "      <td>2700551.0</td>\n",
              "      <td>3104614.0</td>\n",
              "      <td>134.316215</td>\n",
              "      <td>0.000134</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>170943.8</td>\n",
              "      <td>54894</td>\n",
              "      <td>3104614.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Utah</td>\n",
              "      <td>24</td>\n",
              "      <td>49</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>UT</td>\n",
              "      <td>POLYGON ((-114.04727 38.13765, -114.04509 38.5...</td>\n",
              "      <td>Utah</td>\n",
              "      <td>182.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>Utah</td>\n",
              "      <td>1722850.0</td>\n",
              "      <td>2233183.0</td>\n",
              "      <td>2763885.0</td>\n",
              "      <td>3271616.0</td>\n",
              "      <td>55.630001</td>\n",
              "      <td>0.000056</td>\n",
              "      <td>Utah</td>\n",
              "      <td>197561.9</td>\n",
              "      <td>60201</td>\n",
              "      <td>3271616.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>California</td>\n",
              "      <td>25</td>\n",
              "      <td>06</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>CA</td>\n",
              "      <td>MULTIPOLYGON (((-121.66522 38.16929, -121.7823...</td>\n",
              "      <td>California</td>\n",
              "      <td>4970.0</td>\n",
              "      <td>9.60%</td>\n",
              "      <td>California</td>\n",
              "      <td>29811427.0</td>\n",
              "      <td>33871653.0</td>\n",
              "      <td>37253956.0</td>\n",
              "      <td>39538223.0</td>\n",
              "      <td>125.701147</td>\n",
              "      <td>0.000126</td>\n",
              "      <td>California</td>\n",
              "      <td>3007187.7</td>\n",
              "      <td>76132</td>\n",
              "      <td>39538223.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>26</td>\n",
              "      <td>39</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>OH</td>\n",
              "      <td>POLYGON ((-83.27276 38.60926, -83.29004 38.596...</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>1087.0</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>10847115.0</td>\n",
              "      <td>11353336.0</td>\n",
              "      <td>11536504.0</td>\n",
              "      <td>11799448.0</td>\n",
              "      <td>92.122954</td>\n",
              "      <td>0.000092</td>\n",
              "      <td>Ohio</td>\n",
              "      <td>677561.2</td>\n",
              "      <td>57466</td>\n",
              "      <td>11799448.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>27</td>\n",
              "      <td>17</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>IL</td>\n",
              "      <td>POLYGON ((-88.07159 37.51104, -88.08791 37.476...</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>933.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>11430602.0</td>\n",
              "      <td>12419927.0</td>\n",
              "      <td>12830632.0</td>\n",
              "      <td>12812508.0</td>\n",
              "      <td>72.819467</td>\n",
              "      <td>0.000073</td>\n",
              "      <td>Illinois</td>\n",
              "      <td>858366.9</td>\n",
              "      <td>67137</td>\n",
              "      <td>12812508.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>28</td>\n",
              "      <td>11</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>DC</td>\n",
              "      <td>POLYGON ((-77.00793 38.96667, -76.91090 38.890...</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>185.0</td>\n",
              "      <td>0.40%</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>606900.0</td>\n",
              "      <td>572086.0</td>\n",
              "      <td>601723.0</td>\n",
              "      <td>689545.0</td>\n",
              "      <td>268.292860</td>\n",
              "      <td>0.000268</td>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>144554.8</td>\n",
              "      <td>209471</td>\n",
              "      <td>689545.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>29</td>\n",
              "      <td>10</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>DE</td>\n",
              "      <td>POLYGON ((-75.70707 38.55759, -75.71071 38.649...</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>127.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>666168.0</td>\n",
              "      <td>783559.0</td>\n",
              "      <td>897934.0</td>\n",
              "      <td>989948.0</td>\n",
              "      <td>128.289567</td>\n",
              "      <td>0.000128</td>\n",
              "      <td>Delaware</td>\n",
              "      <td>75786.5</td>\n",
              "      <td>76406</td>\n",
              "      <td>989948.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>30</td>\n",
              "      <td>54</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>WV</td>\n",
              "      <td>POLYGON ((-79.23166 38.48050, -79.27236 38.437...</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>96.0</td>\n",
              "      <td>0.20%</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>1793477.0</td>\n",
              "      <td>1808193.0</td>\n",
              "      <td>1852994.0</td>\n",
              "      <td>1793716.0</td>\n",
              "      <td>53.520178</td>\n",
              "      <td>0.000054</td>\n",
              "      <td>West Virginia</td>\n",
              "      <td>75855.0</td>\n",
              "      <td>42382</td>\n",
              "      <td>1793716.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>31</td>\n",
              "      <td>24</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>MD</td>\n",
              "      <td>MULTIPOLYGON (((-75.71071 38.64967, -75.70707 ...</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>529.0</td>\n",
              "      <td>1.00%</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>4780753.0</td>\n",
              "      <td>5296647.0</td>\n",
              "      <td>5773552.0</td>\n",
              "      <td>6177224.0</td>\n",
              "      <td>85.637173</td>\n",
              "      <td>0.000086</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>410674.7</td>\n",
              "      <td>66531</td>\n",
              "      <td>6177224.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>32</td>\n",
              "      <td>08</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>CO</td>\n",
              "      <td>POLYGON ((-102.04446 37.64147, -102.04201 37.3...</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>625.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>3294473.0</td>\n",
              "      <td>4302086.0</td>\n",
              "      <td>5029196.0</td>\n",
              "      <td>5773714.0</td>\n",
              "      <td>108.249214</td>\n",
              "      <td>0.000108</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>382584.7</td>\n",
              "      <td>66142</td>\n",
              "      <td>5773714.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>33</td>\n",
              "      <td>21</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>KY</td>\n",
              "      <td>MULTIPOLYGON (((-86.51067 36.65507, -86.77054 ...</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>305.0</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>3686892.0</td>\n",
              "      <td>4042193.0</td>\n",
              "      <td>4339367.0</td>\n",
              "      <td>4505836.0</td>\n",
              "      <td>67.689991</td>\n",
              "      <td>0.000068</td>\n",
              "      <td>Kentucky</td>\n",
              "      <td>212539.6</td>\n",
              "      <td>47190</td>\n",
              "      <td>4505836.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>34</td>\n",
              "      <td>20</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>KS</td>\n",
              "      <td>POLYGON ((-95.07193 37.00148, -95.40662 37.000...</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>390.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>2477588.0</td>\n",
              "      <td>2688925.0</td>\n",
              "      <td>2853118.0</td>\n",
              "      <td>2937880.0</td>\n",
              "      <td>132.748785</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>175141.8</td>\n",
              "      <td>59656</td>\n",
              "      <td>2937880.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>35</td>\n",
              "      <td>51</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>VA</td>\n",
              "      <td>MULTIPOLYGON (((-79.14406 36.54620, -79.21680 ...</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>578.0</td>\n",
              "      <td>1.10%</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>6189197.0</td>\n",
              "      <td>7079057.0</td>\n",
              "      <td>8001024.0</td>\n",
              "      <td>8631393.0</td>\n",
              "      <td>66.964857</td>\n",
              "      <td>0.000067</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>549535.8</td>\n",
              "      <td>63662</td>\n",
              "      <td>8631393.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>36</td>\n",
              "      <td>29</td>\n",
              "      <td>West North Central</td>\n",
              "      <td>MO</td>\n",
              "      <td>POLYGON ((-89.10503 36.95392, -89.12965 36.866...</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>750.0</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>5116901.0</td>\n",
              "      <td>5596564.0</td>\n",
              "      <td>5988927.0</td>\n",
              "      <td>6154913.0</td>\n",
              "      <td>121.853875</td>\n",
              "      <td>0.000122</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>329367.2</td>\n",
              "      <td>53517</td>\n",
              "      <td>6154913.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>37</td>\n",
              "      <td>04</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>AZ</td>\n",
              "      <td>POLYGON ((-114.52063 33.02771, -114.55909 33.0...</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>608.0</td>\n",
              "      <td>1.20%</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>3665339.0</td>\n",
              "      <td>5130247.0</td>\n",
              "      <td>6392017.0</td>\n",
              "      <td>7151502.0</td>\n",
              "      <td>85.017105</td>\n",
              "      <td>0.000085</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>373719.0</td>\n",
              "      <td>52065</td>\n",
              "      <td>7151502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>38</td>\n",
              "      <td>40</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>OK</td>\n",
              "      <td>POLYGON ((-94.43932 34.92915, -94.44596 34.735...</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>384.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>3145576.0</td>\n",
              "      <td>3450451.0</td>\n",
              "      <td>3751351.0</td>\n",
              "      <td>3959353.0</td>\n",
              "      <td>96.985543</td>\n",
              "      <td>0.000097</td>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>188056.6</td>\n",
              "      <td>47465</td>\n",
              "      <td>3959353.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>39</td>\n",
              "      <td>37</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>NC</td>\n",
              "      <td>MULTIPOLYGON (((-83.98845 34.98915, -84.11815 ...</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>1103.0</td>\n",
              "      <td>2.10%</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>6632448.0</td>\n",
              "      <td>8046346.0</td>\n",
              "      <td>9535483.0</td>\n",
              "      <td>10439388.0</td>\n",
              "      <td>105.657535</td>\n",
              "      <td>0.000106</td>\n",
              "      <td>North Carolina</td>\n",
              "      <td>589829.0</td>\n",
              "      <td>56404</td>\n",
              "      <td>10439388.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>40</td>\n",
              "      <td>47</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>TN</td>\n",
              "      <td>POLYGON ((-83.95461 35.45554, -84.01256 35.407...</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>419.0</td>\n",
              "      <td>0.80%</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>4877203.0</td>\n",
              "      <td>5689427.0</td>\n",
              "      <td>6346105.0</td>\n",
              "      <td>6910840.0</td>\n",
              "      <td>60.629388</td>\n",
              "      <td>0.000061</td>\n",
              "      <td>Tennessee</td>\n",
              "      <td>369574.3</td>\n",
              "      <td>53406</td>\n",
              "      <td>6910840.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Texas</td>\n",
              "      <td>41</td>\n",
              "      <td>48</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>TX</td>\n",
              "      <td>MULTIPOLYGON (((-105.99889 31.39394, -106.2132...</td>\n",
              "      <td>Texas</td>\n",
              "      <td>3559.0</td>\n",
              "      <td>6.90%</td>\n",
              "      <td>Texas</td>\n",
              "      <td>16986335.0</td>\n",
              "      <td>20851028.0</td>\n",
              "      <td>25145561.0</td>\n",
              "      <td>29145505.0</td>\n",
              "      <td>122.111454</td>\n",
              "      <td>0.000122</td>\n",
              "      <td>Texas</td>\n",
              "      <td>1775587.8</td>\n",
              "      <td>60771</td>\n",
              "      <td>29145505.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>42</td>\n",
              "      <td>35</td>\n",
              "      <td>Mountain</td>\n",
              "      <td>NM</td>\n",
              "      <td>POLYGON ((-109.04950 32.44204, -109.05135 32.7...</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>367.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>1515069.0</td>\n",
              "      <td>1819017.0</td>\n",
              "      <td>2059179.0</td>\n",
              "      <td>2117522.0</td>\n",
              "      <td>173.315791</td>\n",
              "      <td>0.000173</td>\n",
              "      <td>New Mexico</td>\n",
              "      <td>98472.1</td>\n",
              "      <td>46502</td>\n",
              "      <td>2117522.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>43</td>\n",
              "      <td>01</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>AL</td>\n",
              "      <td>POLYGON ((-85.07007 31.98070, -85.11515 31.907...</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>252.0</td>\n",
              "      <td>0.50%</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>4040389.0</td>\n",
              "      <td>4447207.0</td>\n",
              "      <td>4779736.0</td>\n",
              "      <td>5024279.0</td>\n",
              "      <td>50.156450</td>\n",
              "      <td>0.000050</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>226896.5</td>\n",
              "      <td>45155</td>\n",
              "      <td>5024279.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>44</td>\n",
              "      <td>28</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>MS</td>\n",
              "      <td>POLYGON ((-88.45080 31.43562, -88.43456 31.120...</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>710.0</td>\n",
              "      <td>1.40%</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>2575475.0</td>\n",
              "      <td>2844754.0</td>\n",
              "      <td>2967297.0</td>\n",
              "      <td>2961279.0</td>\n",
              "      <td>239.761265</td>\n",
              "      <td>0.000240</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>113845.7</td>\n",
              "      <td>38502</td>\n",
              "      <td>2961279.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>45</td>\n",
              "      <td>13</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>GA</td>\n",
              "      <td>MULTIPOLYGON (((-85.13017 31.77885, -85.13156 ...</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>955.0</td>\n",
              "      <td>1.80%</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>6478149.0</td>\n",
              "      <td>8186653.0</td>\n",
              "      <td>9687653.0</td>\n",
              "      <td>10711908.0</td>\n",
              "      <td>89.153118</td>\n",
              "      <td>0.000089</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>622627.8</td>\n",
              "      <td>58050</td>\n",
              "      <td>10711908.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>46</td>\n",
              "      <td>45</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>SC</td>\n",
              "      <td>MULTIPOLYGON (((-81.75959 33.19538, -81.76988 ...</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>769.0</td>\n",
              "      <td>1.50%</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>3486310.0</td>\n",
              "      <td>4012023.0</td>\n",
              "      <td>4625364.0</td>\n",
              "      <td>5118425.0</td>\n",
              "      <td>150.241529</td>\n",
              "      <td>0.000150</td>\n",
              "      <td>South Carolina</td>\n",
              "      <td>244881.7</td>\n",
              "      <td>47728</td>\n",
              "      <td>5118425.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>47</td>\n",
              "      <td>05</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>AR</td>\n",
              "      <td>POLYGON ((-94.46169 34.19677, -94.45262 34.508...</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>295.0</td>\n",
              "      <td>0.60%</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>2350624.0</td>\n",
              "      <td>2673293.0</td>\n",
              "      <td>2915918.0</td>\n",
              "      <td>3011524.0</td>\n",
              "      <td>97.957048</td>\n",
              "      <td>0.000098</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>130750.7</td>\n",
              "      <td>43407</td>\n",
              "      <td>3011524.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>48</td>\n",
              "      <td>22</td>\n",
              "      <td>West South Central</td>\n",
              "      <td>LA</td>\n",
              "      <td>MULTIPOLYGON (((-93.70752 30.23958, -93.69938 ...</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>339.0</td>\n",
              "      <td>0.70%</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4221826.0</td>\n",
              "      <td>4469035.0</td>\n",
              "      <td>4533372.0</td>\n",
              "      <td>4657757.0</td>\n",
              "      <td>72.781813</td>\n",
              "      <td>0.000073</td>\n",
              "      <td>Louisiana</td>\n",
              "      <td>235437.4</td>\n",
              "      <td>50619</td>\n",
              "      <td>4657757.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Florida</td>\n",
              "      <td>49</td>\n",
              "      <td>12</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>FL</td>\n",
              "      <td>MULTIPOLYGON (((-80.78566 28.78519, -80.76242 ...</td>\n",
              "      <td>Florida</td>\n",
              "      <td>2539.0</td>\n",
              "      <td>4.90%</td>\n",
              "      <td>Florida</td>\n",
              "      <td>12938071.0</td>\n",
              "      <td>15982571.0</td>\n",
              "      <td>18801310.0</td>\n",
              "      <td>21538187.0</td>\n",
              "      <td>117.883645</td>\n",
              "      <td>0.000118</td>\n",
              "      <td>Florida</td>\n",
              "      <td>1106035.5</td>\n",
              "      <td>51277</td>\n",
              "      <td>21538187.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>East North Central</td>\n",
              "      <td>MI</td>\n",
              "      <td>MULTIPOLYGON (((-88.49753 48.17380, -88.62533 ...</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>845.0</td>\n",
              "      <td>1.60%</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>9295287.0</td>\n",
              "      <td>9938823.0</td>\n",
              "      <td>9883640.0</td>\n",
              "      <td>10077331.0</td>\n",
              "      <td>83.851567</td>\n",
              "      <td>0.000084</td>\n",
              "      <td>Michigan</td>\n",
              "      <td>515119.9</td>\n",
              "      <td>51166</td>\n",
              "      <td>10077331.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>51</td>\n",
              "      <td>02</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>AK</td>\n",
              "      <td>MULTIPOLYGON (((-161.33379 58.73325, -161.3824...</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>56.0</td>\n",
              "      <td>0.10%</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>550043.0</td>\n",
              "      <td>626933.0</td>\n",
              "      <td>710231.0</td>\n",
              "      <td>733391.0</td>\n",
              "      <td>76.357632</td>\n",
              "      <td>0.000076</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>49820.0</td>\n",
              "      <td>68019</td>\n",
              "      <td>733391.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6329ba94-586e-4706-978b-2fbd7f0bc1e2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6329ba94-586e-4706-978b-2fbd7f0bc1e2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6329ba94-586e-4706-978b-2fbd7f0bc1e2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c8cd17b2-dfae-44f2-a8d2-5c1c70c6a4d1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8cd17b2-dfae-44f2-a8d2-5c1c70c6a4d1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c8cd17b2-dfae-44f2-a8d2-5c1c70c6a4d1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_56cae3f9-4573-4b29-9c06-d74f602a788e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('usamap')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_56cae3f9-4573-4b29-9c06-d74f602a788e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('usamap');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "usamap",
              "summary": "{\n  \"name\": \"usamap\",\n  \"rows\": 51,\n  \"fields\": [\n    {\n      \"column\": \"STATE_NAME\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DRAWSEQ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 51,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          44,\n          41,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"STATE_FIPS\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"28\",\n          \"48\",\n          \"05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SUB_REGION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"East South Central\",\n          \"Mountain\",\n          \"Middle Atlantic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"STATE_ABBR\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"MS\",\n          \"TX\",\n          \"AR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geometry\",\n      \"properties\": {\n        \"dtype\": \"geometry\",\n        \"num_unique_values\": 51,\n        \"samples\": [\nnn          \"POLYGON ((-94.46169128436209 34.19676535931296, -94.45262428435365 34.508432359603226, -94.44596128434745 34.7356083598148, -94.43932228434126 34.929151359995046, -94.42855228433123 35.40054636043407, -94.46848528436841 35.64108836065809, -94.48593528438467 35.760310360769125, -94.54241728443728 36.10683536109185, -94.55311328444724 36.16452536114558, -94.60745328449784 36.478790361438264, -94.61725728450698 36.489414361448155, -94.0810522840076 36.49102436144966, -93.85752028379942 36.48978636144851, -93.59644928355627 36.489958361448664, -93.32834628330659 36.490261361448944, -93.29732428327769 36.49068136144933, -92.8522752828632 36.489884361448595, -92.7776352827937 36.48998336144869, -92.5230502825566 36.490921361449566, -92.14631928220574 36.49166036145025, -92.12764228218833 36.491435361450044, -91.68856028177942 36.49101836144965, -91.45298928156002 36.49043836144911, -91.41179628152166 36.49110136144973, -91.1339562812629 36.488015361446855, -90.804434280956 36.48926536144802, -90.5817322807486 36.49102236144965, -90.22447328041588 36.49281136145132, -90.15025928034676 36.491873361450445, -90.13737228033476 36.457476361418415, -90.11732228031609 36.45395536141513, -90.12392928032223 36.42262636138595, -90.11692528031571 36.40497636136952, -90.08027228028158 36.39745036136251, -90.05215728025539 36.3826153613487, -90.05029528025366 36.362668361330115, -90.06772928026989 36.325395361295406, -90.04984528025324 36.30053636127225, -90.06618728026845 36.272338361245986, -90.11001228030928 36.2580593612327, -90.13131328032911 36.21213536118992, -90.16140528035714 36.19700636117583, -90.21932128041108 36.17263136115313, -90.23232228042319 36.1612133611425, -90.23493928042562 36.137155361120094, -90.2638012804525 36.118829361103025, -90.28485128047211 36.11597236110036, -90.3153392805005 36.09172336107778, -90.37906228055985 35.98965636098272, -90.2835542804709 35.99122836098418, -89.96329128017263 35.99690836098948, -89.72183627994775 35.99995136099231, -89.71321527993973 35.96639736096106, -89.66427127989415 35.937894360934514, -89.64547927987664 35.91387336091215, -89.64941627988031 35.89436236089397, -89.66472827989458 35.885721360885924, -89.71476327994117 35.91150136090994, -89.73805627996286 35.915087360913276, -89.76299027998608 35.89688736089633, -89.76635527998921 35.884177360884486, -89.75779427998124 35.87149336087268, -89.70151827992883 35.84211336084531, -89.70090827992827 35.827590360831785, -89.73601927996097 35.80711436081272, -89.75987727998319 35.81749736082239, -89.79046428001168 35.805630360811335, -89.79998628002053 35.774300360782156, -89.82712428004581 35.7583473607673, -89.85995528007639 35.74826936075792, -89.90986828012288 35.754914360764104, -89.95112128016129 35.734345360744946, -89.95212128016223 35.712564360724656, -89.92982728014147 35.676344360690926, -89.89348728010762 35.656050360672026, -89.86526528008133 35.673384360688175, -89.85733028007394 35.67114136068608, -89.84928128006645 35.64530136066202, -89.86392228008009 35.6298253606476, -89.87752628009275 35.633414360650946, -89.9571332801669 35.60318336062279, -89.95811828016781 35.57867436059996, -89.92174728013394 35.546140360569666, -89.93126128014279 35.529313360554, -89.94763428015804 35.52698236055183, -89.96236028017177 35.532373360556846, -89.9896742801972 35.56175636058421, -90.03314028023767 35.552495360575584, -90.040991280245 35.54292836056668, -90.04190628024584 35.51252136053836, -89.99965328020649 35.44553736047597, -90.04687328025047 35.41718736044957, -90.06038528026305 35.41349436044613, -90.07402728027576 35.42659036045833, -90.0749352802766 35.47242636050102, -90.08232028028348 35.47828936050647, -90.10205128030186 35.47365136050216, -90.13736828033475 35.44260736047325, -90.17277028036771 35.42380136045573, -90.1679102803632 35.38433936041898, -90.14026028033744 35.38313036041785, -90.13256228033028 35.40768536044072, -90.11233528031144 35.41777436045011, -90.08525028028622 35.418365360450665, -90.0755682802772 35.40661336043972, -90.08722628028805 35.38159336041642, -90.10571328030527 35.366067360401956, -90.09879328029882 35.34567836038297, -90.10643828030595 35.31477236035418, -90.1570832803531 35.30633136034633, -90.169840280365 35.282653360324275, -90.15221628034858 35.26414536030704, -90.10603428030556 35.263935360306846, -90.09019528029081 35.254486360298046, -90.06905328027112 35.21282636025924, -90.07339428027517 35.19192236023977, -90.06252228026504 35.167005360216564, -90.064628280267 35.14747436019838, -90.08301628028413 35.12514036017758, -90.14382328034077 35.136626360188274, -90.16456828036009 35.12970336018183, -90.178439280373 35.108738360162306, -90.16917628036437 35.0779193601336, -90.19580428038917 35.04099036009921, -90.29190628047867 35.048551360106245, -90.30544828049129 35.00078836006176, -90.29960428048584 34.97857636004108, -90.24826428043804 34.94985636001434, -90.2419932804322 34.93900036000422, -90.24293928043308 34.9208273599873, -90.2668042804553 34.896608359964745, -90.29636928048284 34.88278735995187, -90.29954328048579 34.865057359935356, -90.30164928048775 34.85187435992308, -90.32292028050756 34.85036335992167, -90.34152128052489 34.860674359931274, -90.4040302805831 34.84113535991308, -90.42241028060022 34.83236535990491, -90.43364828061068 34.835451359907786, -90.42794128060537 34.872739359942514, -90.43818828061491 34.886277359955116, -90.47062928064513 34.88102035995023, -90.47481828064903 34.85782335992862, -90.45200528062777 34.82531535989835, -90.46680728064156 34.799761359874545, -90.44896928062495 34.7608493598383, -90.45153228062733 34.7412993598201, -90.48602628065946 34.72693335980672, -90.50452028067669 34.72995435980953, -90.51707128068837 34.748470359826776, -90.4988362806714 34.765884359843, -90.50138428067376 34.78993135986539, -90.51614728068752 34.80570035988008, -90.52736328069795 34.80742135988168, -90.54784928071705 34.790434359865856, -90.53338328070357 34.71335235979407, -90.51366828068521 34.702168359783656, -90.47008028064461 34.70435435978569, -90.46632628064111 34.67214035975569, -90.50891428068078 34.638166359724046, -90.53906728070886 34.63699535972296, -90.54765028071685 34.65190635973684, -90.53916628070895 34.686047359768644, -90.56116228072943 34.700386359781994, -90.57940528074643 34.645711359731074, -90.58809528075453 34.627916359714504, -90.57771928074486 34.604845359693016, -90.53072028070109 34.555751359647296, -90.53725128070717 34.54343035963582, -90.56578628073375 34.53261135962575, -90.5804502807474 34.5203243596143, -90.59015528075645 34.49660935959221, -90.57450528074186 34.45404935955258, -90.57922828074626 34.43310335953307, -90.60389428076924 34.40470335950662, -90.65734628081901 34.36601435947059, -90.65791828081954 34.330111359437154, -90.6794402808396 34.318079359425944, -90.68948128084895 34.32024935942796, -90.68124228084127 34.36350435946825, -90.68759028084719 34.37797635948173, -90.75541828091035 34.37226935947641, -90.76196428091644 34.36401835946873, -90.74786328090332 34.3178233594257, -90.7583602809131 34.27908135938962, -90.79263328094501 34.30006135940916, -90.80652628095795 34.29945135940859, -90.82394428097417 34.2774443593881, -90.83146628098118 34.22963935934358, -90.86351828101103 34.21926735933392, -90.92854528107159 34.250298359362816, -90.9338172810765 34.23478035934836, -90.92159428106511 34.20493535932057, -90.82302728097332 34.19065035930727, -90.80761528095897 34.16627835928457, -90.82897028097885 34.14876535926826, -90.84671628099538 34.14765135926722, -90.92902528107204 34.185754359302706, -90.95345528109479 34.15590835927491, -90.94235428108445 34.1260483592471, -90.90641828105099 34.1028553592255, -90.86643828101376 34.101059359223825, -90.88645028103238 34.04081835916772, -90.95057728109211 34.03139535915895, -90.97347328111343 34.01110435914005, -90.9753812811152 33.99471335912479, -90.96123528110203 33.978981359110136, -90.96489728110545 33.9675683590995, -90.98692428112597 33.960923359093314, -91.00036828113848 33.96847935910036, -91.00965328114712 33.99063435912099, -91.03116928116717 33.98580535911649, -91.06980528120314 34.00620135913549, -91.088963281221 33.99457335912466, -91.07581728120876 33.97474935910619, -91.01857228115544 33.93641335907049, -91.0614802811954 33.86718835900602, -91.0549262811893 33.84363335898408, -91.02896228116511 33.816695358958995, -90.99047828112927 33.79900735894252, -90.98414628112337 33.78545035892989, -90.99548328113393 33.77166035891705, -91.01854028115541 33.76408335891, -91.04351228117866 33.76966435891519, -91.06650028120008 33.786635358931, -91.10552628123642 33.7765483589216, -91.13709728126582 33.780195358925, -91.14300228127132 33.7719283589173, -91.13811128126676 33.723334358872044, -91.12905528125833 33.712550358862, -91.10467828123562 33.70834335885809, -91.05632228119059 33.71946735886844, -91.0389332811744 33.70560135885553, -91.03794128117347 33.68332735883479, -91.08387928121626 33.66269735881557, -91.12115828125097 33.67763935882949, -91.16341128129032 33.71842435886747, -91.21179128133538 33.709074358858764, -91.21525528133861 33.690832358841774, -91.20542028132945 33.670054358822426, -91.15451528128204 33.63714235879177, -91.15076128127855 33.616272358772335, -91.16813328129473 33.57735635873609, -91.18791728131315 33.5747923587337, -91.2268432813494 33.59059235874842, -91.22774328135024 33.55646235871663, -91.21359828133707 33.539388358700734, -91.20421328132832 33.53861835870001, -91.18295728130853 33.5234633586859, -91.18051628130625 33.512126358675346, -91.20775328133162 33.47351035863938, -91.2272622813498 33.459567358626394, -91.2329622813551 33.443557358611486, -91.18188128130753 33.447502358615154, -91.17184028129817 33.466758358633086, -91.17429028130046 33.50448135866822, -91.16508828129189 33.511893358675124, -91.12890828125819 33.49330435865781, -91.11906628124903 33.46978735863591, -91.11982128124973 33.452946358620224, -91.1306252812598 33.44323835861118, -91.19894128132341 33.422226358591615, -91.20427428132838 33.41441435858434, -91.18509328131051 33.391946358563416, -91.13774328126642 33.388994358560666, -91.09923728123056 33.4150133585849, -91.08590828121815 33.46297135862956, -91.07386828120694 33.466320358632686, -91.06108828119503 33.46012535862691, -91.06162228119553 33.43191235860064, -91.07879728121152 33.410295358580505, -91.10704928123783 33.39352235856488, -91.1305332812597 33.359518358533215, -91.14185528127025 33.32250135849874, -91.12261328125233 33.268623358448565, -91.10301328123408 33.24932935843059, -91.07643128120932 33.29247635847078, -91.05393928118838 33.29369335847191, -91.0405342811759 33.28204035846106, -91.05464928118903 33.2459003584274, -91.09211028122392 33.22581635840869, -91.08642628121864 33.16172335834901, -91.09596328122751 33.14520535833362, -91.12143828125124 33.131190358320566, -91.17773728130366 33.15040835833847, -91.19561328132032 33.14058535832932, -91.1906462813157 33.113345358303945, -91.14689828127494 33.09077435828293, -91.11789828124795 33.065693358259566, -91.1240932812537 33.047395358242525, -91.15679428128416 33.040555358236155, -91.16078428128787 33.02183335821872, -91.16224128128924 33.01316235821065, -91.25472728137537 33.013601358211055, -91.42764428153642 33.013545358211005, -91.4544702815614 33.01399935821142, -92.06344128212855 33.01015135820784, -92.71723628273745 33.01683935821407, -92.97898928298122 33.01827435821541, -93.23254328321735 33.019375358216436, -93.47907028344696 33.02152835821843, -93.51191528347755 33.02128735821822, -93.80993128375509 33.02272935821956, -94.03893128396837 33.0234223582202, -94.03669128396628 33.27045335845027, -94.03611628396574 33.55603435871623, -94.0616222839895 33.57733535873607, -94.08684628401299 33.58407535874235, -94.09889328402421 33.57312035873215, -94.15536028407679 33.56720635872664, -94.15971028408084 33.5938943587515, -94.20554128412353 33.5852003587434, -94.21108028412868 33.558108358718165, -94.2355642841515 33.56165635872147, -94.22323428414 33.585840358743994, -94.23743328415324 33.592543358750234, -94.27474228418798 33.56185735872166, -94.27227828418569 33.584726358742955, -94.27918228419212 33.58945235874736, -94.29901928421059 33.57997235873853, -94.30258228421391 33.55705435871718, -94.32895028423846 33.57325435873227, -94.37095928427759 33.547802358708566, -94.39546528430041 33.56042135872032, -94.37250828427904 33.57278035873183, -94.37082928427746 33.590160358748015, -94.37931428428537 33.59344435875107, -94.3936192842987 33.57507735873397, -94.40677228431095 33.573604358732595, -94.42867028433133 33.59725835875463, -94.44353228434518 33.596621358754035, -94.45175728435284 33.60446435876134, -94.43653628433866 33.616961358772976, -94.43611728433827 33.63656135879123, -94.47669128437606 33.63208135878706, -94.46858528436852 33.93931135907319, -94.46169128436209 34.19676535931296))\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State_x\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 881.0167152495005,\n        \"min\": 31.0,\n        \"max\": 4970.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          710.0,\n          3559.0,\n          295.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratio\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"0.20%\",\n          \"6.90%\",\n          \"1.10%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 1990\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5444133.829256475,\n        \"min\": 453589.0,\n        \"max\": 29811427.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2575475.0,\n          16986335.0,\n          2350624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2000\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6164012.421965483,\n        \"min\": 493786.0,\n        \"max\": 33871653.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2844754.0,\n          20851028.0,\n          2673293.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2010\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6823984.2713947,\n        \"min\": 563626.0,\n        \"max\": 37253956.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2967297.0,\n          25145561.0,\n          2915918.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop. 2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7408022.546174849,\n        \"min\": 576851.0,\n        \"max\": 39538223.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2961279.0,\n          29145505.0,\n          3011524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"percapitaG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64.49082889794252,\n        \"min\": 31.21531379738648,\n        \"max\": 426.1108164818188,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          239.76126531812773,\n          122.11145423625358,\n          97.95704766091852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"percapita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.449082889794251e-05,\n        \"min\": 3.121531379738648e-05,\n        \"max\": 0.0004261108164818188,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          0.00023976126531812775,\n          0.0001221114542362536,\n          9.795704766091853e-05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State_y\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Mississippi\",\n          \"Texas\",\n          \"Arkansas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 526743.5646338003,\n        \"min\": 33435.0,\n        \"max\": 3007187.7,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          113845.7,\n          1775587.8,\n          130750.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PerCapitaGDP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23635,\n        \"min\": 38502,\n        \"max\": 209471,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          38502,\n          60771,\n          43407\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pop\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7408022.546174849,\n        \"min\": 576851.0,\n        \"max\": 39538223.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          2961279.0,\n          29145505.0,\n          3011524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 91
        }
      ],
      "source": [
        "usamap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 92,
      "metadata": {
        "id": "EoSCaEJOniRE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "outputId": "fe8814b8-b9a5-4fd8-83c9-9d5f5bf8d381"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:              percapita   R-squared:                       0.055\n",
              "Model:                            OLS   Adj. R-squared:                  0.015\n",
              "Method:                 Least Squares   F-statistic:                     1.386\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.260\n",
              "Time:                        05:09:00   Log-Likelihood:                 421.67\n",
              "No. Observations:                  51   AIC:                            -837.3\n",
              "Df Residuals:                      48   BIC:                            -831.5\n",
              "Df Model:                           2                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "================================================================================\n",
              "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
              "--------------------------------------------------------------------------------\n",
              "Intercept     6.294e-05   2.63e-05      2.392      0.021       1e-05       0.000\n",
              "Pop          -3.588e-13   1.22e-12     -0.294      0.770   -2.82e-12     2.1e-12\n",
              "PerCapitaGDP  6.311e-10   3.83e-10      1.647      0.106   -1.39e-10     1.4e-09\n",
              "==============================================================================\n",
              "Omnibus:                       64.402   Durbin-Watson:                   2.179\n",
              "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              529.911\n",
              "Skew:                           3.297   Prob(JB):                    8.54e-116\n",
              "Kurtosis:                      17.349   Cond. No.                     2.88e+07\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 2.88e+07. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>        <td>percapita</td>    <th>  R-squared:         </th> <td>   0.055</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.015</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1.386</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th>  <td> 0.260</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:09:00</td>     <th>  Log-Likelihood:    </th> <td>  421.67</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>    51</td>      <th>  AIC:               </th> <td>  -837.3</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>    48</td>      <th>  BIC:               </th> <td>  -831.5</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "        <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th>    <td> 6.294e-05</td> <td> 2.63e-05</td> <td>    2.392</td> <td> 0.021</td> <td>    1e-05</td> <td>    0.000</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Pop</th>          <td>-3.588e-13</td> <td> 1.22e-12</td> <td>   -0.294</td> <td> 0.770</td> <td>-2.82e-12</td> <td>  2.1e-12</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>PerCapitaGDP</th> <td> 6.311e-10</td> <td> 3.83e-10</td> <td>    1.647</td> <td> 0.106</td> <td>-1.39e-10</td> <td>  1.4e-09</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td>64.402</td> <th>  Durbin-Watson:     </th> <td>   2.179</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 529.911</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 3.297</td> <th>  Prob(JB):          </th> <td>8.54e-116</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td>17.349</td> <th>  Cond. No.          </th> <td>2.88e+07</td> \n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 2.88e+07. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &    percapita     & \\textbf{  R-squared:         } &     0.055   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.015   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     1.386   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &    0.260    \\\\\n\\textbf{Time:}             &     05:09:00     & \\textbf{  Log-Likelihood:    } &    421.67   \\\\\n\\textbf{No. Observations:} &          51      & \\textbf{  AIC:               } &    -837.3   \\\\\n\\textbf{Df Residuals:}     &          48      & \\textbf{  BIC:               } &    -831.5   \\\\\n\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept}    &    6.294e-05  &     2.63e-05     &     2.392  &         0.021        &        1e-05    &        0.000     \\\\\n\\textbf{Pop}          &   -3.588e-13  &     1.22e-12     &    -0.294  &         0.770        &    -2.82e-12    &      2.1e-12     \\\\\n\\textbf{PerCapitaGDP} &    6.311e-10  &     3.83e-10     &     1.647  &         0.106        &    -1.39e-10    &      1.4e-09     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 64.402 & \\textbf{  Durbin-Watson:     } &     2.179  \\\\\n\\textbf{Prob(Omnibus):} &  0.000 & \\textbf{  Jarque-Bera (JB):  } &   529.911  \\\\\n\\textbf{Skew:}          &  3.297 & \\textbf{  Prob(JB):          } & 8.54e-116  \\\\\n\\textbf{Kurtosis:}      & 17.349 & \\textbf{  Cond. No.          } &  2.88e+07  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 2.88e+07. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 92
        }
      ],
      "source": [
        "lmusa.fit().summary()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lmnodc.fit().summary()"
      ],
      "metadata": {
        "id": "RJtn13O2KqiP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "outputId": "85c04e49-ca87-4d4d-db09-238c63e5992a"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:              percapita   R-squared:                       0.074\n",
              "Model:                            OLS   Adj. R-squared:                  0.033\n",
              "Method:                 Least Squares   F-statistic:                     1.799\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.177\n",
              "Time:                        05:09:00   Log-Likelihood:                 432.73\n",
              "No. Observations:                  48   AIC:                            -859.5\n",
              "Df Residuals:                      45   BIC:                            -853.8\n",
              "Df Model:                           2                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "================================================================================\n",
              "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
              "--------------------------------------------------------------------------------\n",
              "Intercept        0.0001   2.58e-05      3.953      0.000       5e-05       0.000\n",
              "Pop           1.134e-12   6.12e-13      1.854      0.070   -9.79e-14    2.37e-12\n",
              "PerCapitaGDP  -3.92e-10   4.41e-10     -0.889      0.379   -1.28e-09    4.96e-10\n",
              "==============================================================================\n",
              "Omnibus:                        6.295   Durbin-Watson:                   2.675\n",
              "Prob(Omnibus):                  0.043   Jarque-Bera (JB):                5.441\n",
              "Skew:                           0.808   Prob(JB):                       0.0658\n",
              "Kurtosis:                       3.327   Cond. No.                     5.94e+07\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 5.94e+07. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>        <td>percapita</td>    <th>  R-squared:         </th> <td>   0.074</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.033</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1.799</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th>  <td> 0.177</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:09:00</td>     <th>  Log-Likelihood:    </th> <td>  432.73</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>    48</td>      <th>  AIC:               </th> <td>  -859.5</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>    45</td>      <th>  BIC:               </th> <td>  -853.8</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "        <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th>    <td>    0.0001</td> <td> 2.58e-05</td> <td>    3.953</td> <td> 0.000</td> <td>    5e-05</td> <td>    0.000</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Pop</th>          <td> 1.134e-12</td> <td> 6.12e-13</td> <td>    1.854</td> <td> 0.070</td> <td>-9.79e-14</td> <td> 2.37e-12</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>PerCapitaGDP</th> <td> -3.92e-10</td> <td> 4.41e-10</td> <td>   -0.889</td> <td> 0.379</td> <td>-1.28e-09</td> <td> 4.96e-10</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td> 6.295</td> <th>  Durbin-Watson:     </th> <td>   2.675</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.043</td> <th>  Jarque-Bera (JB):  </th> <td>   5.441</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 0.808</td> <th>  Prob(JB):          </th> <td>  0.0658</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td> 3.327</td> <th>  Cond. No.          </th> <td>5.94e+07</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 5.94e+07. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &    percapita     & \\textbf{  R-squared:         } &     0.074   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.033   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     1.799   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &    0.177    \\\\\n\\textbf{Time:}             &     05:09:00     & \\textbf{  Log-Likelihood:    } &    432.73   \\\\\n\\textbf{No. Observations:} &          48      & \\textbf{  AIC:               } &    -859.5   \\\\\n\\textbf{Df Residuals:}     &          45      & \\textbf{  BIC:               } &    -853.8   \\\\\n\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept}    &       0.0001  &     2.58e-05     &     3.953  &         0.000        &        5e-05    &        0.000     \\\\\n\\textbf{Pop}          &    1.134e-12  &     6.12e-13     &     1.854  &         0.070        &    -9.79e-14    &     2.37e-12     \\\\\n\\textbf{PerCapitaGDP} &    -3.92e-10  &     4.41e-10     &    -0.889  &         0.379        &    -1.28e-09    &     4.96e-10     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  6.295 & \\textbf{  Durbin-Watson:     } &    2.675  \\\\\n\\textbf{Prob(Omnibus):} &  0.043 & \\textbf{  Jarque-Bera (JB):  } &    5.441  \\\\\n\\textbf{Skew:}          &  0.808 & \\textbf{  Prob(JB):          } &   0.0658  \\\\\n\\textbf{Kurtosis:}      &  3.327 & \\textbf{  Cond. No.          } & 5.94e+07  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 5.94e+07. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 94,
      "metadata": {
        "id": "f3wnpDqml4kY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "outputId": "674b031f-d6d4-4820-a81c-7768daa021a3"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Visualize the 'gdp' variable\n",
        "sns.histplot(usamap['PerCapitaGDP'], kde=True)\n",
        "plt.title(\"Distribution of GDP\")\n",
        "plt.show()\n",
        "\n",
        "# Visualize the 'pc' variable\n",
        "sns.histplot(usamap['percapita'], kde=True)\n",
        "plt.title(\"Distribution of PC\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 95,
      "metadata": {
        "id": "LOHUofmjhx3o"
      },
      "outputs": [],
      "source": [
        "lmdc = smf.ols(formula='percapita ~ Pop + PerCapitaGDP', data=nodc)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 96,
      "metadata": {
        "id": "UsGhS6hqiJR-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "outputId": "141dedbb-69c5-4f3b-9f69-20042c5b711c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                            OLS Regression Results                            \n",
              "==============================================================================\n",
              "Dep. Variable:              percapita   R-squared:                       0.074\n",
              "Model:                            OLS   Adj. R-squared:                  0.033\n",
              "Method:                 Least Squares   F-statistic:                     1.799\n",
              "Date:                Thu, 05 Sep 2024   Prob (F-statistic):              0.177\n",
              "Time:                        05:09:03   Log-Likelihood:                 432.73\n",
              "No. Observations:                  48   AIC:                            -859.5\n",
              "Df Residuals:                      45   BIC:                            -853.8\n",
              "Df Model:                           2                                         \n",
              "Covariance Type:            nonrobust                                         \n",
              "================================================================================\n",
              "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
              "--------------------------------------------------------------------------------\n",
              "Intercept        0.0001   2.58e-05      3.953      0.000       5e-05       0.000\n",
              "Pop           1.134e-12   6.12e-13      1.854      0.070   -9.79e-14    2.37e-12\n",
              "PerCapitaGDP  -3.92e-10   4.41e-10     -0.889      0.379   -1.28e-09    4.96e-10\n",
              "==============================================================================\n",
              "Omnibus:                        6.295   Durbin-Watson:                   2.675\n",
              "Prob(Omnibus):                  0.043   Jarque-Bera (JB):                5.441\n",
              "Skew:                           0.808   Prob(JB):                       0.0658\n",
              "Kurtosis:                       3.327   Cond. No.                     5.94e+07\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "[2] The condition number is large, 5.94e+07. This might indicate that there are\n",
              "strong multicollinearity or other numerical problems.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>        <td>percapita</td>    <th>  R-squared:         </th> <td>   0.074</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.033</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1.799</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>             <td>Thu, 05 Sep 2024</td> <th>  Prob (F-statistic):</th>  <td> 0.177</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                 <td>05:09:03</td>     <th>  Log-Likelihood:    </th> <td>  432.73</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>      <td>    48</td>      <th>  AIC:               </th> <td>  -859.5</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>          <td>    45</td>      <th>  BIC:               </th> <td>  -853.8</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "        <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Intercept</th>    <td>    0.0001</td> <td> 2.58e-05</td> <td>    3.953</td> <td> 0.000</td> <td>    5e-05</td> <td>    0.000</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Pop</th>          <td> 1.134e-12</td> <td> 6.12e-13</td> <td>    1.854</td> <td> 0.070</td> <td>-9.79e-14</td> <td> 2.37e-12</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>PerCapitaGDP</th> <td> -3.92e-10</td> <td> 4.41e-10</td> <td>   -0.889</td> <td> 0.379</td> <td>-1.28e-09</td> <td> 4.96e-10</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td> 6.295</td> <th>  Durbin-Watson:     </th> <td>   2.675</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.043</td> <th>  Jarque-Bera (JB):  </th> <td>   5.441</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td> 0.808</td> <th>  Prob(JB):          </th> <td>  0.0658</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td> 3.327</td> <th>  Cond. No.          </th> <td>5.94e+07</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 5.94e+07. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &    percapita     & \\textbf{  R-squared:         } &     0.074   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.033   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     1.799   \\\\\n\\textbf{Date:}             & Thu, 05 Sep 2024 & \\textbf{  Prob (F-statistic):} &    0.177    \\\\\n\\textbf{Time:}             &     05:09:03     & \\textbf{  Log-Likelihood:    } &    432.73   \\\\\n\\textbf{No. Observations:} &          48      & \\textbf{  AIC:               } &    -859.5   \\\\\n\\textbf{Df Residuals:}     &          45      & \\textbf{  BIC:               } &    -853.8   \\\\\n\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept}    &       0.0001  &     2.58e-05     &     3.953  &         0.000        &        5e-05    &        0.000     \\\\\n\\textbf{Pop}          &    1.134e-12  &     6.12e-13     &     1.854  &         0.070        &    -9.79e-14    &     2.37e-12     \\\\\n\\textbf{PerCapitaGDP} &    -3.92e-10  &     4.41e-10     &    -0.889  &         0.379        &    -1.28e-09    &     4.96e-10     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  6.295 & \\textbf{  Durbin-Watson:     } &    2.675  \\\\\n\\textbf{Prob(Omnibus):} &  0.043 & \\textbf{  Jarque-Bera (JB):  } &    5.441  \\\\\n\\textbf{Skew:}          &  0.808 & \\textbf{  Prob(JB):          } &   0.0658  \\\\\n\\textbf{Kurtosis:}      &  3.327 & \\textbf{  Cond. No.          } & 5.94e+07  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 5.94e+07. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."
          },
          "metadata": {},
          "execution_count": 96
        }
      ],
      "source": [
        "lmdc.fit().summary()\n",
        "#same relationship as world"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}